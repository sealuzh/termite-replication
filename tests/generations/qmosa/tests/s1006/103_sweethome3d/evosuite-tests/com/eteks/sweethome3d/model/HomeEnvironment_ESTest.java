/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:19:21 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.445582303213907
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth((-2164));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoHeight();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth(2800);
      homeEnvironment0.setSubpartSizeUnderLight((-2491.536F));
      homeEnvironment0.setPhotoWidth(2800);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoWidth(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("f-DHKP*2", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("jkfa.S%R&", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{/:", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("RATIO_4_3", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("0dj!E;iRV]", propertyChangeListenerProxy2);
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyColor();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture1);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture1.compareTo(catalogTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "!/", (Content) null, (-3163.181F), 0, "0dj!E;iRV]", false);
      CatalogTexture catalogTexture3 = new CatalogTexture("GpR", (Content) null, (-2227.78F), 2985.26F, true);
      HomeTexture homeTexture3 = new HomeTexture(homeTexture2);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        homeEnvironment1.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2!P_?AgPnpVM*qQU");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setSkyColor(19);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(1030);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setVideoWidth((-315));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoQuality((-22));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2!P_?AgPnpVM*qQU");
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals((-22), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("0dj!E;iRV]", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Bh*9=>W9t nZC", propertyChangeListenerProxy0);
      CatalogTexture catalogTexture0 = new CatalogTexture("0dj!E;iRV]", "L4u6{H(L?(-9Ic&R", (Content) null, 0, 0, "P;t2d", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 1624, 1624);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-2776));
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getSkyTexture();
      assertEquals((-2776), homeEnvironment1.getCeillingLightColor());
      
      homeEnvironment0.clone();
      homeEnvironment0.getSkyTexture();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      CatalogTexture catalogTexture1 = new CatalogTexture("c5!DqhIQ,!L'eP", "c5!DqhIQ,!L'eP", (Content) null, (-1012.0434F), 3948.0803F, "c5!DqhIQ,!L'eP", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setVideoFrameRate(0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment1.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture1);
      catalogTexture1.compareTo(catalogTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "!/", (Content) null, (-3163.181F), 0, "0dj!E;iRV]", false);
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.clone();
      assertEquals(0, homeEnvironment1.getPhotoWidth());
      
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment2.getPhotoWidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("LP7ty'\"", "LP7ty'\"", (Content) null, 0, 0, "c5!DqhIQ,!L'eP");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 1624, 896.7F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("NXWCQ05d+Im@?3f", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("NXWCQ05d+Im@?3f", propertyChangeListenerProxy1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("NXWCQ05d+Im@?3f", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("=&)%Ss;=]\"t#Q)-", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("{)0AxrUHS2", propertyChangeListenerProxy6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(6);
      homeEnvironment1.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      int int0 = homeEnvironment3.getSkyColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Random.setNextRandom((-877));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-877));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-877), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("0dj!E;iRV]", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Bh*9=>W9t nZC", propertyChangeListenerProxy0);
      CatalogTexture catalogTexture0 = new CatalogTexture("0dj!E;iRV]", "L4u6{H(L?(-9Ic&R", (Content) null, 0, (-3477.4F), "P;t2d", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 1624, 1624);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-2025));
      homeEnvironment1.setCeillingLightColor((-2776));
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getSkyTexture();
      assertEquals((-2776), homeEnvironment1.getCeillingLightColor());
      
      homeEnvironment0.clone();
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1581));
      homeEnvironment0.getVideoWidth();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("Sil>x1", (String) null, (-1071), "Sil>x1", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Sil>x1", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Sil>x1", propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth((-1083));
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals((-1083), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      homeEnvironment0.setSubpartSizeUnderLight((-924.6475F));
      homeEnvironment0.setGroundColor((-1071));
      CatalogTexture catalogTexture0 = new CatalogTexture("applicationSubFolder.Windows", uRLContent0, 590.9453F, 590.9453F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1071), homeTexture0, 3309, 443912471, 590.9453F);
      homeEnvironment1.setCeillingLightColor(1);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(3309);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(3309);
      System.setCurrentTimeMillis((-1071));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0841504119482797
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoQuality((-4522));
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setSkyColor(1012);
      homeEnvironment2.setAllLevelsVisible(false);
      Camera camera0 = new Camera(0.0F, 1.3333334F, (-4085.71F), 0.0F, 1.5F, 1779.9844F);
      homeEnvironment2.setPhotoQuality((-4522));
      Camera.convertTimeToTimeZone((-238L), "");
      linkedList0.offer(camera0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setPhotoWidth(1012);
      homeEnvironment2.getVideoCameraPath();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("VIDEO_FRAME_RATE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.VIDEO_FRAME_RATE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(5);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Camera camera0 = new Camera((-1.0F), 647.9F, 1012.0F, (-697.05F), 3457.9038F, 614.0F);
      Camera.convertTimeToTimeZone((-400L), "GROUND_COLOR");
      camera0.setTime((-32L));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      linkedList0.add(camera0);
      linkedList1.add(camera0);
      homeEnvironment0.setVideoWidth(0);
      linkedList1.clear();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(1524);
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment0.setCeillingLightColor((-65));
      homeEnvironment2.getPhotoQuality();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Random.setNextRandom((-877));
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-877), (-133.34F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-877), homeTexture0, (-877), (-877), 2068.77F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNotNull(homeTexture1);
      assertEquals(2068.77F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-877), homeEnvironment0.getSkyColor());
      assertEquals((-877), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-877), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-1.0F), 1799);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("T^Ref`,NQbxtIn^", temporaryURLContent0, 1799, 134.52747F);
      catalogTexture0.compareTo(catalogTexture1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, homeTexture0, (-3), homeTexture0, 8, 0.0F);
      homeEnvironment0.getGroundTexture();
      Random.setNextRandom(12);
      homeEnvironment0.getGroundTexture();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-3), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(8, homeEnvironment0.getLightColor());
      assertEquals(12, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("Sil>x1", (String) null, (-1071), "Sil>x1", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL0);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Sil>x1", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Sil>x1", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("NAME", propertyChangeListenerProxy2);
      homeEnvironment0.setSkyColor(10);
      homeEnvironment0.setCeillingLightColor((-1071));
      homeEnvironment0.setCeillingLightColor((-361));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getSkyColor();
      homeEnvironment1.getCeillingLightColor();
      int int0 = homeEnvironment1.getPhotoQuality();
      assertEquals(10, homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, (HomeTexture) null, 9, (HomeTexture) null, 987, 8192);
      homeEnvironment0.setSubpartSizeUnderLight(9);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(9.0F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-603));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("g", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Linux", (PropertyChangeListener) null);
      homeEnvironment0.setVideoWidth((-1486));
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("7\"Y,6kx?'8ZTnq '", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("Xxw", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy7);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-2028));
      homeEnvironment1.setCeillingLightColor(3129);
      homeEnvironment1.clone();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-1114), homeEnvironment0.getVideoHeight());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("jkfa.S%R&", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{/:", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("RATIO_4_3", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("0dj!E;iRV]", propertyChangeListenerProxy2);
      homeEnvironment0.setSkyColor(1624);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
      assertEquals(1624, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.836521786753116
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoQuality(300);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      AspectRatio aspectRatio2 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera camera0 = new Camera(300, (-62.0F), (-1613.22F), 2916.35F, (-1132.8856F), 1.0F);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setPhotoWidth((-1225));
      homeEnvironment1.getPhotoAspectRatio();
      Random.setNextRandom(4119);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(1012);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-1.5296428F), (-1.5296428F), (-2670.2737F), (-1.5296428F), (-2670.2737F), 0.0F);
      linkedList0.add(camera0);
      Camera camera1 = camera0.clone();
      homeEnvironment0.setVideoWidth((-4367));
      linkedList0.add(camera1);
      Camera camera2 = new Camera(1012, (-1.5296428F), (-1.5296428F), (-130.841F), (-1.5296428F), (-1.5296428F));
      linkedList0.offer(camera2);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-3275), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-2722.627F), (-2864.312F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1799), homeTexture0, (-1799), 974, (-2864.312F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals((-1799), homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-2864.312F), float0, 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(974, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1799), homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("0dj!E;iRV]");
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3947.9631F, "VIDEO_FRAME_RATE", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(924, homeTexture0, 0, homeTexture0, 1624, 3947.9631F);
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(924, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1624, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(3947.9631F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("Sil>x1", (String) null, (-1071), "Sil>x1", uRLStreamHandler0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("#Z[X&D'jy6k.@bML", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("j??i?!w3Ma", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("#Z[X&D'jy6k.@bML", propertyChangeListenerProxy1);
      homeEnvironment0.setSkyColor((-242));
      homeEnvironment0.setCeillingLightColor(19);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setCeillingLightColor(19);
      assertEquals(19, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("E*b", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("E*b", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("c5!DqhIQ,!L'eP", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("0dj!E;iRV]", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("SKY_COLOR", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1040026700508068
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality(5);
      homeEnvironment0.setVideoQuality(3860);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(5, 144.73645F, 825.4019F, 1.7777778F, 144.73645F, 5);
      camera0.setZ(452.00592F);
      camera0.setYaw(1.7777778F);
      Camera camera1 = camera0.clone();
      linkedList0.offer(camera1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment2.setVideoCameraPath(linkedList1);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth(5);
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment3.setPhotoQuality(5);
      Random.setNextRandom(25);
      homeEnvironment0.getVideoQuality();
      homeEnvironment3.getPhotoWidth();
      Random.setNextRandom(3860);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setGroundColor(13427964);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("{_I", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("[-", (PropertyChangeListener) null);
      homeEnvironment0.setSkyColor((-3096));
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("(q?/}Q0", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("LENS", propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoQuality(5);
      homeEnvironment0.setVideoQuality((-1937));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("tp%Zf:", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("Bq*.4RxntRzYA(", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals((-1937), homeEnvironment0.getVideoQuality());
      assertEquals(5, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      homeEnvironment0.setWallsAlpha(1624);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(4186, homeTexture0, (-1660), 0, (-2242.4778F));
      catalogTexture0.getCategory();
      try { 
        MockURL.URL("com.eteks.sweethome3d.model.TexturesCategory", "", (-638), "com.eteks.sweethome3d.model.AspectRatio");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-638
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("SKY_COLOR", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("SKY_COLOR", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("Invalid URL base for JAR entry", propertyChangeListenerProxy2);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Invalid URL base for JAR entry", "", "", "dzRwxjs'Y7.k{dv<*4");
      propertyChangeListenerProxy6.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("7\"Y,6kx?'8ZTnq '", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("7\"Y,6kx?'8ZTnq '", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy8);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor((-2028));
      homeEnvironment1.setLightColor(2996);
      homeEnvironment1.setCeillingLightColor(1073741824);
      homeEnvironment0.clone();
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality(5);
      Camera camera0 = new Camera((-1.0F), 2060.01F, 647.9F, (-697.05F), 0.0F, (-697.05F));
      Camera.convertTimeToTimeZone(0L, "GROUND_COLOR");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("applicationSubFolder.Windows", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.HomeEnvironment$Property", propertyChangeListenerProxy2);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "z!|w1$qkn1*a<i", object0, object0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("applicationSubFolder.Windows", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy(">-QCe7)o%tp", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor((-2028));
      homeEnvironment0.setLightColor((-2028));
      homeEnvironment0.setCeillingLightColor(3129);
      homeEnvironment0.clone();
      homeEnvironment1.getSkyColor();
      int int0 = homeEnvironment1.getPhotoQuality();
      assertEquals(3129, homeEnvironment0.getCeillingLightColor());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("Sil>x1", (String) null, (-1071), "Sil>x1", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "]z4@leUJ+CH[zG&", uRLContent0, (-3608), (-1923.8F), "e.~V|T(o|h6", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListener0);
      homeEnvironment0.setSkyColor((-3608));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals((-3608), homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("g", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Linux", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("-p.*YIsT4wF", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("Xxw", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy7);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight((-2146404931));
      homeEnvironment1.setSkyColor((-2028));
      homeEnvironment1.setLightColor(300);
      homeEnvironment1.setCeillingLightColor(3129);
      homeEnvironment1.clone();
      assertEquals(3129, homeEnvironment1.getCeillingLightColor());
      
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("*Dpx1ZF-!!t6`9Fe", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("*Dpx1ZF-!!t6`9Fe", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Ov", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("TqR", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("Ov", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy(")+&90p=", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("RATIO_4_3", propertyChangeListenerProxy8);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3396), (HomeTexture) null, (-509), (HomeTexture) null, (-509), 1.0F);
      homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(19);
      homeEnvironment0.setLightColor(19);
      homeEnvironment0.setCeillingLightColor((-3396));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-3396), homeEnvironment0.getCeillingLightColor());
      assertEquals(19, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      homeEnvironment0.setLightColor((-3608));
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListener0);
      homeEnvironment0.setSkyColor((-3608));
      homeEnvironment0.setCeillingLightColor(2968);
      homeEnvironment0.getLightColor();
      homeEnvironment0.clone();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 6;
      CatalogTexture catalogTexture0 = new CatalogTexture("SKY_COLOR", (Content) null, (-1885.422F), 2743.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogTexture catalogTexture1 = new CatalogTexture("SKY_COLOR", (Content) null, 826.0F, 2.0F, false);
      catalogTexture0.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, homeTexture0, (-2650), homeTexture0, 6, 2743.0F);
      homeEnvironment0.setPhotoHeight((-1444));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("SKY_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.SKY_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2254, homeTexture0, 0, 15, 0);
      TexturesCategory texturesCategory0 = new TexturesCategory("0dj!E;iRV]");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      homeEnvironment0.setPhotoQuality((-1));
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture("c5!DqhIQ,!L'eP", "c5!DqhIQ,!L'eP", (Content) null, (-1012.0434F), 1.0F, "LIGHT_COLOR", false);
      CatalogTexture catalogTexture2 = new CatalogTexture("OBSERVER_CAMERA_ELEVATION_ADJUSTED", (Content) null, (-1), 1.0F, false);
      CatalogTexture catalogTexture3 = new CatalogTexture("OBSERVER_CAMERA_ELEVATION_ADJUSTED", "0dj!E;iRV]", (Content) null, 15, (-1), "GpYE^O kNM", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture3);
      homeEnvironment0.clone();
      assertEquals((-1), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(3017);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        MockURL.URL("Tfg,c,;}M.", "", 13, "Tfg,c,;}M.");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: tfg,c,;}m.
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-31));
      homeEnvironment0.setPhotoWidth((-31));
      homeEnvironment0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("NME", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy8);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.TemporaryURLContent", propertyChangeListenerProxy9);
      PropertyChangeListenerProxy propertyChangeListenerProxy11 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy10);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("0", "{=<GTzi0.};G", propertyChangeListenerProxy5, propertyChangeListenerProxy4);
      propertyChangeListenerProxy10.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy5.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy12 = new PropertyChangeListenerProxy("NRst: M1#@", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy13 = new PropertyChangeListenerProxy("e*RE6V6O?z]Aprv", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy14 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy13);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1314, (HomeTexture) null, (-1627), 373, 373);
      homeEnvironment1.clone();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.3472989158733744
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(685);
      byte[] byteArray0 = new byte[0];
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality((-4196));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setPhotoHeight((-1534));
      homeEnvironment0.setAllLevelsVisible(false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment1.setSkyColor((-1534));
      homeEnvironment0.setPhotoQuality(685);
      homeEnvironment0.setVideoFrameRate((-1416));
      homeEnvironment0.setSkyColor((-1416));
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(13684944);
      homeEnvironment0.setPhotoHeight(13684944);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.getSubpartSizeUnderLight();
      System.setCurrentTimeMillis(13684944);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getDrawingMode();
      homeEnvironment1.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("O");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.O
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(205, (HomeTexture) null, 205, (HomeTexture) null, (-581), 205);
      homeEnvironment0.setLightColor(14);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(14, homeEnvironment0.getLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.938311329683084
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setGroundColor(3309);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|k");
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|k", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("|k", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("V#@]dj]v|", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("B4Bn=<Pu1{_$", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("e[Lw!", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("V#@]dj]v|", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("Ov", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy11 = new PropertyChangeListenerProxy("|k", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy12 = new PropertyChangeListenerProxy("J", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy13 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2680.0F);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality(5);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setGroundColor(5);
      homeEnvironment0.setPhotoWidth((-2494));
      homeEnvironment0.setVideoWidth((-2494));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setGroundColor((-303));
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5053262207700673
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      Camera camera0 = new Camera((-1.0F), 2060.01F, 647.9F, (-697.05F), 0.0F, (-697.05F));
      Camera.convertTimeToTimeZone(0L, "GROUND_COLOR");
      camera0.setTime((-32L));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoWidth(25);
      linkedList0.clear();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setVideoWidth(25);
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoWidth(1541);
      homeEnvironment2.setAllLevelsVisible(true);
      assertTrue(homeEnvironment2.isAllLevelsVisible());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 24, 24, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(24, homeTexture0, 1624, 24, 1624);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(24, homeTexture1, 24, (-3007), (-3065.7F));
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(400, homeTexture2, 1624, homeTexture1, 555, (-3007));
      int int0 = 12;
      homeEnvironment2.setLightColor(12);
      HomeTexture homeTexture3 = new HomeTexture(catalogTexture0);
      homeEnvironment2.getSubpartSizeUnderLight();
      // Undeclared exception!
      try { 
        homeEnvironment2.setSkyTexture(homeTexture0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      homeEnvironment0.setGroundColor(0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "", (Content) null, 3649.3525F, (-1446.55F), (String) null, false);
      catalogTexture1.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      TexturesCategory texturesCategory0 = new TexturesCategory("CEILING_LIGHT_COLOR");
      catalogTexture2.setCategory(texturesCategory0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture2);
      catalogTexture2.compareTo(catalogTexture0);
      Random.setNextRandom(1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "0dj!E;iRV]";
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      String string1 = "<:y$^Y]<Do.%NBg";
      try { 
        MockURL.URL("VIDEO_FRAME_RATE", "<:y$^Y]<Do.%NBg", 1093, "L5wD&*");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: video_frame_rate
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoAspectRatio();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("eH]^40[h2", propertyChangeListener0);
      homeEnvironment0.setWallsAlpha(3.8348503F);
      homeEnvironment0.setGroundColor(1851);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getGroundColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("eH]^40[h2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.eH]^40[h2
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, (String) null, "com.eteks.sweethome3d.tools.TemporaryURLContent", object1);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("Mpcm[TGAjK-RY", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1508, (HomeTexture) null, 13684944, (-33), 1662.3F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1508, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(1662.3F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-33), homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(boolean0);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("NME", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy8);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.TemporaryURLContent", propertyChangeListenerProxy9);
      PropertyChangeListenerProxy propertyChangeListenerProxy11 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy10);
      PropertyChangeListenerProxy propertyChangeListenerProxy12 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("g", propertyChangeListenerProxy1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "PHOTO_WIDTH", propertyChangeListenerProxy2, (Object) null);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Linux", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("7\"Y,6kx?'8ZTnq '", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("Xxw", propertyChangeListenerProxy4);
      homeEnvironment0.getSkyColor();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      
      homeEnvironment0.setSkyColor(13427964);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("PHOTO_HEIGHT", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("wUDvV+XJ#nd", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("7\"Y,6kx?'8ZTnq '", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("k:", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("k:", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("PHOTO_HEIGHT", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("S9v", propertyChangeListenerProxy7);
      homeEnvironment0.setSkyColor((-2028));
      homeEnvironment0.setLightColor((-2028));
      homeEnvironment0.setCeillingLightColor(26);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setGroundColor(13427964);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("{_I", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("[-", (PropertyChangeListener) null);
      int int0 = (-3096);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "{_I", propertyChangeListenerProxy0, propertyChangeListenerProxy0);
      homeEnvironment0.getCeillingLightColor();
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setPhotoHeight(1624);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      TexturesCategory texturesCategory0 = new TexturesCategory("c5!DqhIQ,!L'eP");
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture("sun.net.www.protocol", (Content) null, 0.0F, (-1444.388F));
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.setCeillingLightColor(1);
      Random.setNextRandom(0);
      homeEnvironment0.setLightColor((-1071));
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(1624.0F, float0, 0.01F);
      
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("tmporarySubFolder", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("could not load ", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy5);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, (String) null, "VIDEO_QUALITY", propertyChangeListenerProxy6);
      propertyChangeListenerProxy7.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(1624, homeEnvironment2.getSkyColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(0, homeEnvironment2.getLightColor());
      assertEquals(0, homeEnvironment2.getGroundColor());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment2, homeEnvironment0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BH_s5YM{P");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      URL uRL0 = MockURL.getFtpExample();
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("=:jP", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("=:jP", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("~N", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("h andPer", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy8);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy11 = new PropertyChangeListenerProxy("OBSERVER_CAMERA_ELEVATION_ADJUSTED", (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setSubpartSizeUnderLight((-448.16333F));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment2.setSkyColor((-1950));
      homeEnvironment1.setCeillingLightColor(3129);
      homeEnvironment2.clone();
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals(3129, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("NME", propertyChangeListenerProxy5);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Random.setNextRandom(1013);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("g", propertyChangeListenerProxy1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "PHOTO_WIDTH", propertyChangeListenerProxy2, (Object) null);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Linux", (PropertyChangeListener) null);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy4);
      Random.setNextRandom(6);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_QUALITY", uRLContent0, 1.0F, 6, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-585), homeTexture0, 6, 3513, 1.0F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-585), homeEnvironment0.getGroundColor());
      assertNotNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(3513, homeEnvironment0.getLightColor());
      assertEquals(6, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy8);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "PHOTO_WIDTH", propertyChangeListenerProxy2, propertyChangeListenerProxy3);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("Windows", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy11 = new PropertyChangeListenerProxy(".|", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy12 = new PropertyChangeListenerProxy("CEILING_LIGHT_COLOR", propertyChangeListenerProxy11);
      CatalogTexture catalogTexture0 = new CatalogTexture("{=<GTzi0.};G", (Content) null, (-3267), (-3267), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3267), homeTexture0, 320, homeTexture0, 0, (-3267));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-3267.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals((-3267), homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("mpZsk+us", "GROUND_TEXTURE", (Content) null, 1624.0F, (-3091), "''u)+n3y!laOc$P&tx|");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3091), homeTexture0, (-3091), homeTexture0, (-1), 1.7777778F);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-3091), homeEnvironment0.getSkyColor());
      assertEquals(1.7777778F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-3091), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertTrue(resourceURLContent0.isJAREntry());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.2102766800185374
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(21);
      homeEnvironment0.setVideoWidth(21);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth((-2164));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setPhotoWidth(2800);
      homeEnvironment0.setSubpartSizeUnderLight((-2491.536F));
      homeEnvironment0.setPhotoWidth(2800);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoWidth(21);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment0.setSkyColor((-2164));
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|k");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("NME", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy8);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.TemporaryURLContent", propertyChangeListenerProxy9);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2254, homeTexture0, 0, 15, 0);
      TexturesCategory texturesCategory0 = new TexturesCategory("0dj!E;iRV]");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture("c5!DqhIQ,!L'eP", "c5!DqhIQ,!L'eP", (Content) null, (-1012.0434F), 1.0F, "LIGHT_COLOR", false);
      homeEnvironment0.setGroundTexture(homeTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("OBSERVER_CAMERA_ELEVATION_ADJUSTED", (Content) null, (-1), 1.0F, false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(2254, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(15, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(1012);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1012, 1.0F, 1.0F, (-130.841F), 1.0F, 1.0F);
      linkedList0.offer(camera0);
      homeEnvironment0.setVideoQuality(1012);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(1012, homeEnvironment0.getVideoQuality());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      String string0 = "";
      homeEnvironment0.isAllLevelsVisible();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      String string1 = "dzR\\wxjs'Y7.k{dv<*4";
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("0", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("NME", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("dzRwxjs'Y7.k{dv<*4", propertyChangeListenerProxy8);
      String string2 = "";
      int int0 = (-1783);
      try { 
        MockURL.URL("com.eteks.sweethome3d.tools.TemporaryURLContent", "w*g5Wn{&E", (-1783), "com.eteks.sweethome3d.tools.TemporaryURLContent");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-1783
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-867.596F));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BH_s5YM{P");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling1));
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Random.setNextRandom((-877));
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 2704.22F, 2704.22F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-877), homeTexture0, (-2146869244), 1396, 2313.5452F);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getSkyTexture();
      System.setCurrentTimeMillis(923L);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      homeEnvironment0.setAllLevelsVisible(true);
      TexturesCategory texturesCategory0 = new TexturesCategory("0dj!E;iRV]");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      MockURL.getFtpExample();
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("eH]^40[h2", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "eH]^40[h2", (Object) null, homeEnvironment0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy0, "{@sDvCJq(i", aspectRatio0, "eH]^40[h2");
      propertyChangeEvent1.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeEnvironment0.setWallsAlpha((-1942.4762F));
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 4610.67F, 0.0F, "[");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(243, homeTexture0, (-2510), 13427964, 0.0F);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(13427964, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(243, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2510), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      homeEnvironment0.setGroundColor((-3608));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-3608), int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      TexturesCategory texturesCategory0 = new TexturesCategory((String) null);
      assertEquals(0, texturesCategory0.getTexturesCount());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      TexturesCategory texturesCategory0 = new TexturesCategory("q6Hv0cNPE");
      assertEquals("q6Hv0cNPE", texturesCategory0.getName());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "0dj!E;iRV]", (Content) null, 0, 0, "0dj!E;iRV]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      homeEnvironment0.setPhotoQuality(1624);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      catalogTexture1.compareTo(catalogTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "!/", (Content) null, (-3163.181F), 0, "0dj!E;iRV]", false);
      try { 
        MockURL.URL("", "", 1, "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("c5!DqhIQ,!L'eP", "z", (Content) null, 0, 0, "z");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1624, 0, 1624);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", (Content) null, (-1012.0434F), 3948.0803F, "VIDEO_FRAME_RATE", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      catalogTexture1.compareTo(catalogTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "!/", (Content) null, (-3163.181F), 0, "z", false);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(1624.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, int0);
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1624, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Super class isn't cloneable", propertyChangeListener0);
      homeEnvironment0.setSkyColor((-3608));
      homeEnvironment0.setCeillingLightColor(2968);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(2968, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(2);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("Sil>x1", (String) null, (-1071), "Sil>x1", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      URLStreamHandler uRLStreamHandler1 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("Sil>x1", "jar:", 6, "xI@DAB`9hLgy", uRLStreamHandler1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      String string0 = "com.eteks.sweethome3d.tools.URLContent";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        MockURL.URL("com.eteks.sweethome3d.tools.URLContent", "", (-1071), "xI@DAB`9hLgy");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-1071
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1952257861);
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|k");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(4067);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(uRLContent0, "", (Object) null, uRLContent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("VIDEO_QUALITY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.VIDEO_QUALITY
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m+R]6qNPQUkIF", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("os.name", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSkyColor((-2028));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.setLightColor((-2028));
      homeEnvironment3.setLightColor((-1071));
      homeEnvironment2.setCeillingLightColor((-1071));
      HomeEnvironment homeEnvironment4 = homeEnvironment1.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment4.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyColor();
      homeEnvironment3.getCeillingLightColor();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      String string0 = null;
      homeEnvironment0.clone();
      String string1 = "Sil>x1";
      String string2 = "PHOTO_HEIGHT";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("PHOTO_HEIGHT", "FIELD_OF_VIEW", 796, "FIELD_OF_VIEW", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL0);
      String string3 = "";
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2077.0F);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertTrue(boolean1 == boolean0);
  }
}
