/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 21:17:29 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.event.ComponentEvent;
import java.util.Collection;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import javax.swing.DefaultListCellRenderer;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      Collection collection0 = Controller.getPropertyChangeListeners();
      assertNotNull(collection0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden((ComponentEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getText();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource3 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource4 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.contains(113, 0);
      defaultListCellRenderer_UIResource0.applyComponentOrientation(componentOrientation0);
      defaultListCellRenderer_UIResource0.getContainerListeners();
      defaultListCellRenderer_UIResource4.setFocusable(true);
      try { 
        Controller.showCommonJColorChooserDialog(defaultListCellRenderer_UIResource1, "{IOH+WL>q`tB2mE", (Color) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Controller controller0 = null;
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }
}
