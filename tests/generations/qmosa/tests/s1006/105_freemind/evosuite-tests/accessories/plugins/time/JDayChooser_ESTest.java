/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 12:00:23 GMT 2020
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.filemode.FileController;
import java.awt.AWTKeyStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeListener;
import java.io.PrintWriter;
import java.text.DateFormatSymbols;
import java.text.NumberFormat;
import java.time.ZonedDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Set;
import java.util.TimeZone;
import javax.help.JHelpContentViewer;
import javax.help.plaf.basic.BasicContentViewerUI;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.JSeparator;
import javax.swing.JTextPane;
import javax.swing.MenuElement;
import javax.swing.plaf.basic.BasicRootPaneUI;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.text.AsyncBoxView;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.GapContent;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.gvt.renderer.StrokingTextPainter;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.runner.RunWith;
import plugins.map.MapDialog;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8645700957677156
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3237));
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.repaint((-3237), (-174), 1606, 432);
      StyleContext styleContext0 = new StyleContext();
      StyleContext.getDefaultStyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("lG60!|EN/#BTEcF");
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle((Style) null);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("lG60!|EN/#BTEcF", styleContext_NamedStyle1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      styleContext0.getFont((AttributeSet) styleContext_NamedStyle1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      KeyEvent keyEvent0 = new KeyEvent(jComboBox0, 841, 0L, 841, 422, 'C');
      keyEvent0.setKeyChar('{');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.getDayPanel();
      jDayChooser0.initDecorations();
      Locale locale0 = Locale.KOREA;
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setMonth((-3237));
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMinSelectableDate((Date) null);
      float float0 = 761.723F;
      jDayChooser0.setRequestFocusEnabled(true);
      Color color0 = null;
      try {
        color0 = new Color(2337.0261F, 2337.0261F, 761.723F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color parameter outside of expected range: Red Green Blue
         //
         verifyException("java.awt.Color", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3237));
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setLocation((-3237), 15);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-1), false, jDayChooser0);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser0, 29);
      focusEvent0.getOppositeComponent();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.toZonedDateTime();
      JDayChooser jDayChooser1 = (JDayChooser)focusEvent0.getOppositeComponent();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      Object object0 = new Object();
      ActionEvent actionEvent0 = new ActionEvent(object0, 49, "day", (-2220L), (-3237));
      // Undeclared exception!
      try { 
        jDayChooser1.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.616230775360895
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("freemind.modes.mindmapmode.actions.CopyAction");
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      styleContext0.getStyleNames();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext3.new NamedStyle(styleContext_NamedStyle1);
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext3.new NamedStyle(styleContext_NamedStyle2);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle("D}}A=g", (Style) null);
      Font font0 = styleContext3.getFont((AttributeSet) styleContext_NamedStyle1);
      Font font1 = Font.getFont("+NU=wKq~'", font0);
      jDayChooser0.setFont(font1);
      jDayChooser0.drawDays();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.834815241946004
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(4);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(23);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setFocus();
      jDayChooser0.drawWeeks();
      JPanel jPanel0 = new JPanel();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 23, 0L, 23, 23, 'h', 4);
      keyEvent0.setKeyChar('h');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.getDayPanel();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 1657);
      jDayChooser0.focusGained(focusEvent0);
      assertEquals(4, jDayChooser0.getDay());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.769861455747857
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3237));
      jDayChooser0.setLocation((-3237), 37);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-128), true, jDayChooser0);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser0, (-2197));
      focusEvent1.getOppositeComponent();
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke((-2197), 0, false);
      focusEvent1.setSource(aWTKeyStroke0);
      JDayChooser jDayChooser1 = (JDayChooser)focusEvent0.getOppositeComponent();
      focusEvent0.getOppositeComponent();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-3237));
      jDayChooser0.getWidth();
      JDayChooser jDayChooser2 = (JDayChooser)focusEvent0.getOppositeComponent();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 0, (-3237), 0, 37, 'X');
      keyEvent0.setKeyChar('X');
      jDayChooser1.keyPressed(keyEvent0);
      jDayChooser0.getDayPanel();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      Dimension dimension0 = jDayChooser2.getMinimumSize();
      jDayChooser1.setPreferredSize(dimension0);
      jDayChooser1.initDecorations();
      int int0 = jDayChooser1.getDay();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6844332392806765
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 0;
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      JRootPane jRootPane0 = new JRootPane();
      jDayChooser0.setDay(9999);
      SystemColor systemColor0 = SystemColor.controlShadow;
      jDayChooser0.setForeground(systemColor0);
      jRootPane0.getDefaultButton();
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getStyle("gGL^$w&Fs|uDgJ");
      AWTKeyStroke.getAWTKeyStroke(391, 11, false);
      FocusEvent focusEvent0 = new FocusEvent(jTextPane0, 11);
      focusEvent0.setSource((Object) null);
      focusEvent0.getOppositeComponent();
      focusEvent0.getOppositeComponent();
      int int1 = (-3361);
      jDayChooser0.setDay((-3361));
      jDayChooser0.setMonth((-3534));
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setEnabled(false);
      int int2 = 37;
      int int3 = 1151;
      char char0 = '|';
      MenuElement[] menuElementArray0 = new MenuElement[8];
      BrowseMode browseMode0 = new BrowseMode();
      FileController fileController0 = null;
      try {
        fileController0 = new FileController(browseMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8571681675653973
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2100), 65535L, 0, 0, 'U');
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.drawWeeks();
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(23);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 1088, 0L, 0, 2463, 'U', 0);
      jDayChooser0.setMaxDayCharacters(19);
      ActionEvent actionEvent0 = new ActionEvent(keyEvent1, 23, "day");
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      jDayChooser0.getMouseMotionListeners();
      KeyEvent keyEvent2 = new KeyEvent(jDayChooser0, 19, (-3319L), 0, 2463, 'R');
      jDayChooser0.keyPressed(keyEvent2);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.isDecorationBackgroundVisible();
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.797362550286864
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2100), 65535L, 0, 0, 'U');
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.drawWeeks();
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(23);
      jDayChooser0.keyPressed(keyEvent0);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 1088, 0L, 0, 2463, 'U', 0);
      jDayChooser0.setMaxDayCharacters(19);
      ActionEvent actionEvent0 = new ActionEvent(keyEvent1, 23, "day");
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.getMouseMotionListeners();
      KeyEvent keyEvent2 = new KeyEvent(jDayChooser0, 19, (-3319L), 0, 2463, 'R');
      jDayChooser0.keyPressed(keyEvent2);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setYear(8);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setLocation(8, 37);
      int int0 = (-128);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 37, false, jDayChooser0);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser0, 2319);
      focusEvent0.getOppositeComponent();
      AWTKeyStroke.getAWTKeyStroke(1587, 0, false);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.GVT_FONT;
      focusEvent0.setSource(gVTAttributedCharacterIterator_TextAttribute0);
      focusEvent0.getOppositeComponent();
      focusEvent1.getOppositeComponent();
      jDayChooser0.setDay(305);
      jDayChooser0.getWidth();
      focusEvent0.getOppositeComponent();
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent((Component) null, 0, (-128), 4, (-2066), 'X');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Boolean boolean0 = new Boolean(false);
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("freemind.modes.mindmapmode.actions.CopyAction");
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      styleContext0.getStyleNames();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext3.new NamedStyle(styleContext_NamedStyle1);
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext3.new NamedStyle(styleContext_NamedStyle2);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle("D}}A=g", (Style) null);
      Font font0 = styleContext3.getFont((AttributeSet) styleContext_NamedStyle1);
      Font font1 = Font.getFont("+NU=wKq~'", font0);
      jDayChooser0.setFont(font1);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getGraphics();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7325637712329622
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.addNotify();
      jDayChooser0.isPaintingTile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jDayChooser0.initDecorations();
      int int0 = 121;
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.setMaxDayCharacters(121);
      jDayChooser0.getDecorationBackgroundColor();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser0.getMinSelectableDate();
      try { 
        jDayChooser0.getMousePosition(true);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Container", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      JRootPane jRootPane0 = new JRootPane();
      jDayChooser0.setDay(9999);
      SystemColor systemColor0 = SystemColor.controlShadow;
      jDayChooser0.setForeground(systemColor0);
      jRootPane0.getDefaultButton();
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getStyle("day");
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle((Style) null);
      StyleContext styleContext1 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle("[1i;z{imcF^46yY=", (Style) null);
      styleContext1.getFont((AttributeSet) styleContext_NamedStyle0);
      ActionEvent actionEvent0 = new ActionEvent("[1i;z{imcF^46yY=", (-2208), "day", (-2208), (-2186));
      JDayChooser jDayChooser1 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6825446382850937
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-5));
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();
      MockGregorianCalendar.from(zonedDateTime0);
      mockGregorianCalendar0.getTimeZone();
      jDayChooser0.setMaxDayCharacters(24);
      jDayChooser0.getTreeLock();
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      focusEvent0.getOppositeComponent();
      jDayChooser0.setDay((-5));
      jDayChooser0.setMonth((-5));
      JDayChooser jDayChooser1 = new JDayChooser();
      Boolean boolean1 = new Boolean("0");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8319682670485906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setSelectableDateRange((Date) null, date0);
      jDayChooser0.getSelectedDay();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getSelectedDay();
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext1.new NamedStyle("JDayChooser", styleContext_NamedStyle1);
      jDayChooser0.updateUI();
      Date date1 = jDayChooser0.setMinSelectableDate(date0);
      assertSame(date1, date0);
      
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.setDecorationBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.841772283329955
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      SystemColor systemColor0 = SystemColor.control;
      jDayChooser0.setWeekdayForeground(systemColor0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2100), 65535L, 0, 0, 'U');
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.drawWeeks();
      Color color0 = Color.LIGHT_GRAY;
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(23);
      jDayChooser0.setMinSelectableDate(date1);
      jDayChooser0.setFocus();
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.setAlwaysFireDayProperty(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getMaximumSize();
      int int0 = 2326528;
      long long0 = 0L;
      int int1 = (-951);
      boolean boolean0 = true;
      MenuElement[] menuElementArray0 = new MenuElement[5];
      jDayChooser0.setAlwaysFireDayProperty(true);
      MapDialog mapDialog0 = new MapDialog();
      // Undeclared exception!
      try { 
        mapDialog0.getFreeMindMapController();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("plugins.map.MapDialog", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.775930045785651
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMonthChooser((JMonthChooser) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.getSelectedDay();
      jDayChooser0.setMonth(3063);
      jDayChooser0.isWeekOfYearVisible();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.76311071744537
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSeparator jSeparator0 = new JSeparator();
      FocusEvent focusEvent0 = new FocusEvent(jSeparator0, (-1));
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();
      MockGregorianCalendar.from(zonedDateTime0);
      mockGregorianCalendar0.getTimeZone();
      jDayChooser0.setMaxDayCharacters(9758);
      jDayChooser0.getTreeLock();
      assertEquals(14, jDayChooser0.getDay());
      
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      focusEvent0.getOppositeComponent();
      jSeparator0.getMinimumSize();
      jDayChooser0.setDay(8912);
      BasicRootPaneUI basicRootPaneUI0 = new BasicRootPaneUI();
      jSeparator0.addPropertyChangeListener((PropertyChangeListener) basicRootPaneUI0);
      KeyEvent keyEvent0 = new KeyEvent(jSeparator0, 8912, 9758, 2538, 2538, 'S');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.getDayPanel();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7419541084422874
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      SystemColor systemColor0 = SystemColor.control;
      systemColor0.getColorSpace();
      jDayChooser0.setWeekdayForeground(systemColor0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2100), 65535L, 46, 0, 'U');
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.drawWeeks();
      jDayChooser0.getSundayForeground();
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(23);
      jDayChooser0.setMinSelectableDate(date1);
      jDayChooser0.getSundayForeground();
      jDayChooser0.setDecorationBackgroundVisible(false);
      System.setCurrentTimeMillis(46);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7385791605222836
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.repaint(0, (-174), 1606, (-174));
      jDayChooser0.setMonth(966);
      MapDialog mapDialog0 = new MapDialog();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-3958), 0, 1606, 1, '2', 1);
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.659816019073003
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setLocation(238, 46);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("\" not found in enumeration");
      StyleContext styleContext3 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext3.new NamedStyle(styleContext_NamedStyle0);
      GapContent gapContent0 = new GapContent();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext1);
      Style style0 = defaultStyledDocument0.getLogicalStyle(2692);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext2.new NamedStyle("day", style0);
      Font font0 = styleContext1.getFont("org.apache.batik.dom.AbstractParentChildNode", 399, 2692);
      Font.getFont("[1i;z{imcF^46yY=");
      jDayChooser1.setFont(font0);
      jDayChooser0.drawDays();
      jDayChooser1.initDecorations();
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      jDayChooser1.setDecorationBackgroundColor(systemColor0);
      assertFalse(jDayChooser1.isWeekOfYearVisible());
      assertEquals(14, jDayChooser1.getDay());
      assertTrue(jDayChooser1.isDayBordersVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxSelectableDate((Date) null);
      float float0 = 761.723F;
      jDayChooser0.setRequestFocusEnabled(true);
      Color color0 = null;
      try {
        color0 = new Color(2337.0261F, 2337.0261F, 761.723F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color parameter outside of expected range: Red Green Blue
         //
         verifyException("java.awt.Color", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3510));
      jDayChooser0.getWeekdayForeground();
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) (-3510);
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) (-3510);
      floatArray0[4] = (float) (-3510);
      floatArray0[5] = (float) 0;
      Color.RGBtoHSB(0, 0, 0, floatArray0);
      jDayChooser0.getDaysInMonth();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JHelpContentViewer jHelpContentViewer0 = new JHelpContentViewer();
      BasicContentViewerUI basicContentViewerUI0 = new BasicContentViewerUI(jHelpContentViewer0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getCharacterElement((-2317));
      AsyncBoxView asyncBoxView0 = new AsyncBoxView(element0, 0);
      // Undeclared exception!
      try { 
        asyncBoxView0.getGraphics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.text.View", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Boolean boolean0 = new Boolean(false);
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("freemind.modes.mindmapmode.actions.CopyAction");
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      styleContext0.getStyleNames();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext3.new NamedStyle(styleContext_NamedStyle1);
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext3.new NamedStyle(styleContext_NamedStyle2);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle("D}}A=g", (Style) null);
      Font font0 = styleContext3.getFont((AttributeSet) styleContext_NamedStyle1);
      Font font1 = Font.getFont("+NU=wKq~'", font0);
      jDayChooser0.setFont(font1);
      jDayChooser0.drawDays();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getGraphics();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setSize(0, 0);
      jDayChooser0.drawDays();
      Color color0 = Color.lightGray;
      jDayChooser0.decorationBackgroundColor = color0;
      boolean boolean0 = false;
      Color color1 = Color.getColor("day", color0);
      jDayChooser0.decorationBackgroundColor.darker();
      jDayChooser0.setSundayForeground(color1);
      // Undeclared exception!
      try { 
        jDayChooser0.setCalendar((Calendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      TimeZone timeZone0 = TimeZone.getTimeZone("JDayChooser");
      Calendar calendar0 = MockCalendar.getInstance(timeZone0);
      jDayChooser0.setCalendar(calendar0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDecorationBordersVisible();
      Locale locale0 = Locale.US;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = null;
      try {
        mockSimpleDateFormat0 = new MockSimpleDateFormat("Center", dateFormatSymbols0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'C'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Locale locale0 = Locale.FRANCE;
      DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("day", dateFormatSymbols0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      mockSimpleDateFormat0.setNumberFormat(numberFormat0);
      jDayChooser0.getInputMethodListeners();
      Container container0 = new Container();
      FocusEvent focusEvent0 = new FocusEvent(container0, 63735, false, jDayChooser0);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser0, 63735);
      focusEvent1.setSource((Object) null);
      focusEvent0.getOppositeComponent();
      focusEvent1.getOppositeComponent();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Character character0 = new Character('y');
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke(character0, 4167);
      focusEvent1.setSource(aWTKeyStroke0);
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser0.setEnabled(true);
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners((-2892));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.addListeners(0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.setMonth(1046);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7736275476159054
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(4);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(100);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setFocus();
      jDayChooser0.setDayBordersVisible(false);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext3 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext3.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("day");
      StyleContext styleContext4 = StyleContext.getDefaultStyleContext();
      styleContext0.getStyleNames();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext4.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext4.new NamedStyle(styleContext_NamedStyle1);
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext1.new NamedStyle(styleContext_NamedStyle2);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext2.new NamedStyle("keystroke_show_all_attributes", styleContext_NamedStyle2);
      KeyEvent keyEvent0 = new KeyEvent(jTextPane0, 41, 0L, 13, 4, 'w');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(4, jDayChooser0.getDay());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7759300457856506
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3237));
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setLocation((-3237), 15);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-1), false, jDayChooser0);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser0, (-1437625606));
      focusEvent0.setSource(focusEvent1);
      focusEvent0.getOppositeComponent();
      focusEvent1.getOppositeComponent();
      Character character0 = new Character('r');
      AWTKeyStroke.getAWTKeyStroke(character0, (-1437625606));
      focusEvent0.setSource((Object) null);
      jDayChooser0.focusLost(focusEvent1);
      jDayChooser0.setWeekOfYearVisible(false);
      // Undeclared exception!
      try { 
        JDayChooser.main((String[]) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Boolean boolean0 = new Boolean("day");
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("freemind.modes.mindmapmode.actions.CopyAction");
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      styleContext0.getStyleNames();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext3.new NamedStyle(styleContext_NamedStyle1);
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext3.new NamedStyle(styleContext_NamedStyle2);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle("D}}A=g", (Style) null);
      Font font0 = styleContext3.getFont((AttributeSet) styleContext_NamedStyle1);
      Font font1 = Font.getFont("+NU=wKq~'", font0);
      jDayChooser0.setFont(font1);
      jDayChooser0.drawDays();
      jDayChooser0.updateUI();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.823677486564825
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3241));
      jDayChooser0.setLocation((-3241), (-3241));
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 24);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();
      GregorianCalendar gregorianCalendar0 = MockGregorianCalendar.from(zonedDateTime0);
      gregorianCalendar0.getTimeZone();
      jDayChooser0.setMaxDayCharacters(24);
      jDayChooser0.getTreeLock();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      focusEvent0.getOppositeComponent();
      jDayChooser0.setDay(35);
      jDayChooser0.setMonth(22);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 44, (-3922L), 35, 35, 'b');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.drawWeeks();
      assertEquals(30, jDayChooser0.getDay());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();
      MockGregorianCalendar.from(zonedDateTime0);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getKeyListeners();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(35);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.drawDays();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.785356185238014
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3241));
      jDayChooser0.setLocation((-3241), (-3241));
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 24);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();
      GregorianCalendar gregorianCalendar0 = MockGregorianCalendar.from(zonedDateTime0);
      gregorianCalendar0.getTimeZone();
      jDayChooser0.setMaxDayCharacters((-1));
      jDayChooser0.getTreeLock();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      focusEvent0.getOppositeComponent();
      jDayChooser0.setDay(35);
      jDayChooser0.setMonth(24);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.isWeekOfYearVisible();
      jDayChooser0.getSundayForeground();
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6885063804586076
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      int int0 = 0;
      jDayChooser0.setSize(0, 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.drawDays();
      Color color0 = Color.lightGray;
      jDayChooser0.decorationBackgroundColor = color0;
      boolean boolean0 = false;
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.getSundayForeground();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7180293135333957
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDay(0);
      jDayChooser0.setWeekOfYearVisible(true);
      int int0 = 0;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 797L, 49, 49, 'U');
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.drawWeeks();
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(0);
      KeyEvent keyEvent1 = null;
      try {
        keyEvent1 = new KeyEvent(jDayChooser0, 0, 23, 0, 0, '&', (-2526));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7736275476159054
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.defaultMinSelectableDate;
      jDayChooser0.setMaxSelectableDate(date0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2100), 65535L, 0, 0, 'U');
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.drawWeeks();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      
      jDayChooser0.updateUI();
      jDayChooser0.setMonth(23);
      jDayChooser0.setMonth(23);
      jDayChooser0.keyPressed(keyEvent0);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("JDayChooser", styleContext_NamedStyle0);
      Font font0 = styleContext0.getFont((AttributeSet) styleContext_NamedStyle0);
      Font font1 = Font.getFont("7gwV0wRw^", font0);
      jDayChooser0.setFont(font1);
      jDayChooser0.drawDays();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8345776960762037
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setYear((-3237));
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setLocation((-3237), 15);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-1), false, jDayChooser0);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser0, (-1437625606));
      focusEvent0.setSource(focusEvent1);
      focusEvent0.getOppositeComponent();
      focusEvent1.getOppositeComponent();
      Character character0 = new Character('r');
      AWTKeyStroke.getAWTKeyStroke(character0, (-1437625606));
      focusEvent0.setSource((Object) null);
      jDayChooser0.focusLost(focusEvent1);
      jDayChooser0.setEnabled(false);
      jDayChooser0.addListeners(21);
      MockPrintStream mockPrintStream0 = new MockPrintStream("BL)Myi/F<");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      jDayChooser0.list((PrintWriter) mockPrintWriter0);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.keyTyped((KeyEvent) null);
      jDayChooser0.updateUI();
      jDayChooser1.setWeekOfYearVisible(false);
      jDayChooser1.init();
      jDayChooser1.focusLost(focusEvent0);
      jDayChooser0.initDecorations();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getMinSelectableDate();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.799517964535027
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setSelectableDateRange((Date) null, date0);
      jDayChooser0.getSelectedDay();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getSelectedDay();
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext1.new NamedStyle("JDayChooser", styleContext_NamedStyle1);
      jDayChooser0.updateUI();
      jDayChooser0.setMinSelectableDate(date0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.698009616895563
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Windows");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte) (-32);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getLocale();
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setSelectableDateRange(date0, date0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Boolean boolean0 = new Boolean(false);
      jDayChooser0.createVolatileImage((-5), 0);
      jDayChooser0.setDayBordersVisible(true);
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getStyle("freemind.modes.mindmapmode.actions.CopyAction");
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      styleContext0.getStyleNames();
      styleContext2.getStyleNames();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext3.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext2.new NamedStyle((Style) null);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle("Dialog Plain 11", styleContext_NamedStyle2);
      Font font0 = styleContext1.getFont((AttributeSet) styleContext_NamedStyle0);
      Font.getFont("D>G} 3GI7~S", font0);
      jDayChooser0.setFont(font0);
      jDayChooser0.drawDays();
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      
      int int1 = jDayChooser0.getMaxDayCharacters();
      assertEquals(0, int1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getMaximumSize();
      jDayChooser0.getDayPanel();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.list();
      jYearChooser0.getLocale();
      jDayChooser0.setYearChooser(jYearChooser0);
      int int0 = 1602;
      jDayChooser0.getUIClassID();
      // Undeclared exception!
      try { 
        jDayChooser0.setFocusTraversalKeys(1602, (Set<? extends AWTKeyStroke>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid focus traversal key identifier
         //
         verifyException("java.awt.Container", e);
      }
  }
}
