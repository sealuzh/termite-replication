* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.application.international.MessageFormatter
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.io.ArchiveScanner
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 19149
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 19150
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:25:42.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:25:42.927 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:25:42.973 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:25:43.015 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:25:43.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:25:43.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:25:43.168 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:25:43.261 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:25:43.444 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:25:43.445 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:25:43.449 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:25:43.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Finished analyzing classpath
* Generating tests for class com.lts.io.ArchiveScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Generating tests for class com.lts.application.international.MessageFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/io/ArchiveScanner.java
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/application/international/MessageFormatter.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 10:26:01.939 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 10:26:03.939 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 10:26:19.434 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 10:26:38.694 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 10:27:13.432 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 10:31:05.523 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 624s and 651 generations, 483016 statements, best individual has fitness: 608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 130
* Number of covered goals: 118
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 150
* Number of covered goals: 141
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 34%
* Total number of goals: 50
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Generated 40 tests with total length 689
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'MessageFormatter_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/78_caloriecount/evosuite-tests
* Done!

* Computation finished
* Search finished after 671s and 899 generations, 894675 statements, best individual has fitness: 248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 67
* Number of covered goals: 58
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 45
* Number of covered goals: 40
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 202
* Number of covered goals: 192
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 45
* Number of covered goals: 40
* Generated 45 tests with total length 1179
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
[MASTER] 10:37:06.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 10:37:06.367 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("5cvQJB]dEe", "5cvQJB]dEe");
Locale locale0 = Locale.FRANCE;
Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
Vector<Locale> vector1 = new Vector<Locale>();
List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) vector1);
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) list0, locale_FilteringMode0);
Locale locale1 = new Locale("5cvQJB]dEe", "5cvQJB]dEe");
Locale locale2 = Locale.CANADA_FRENCH;
locale0.getDisplayScript(locale1);
locale0.getUnicodeLocaleKeys();
Locale.Category locale_Category0 = Locale.Category.DISPLAY;
Locale locale3 = Locale.KOREA;
Locale locale4 = Locale.CANADA_FRENCH;
locale1.getDisplayLanguage(locale4);
locale3.getUnicodeLocaleKeys();
Locale.setDefault(locale_Category0, locale1);
Locale locale5 = Locale.CANADA_FRENCH;
locale1.getDisplayLanguage(locale5);
Locale locale6 = Locale.GERMAN;
locale4.getExtensionKeys();
locale0.getScript();
Locale.lookup(vector0, list1);
locale0.getDisplayScript((Locale) null);
Locale locale7 = Locale.CANADA_FRENCH;
locale6.getDisplayCountry(locale7);
Locale.Category locale_Category1 = Locale.Category.DISPLAY;
Locale.setDefault(locale_Category1, locale6);
Locale locale8 = Locale.CHINA;
Locale.getISOLanguages();
Locale locale9 = Locale.CHINA;
locale8.getDisplayVariant(locale5);
Locale locale10 = Locale.CANADA_FRENCH;
locale0.getDisplayScript(locale10);
Locale locale11 = Locale.CHINA;
Locale locale12 = Locale.CHINA;
Locale locale13 = Locale.CANADA_FRENCH;
locale13.getExtensionKeys();
locale13.getUnicodeLocaleKeys();
Vector<String> vector2 = new Vector<String>();
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertTrue(boolean0);


[MASTER] 10:37:06.624 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 10:37:06.625 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("5cvQJB]dEe", "5cvQJB]dEe");
Locale locale0 = Locale.CHINA;
Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
Vector<Locale> vector1 = new Vector<Locale>();
Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) vector1);
Locale locale1 = Locale.PRC;
Locale locale2 = Locale.CANADA_FRENCH;
locale1.getDisplayScript(locale2);
locale2.getUnicodeLocaleKeys();
Locale.Category locale_Category0 = Locale.Category.DISPLAY;
Locale locale3 = Locale.CHINA;
Locale locale4 = Locale.CANADA_FRENCH;
Locale locale5 = Locale.CANADA_FRENCH;
locale1.getDisplayLanguage(locale5);
locale3.getUnicodeLocaleKeys();
Locale.setDefault(locale_Category0, locale1);
Locale locale6 = Locale.CANADA_FRENCH;
locale1.getDisplayLanguage(locale6);
Locale locale7 = Locale.ENGLISH;
locale0.getExtensionKeys();
locale0.getScript();
Locale.lookup(vector0, vector1);
locale0.getDisplayScript((Locale) null);
Locale locale8 = Locale.CANADA_FRENCH;
Locale locale9 = Locale.CANADA_FRENCH;
locale1.getDisplayCountry(locale9);
Locale.Category locale_Category1 = Locale.Category.DISPLAY;
Locale.setDefault(locale_Category1, locale7);
Locale locale10 = Locale.CHINA;
Locale.getISOLanguages();
Locale locale11 = Locale.CHINA;
locale10.getDisplayVariant(locale6);
Locale locale12 = Locale.CANADA_FRENCH;
locale8.getDisplayScript(locale12);
Locale locale13 = Locale.CHINA;
Locale locale14 = Locale.CANADA;
Locale locale15 = Locale.CANADA_FRENCH;
locale15.getExtensionKeys();
locale6.getUnicodeLocaleKeys();
Vector<String> vector2 = new Vector<String>();
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertTrue(boolean0);


[MASTER] 10:37:07.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 10:37:07.016 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", is not one of the child nodes of /tempdir0");
FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
MockFile mockFile0 = new MockFile("\"6#<", "B**)");
mockFile0.toURL();
ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "ruaM(");
ImprovedFile improvedFile1 = new ImprovedFile("Vje6[!7%");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
int int0 = archiveScanner0.toFileType(mockFile0);
assertEquals(2, int0);


[MASTER] 10:37:07.128 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 10:37:07.129 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", is not one of the child nodes of /tempdir0");
FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
MockFile mockFile0 = new MockFile("r{?_ENI5n", "FAan3FpRj,K<8");
ImprovedFile improvedFile0 = new ImprovedFile("r{?_ENI5n");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
archiveScanner0.addDefaultExcludes();
File file0 = ImprovedFile.createTempFileName("qDn#4@Qx8", "J*9o[9B=", improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(file0);
assertTrue(boolean0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'ArchiveScanner_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/78_caloriecount/evosuite-tests
* Done!

* Computation finished
