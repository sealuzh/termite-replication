* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8337
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
* Search finished after 843s and 64 generations, 80879 statements, best individual has fitness: 2728.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 192
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Generated 57 tests with total length 1114
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8338
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:41:17.388 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:41:17.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:41:17.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:41:17.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
* Search finished after 856s and 30 generations, 33050 statements, best individual has fitness: 2352.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 632
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 417
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 610
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 101
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 403
* Generated 192 tests with total length 4075
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:01:16.865 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6791625% of time used, but only 56/192 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 11:02:45.891 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8333
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8335
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:03:22.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:03:22.385 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:03:22.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:03:22.497 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:03:22.514 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:03:22.518 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
[MASTER] 11:03:23.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:03:23.456 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:03:23.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:03:23.476 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:03:23.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:03:23.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 11:03:26.813 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 11:03:26.813 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 11:03:30.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 11:03:30.315 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 11:03:30.315 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 11:03:30.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 11:03:30.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 11:03:30.329 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 11:03:30.337 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 11:03:30.337 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 11:03:30.338 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;:NonNull
[MASTER] 11:03:30.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:NonNull
[MASTER] 11:03:30.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Zero
[MASTER] 11:03:30.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 11:03:30.343 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 11:03:30.343 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 11:03:30.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 11:03:30.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 11:03:30.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 11:03:30.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 11:03:30.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 11:03:30.356 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 11:03:30.358 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 11:03:30.359 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 11:03:30.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 11:03:30.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 11:03:30.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 11:03:30.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 11:03:30.362 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 11:07:01.801 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 11:07:03.624 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I13 Branch 43 IFLE L487 - false
[MASTER] 11:07:03.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 207: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceArithmeticOperator % -> *
[MASTER] 11:07:03.640 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 208: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceArithmeticOperator % -> /
[MASTER] 11:07:03.643 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 211: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceComparisonOperator <= -> -1
[MASTER] 11:07:03.656 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I13 Branch 43 IFLE L487 - false in context: 
* Search finished after 841s and 296 generations, 264714 statements, best individual has fitness: 5256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 370
* Number of covered goals: 259
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 242
* Number of covered goals: 129
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 713
* Number of covered goals: 428
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 242
* Number of covered goals: 129
* Generated 84 tests with total length 1847
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 841s and 88 generations, 98093 statements, best individual has fitness: 2096.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 338
* Number of covered goals: 290
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 148
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 421
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 112
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 75%
* Total number of goals: 194
* Number of covered goals: 146
* Generated 63 tests with total length 1533
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 11:19:47.451 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 11:19:47.769 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 11:19:56.078 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 11:19:56.079 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
LinkedList<Attribute> linkedList1 = new LinkedList<Attribute>();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
LinkedList<Attribute> linkedList2 = new LinkedList<Attribute>();
LinkedList<Attribute> linkedList3 = new LinkedList<Attribute>();
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
ArrayList<String> arrayList1 = new ArrayList<String>();
arrayList1.add("-1115,-1115,473");
ProtectedProperties protectedProperties1 = new ProtectedProperties(properties0);
ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
Instances instances0 = new Instances("F=El-Y>3'.Z", arrayList2, 1130);
Attribute attribute0 = new Attribute("o`EKRx%M[cIX9)kIxR", instances0, 1130);
arrayList1.add("E9:DU)cF\"$rtrv|<F_");
arrayList2.add(attribute0);
ProtectedProperties protectedProperties2 = new ProtectedProperties(protectedProperties0);
Attribute attribute1 = new Attribute("user.dir", arrayList1, protectedProperties2);
ArrayList<Attribute> arrayList3 = new ArrayList<Attribute>();
arrayList3.add(attribute1);
Instances instances1 = new Instances((String) null, arrayList2, 2);
instances1.remove((Object) instances0);
Discretize discretize0 = new Discretize("MRbidv4f_IVhL:p]b[Y");
discretize0.setInputFormat(instances0);

[MASTER] 11:19:57.549 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 11:19:57.550 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "@4(YEa4kt\",d";
Discretize discretize0 = new Discretize("@4(YEa4kt\",d");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
SystemInUtil.addInputLine((String) null);
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>(arrayList0);
Instances instances0 = new Instances(",8)]oT", arrayList1, 4254);
Attribute attribute0 = new Attribute("G{{~5y<5L*", instances0);
arrayList1.add(attribute0);
instances0.remove((Object) "   * @param inst\tthe instance to turn into an array\n");
discretize0.setInputFormat(instances0);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 11:23:02.018 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1574162581934/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1574162581934/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.018 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.018 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 11:23:02.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 56
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 57
[MASTER] 11:23:02.022 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 57
[MASTER] 11:23:02.023 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1574162581934/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.GlobalInfoJavadoc;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_2_tmp__ESTest extends NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=0.9004024235381879
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.m_periodicP = 177;
34:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
37:       linkedHashMap0.get(globalInfoJavadoc0);
38:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       linkedHashMap0.put((Integer) null, linkedHashMap1);
41:       byte[] byteArray0 = new byte[17];
42:       Integer integer0 = new Integer((byte)28);
43:       Integer integer1 = new Integer(1483);
44:       linkedHashMap0.put(integer1, linkedHashMap1);
45:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
46:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap2 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap1 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
50:       Integer integer2 = new Integer((byte)28);
51:       Integer integer3 = new Integer(369);
52:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap2 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
53:       hashMap2.replace(integer2, linkedHashMap3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
54:       Integer integer4 = new Integer(177);
55:       Integer integer5 = new Integer(1789569706);
56:       hashMap1.put(integer5, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
57:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap3 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
58:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
59:       // Undeclared exception!
60:       try { 
61:         naiveBayesMultinomialText0.pruneDictionary();
62:         fail("Expecting exception: NullPointerException");
63:       
64:       } catch(NullPointerException e) {
65:          //
66:          // no message in exception (getMessage() returned null)
67:          //
68:       }
69:   }
70: }
RegularFileObject[/tmp/EvoSuite_2_1574162581934/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.024 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 177;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
linkedHashMap0.get(globalInfoJavadoc0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
byte[] byteArray0 = new byte[17];
Integer integer0 = new Integer((byte)28);
Integer integer1 = new Integer(1483);
linkedHashMap0.put(integer1, linkedHashMap1);
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap2 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap1 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer2 = new Integer((byte)28);
Integer integer3 = new Integer(369);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap2 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
hashMap2.replace(integer2, linkedHashMap3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
Integer integer4 = new Integer(177);
Integer integer5 = new Integer(1789569706);
hashMap1.put(integer5, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap3 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 11:23:02.207 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1574162582169/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1574162582169/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.207 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.207 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.207 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.208 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1574162582169/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.net.URI;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.LinkedHashMap;
15: import java.util.List;
16: import java.util.Locale;
17: import java.util.Vector;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.evosuite.runtime.mock.java.io.MockFile;
21: import org.evosuite.runtime.mock.java.net.MockURI;
22: import org.evosuite.runtime.testdata.FileSystemHandling;
23: import org.junit.runner.RunWith;
24: import weka.classifiers.bayes.NaiveBayesMultinomialText;
25: import weka.core.FindWithCapabilities;
26: import weka.core.stemmers.NullStemmer;
27: 
28: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
29: public class NaiveBayesMultinomialText_6_tmp__ESTest extends NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
30: 
31:   /**
32:   //Test case number: 0
33:   /*Coverage entropy=1.5271837172395382
34:   */
35:   @Test(timeout = 4000)
36:   public void test0()  throws Throwable  {
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
39:       naiveBayesMultinomialText0.getUseWordFrequencies();
40:       NullStemmer nullStemmer0 = new NullStemmer();
41:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
42:       MockFile mockFile0 = new MockFile("20k6", "-M <char>");
43:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
44:       ArrayList<String> arrayList1 = new ArrayList<String>();
45:       arrayList1.add("20k6");
46:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
47:       FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
48:       Vector<String> vector0 = findWithCapabilities0.getMatches();
49:       Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) vector0, locale_FilteringMode0);
50:       MockFile mockFile1 = new MockFile(mockFile0, "20k6");
51:       naiveBayesMultinomialText0.getLowercaseTokens();
52:       URI uRI0 = MockURI.aFTPURI;
53:       MockFile mockFile2 = null;
54:       try {
55:         mockFile2 = new MockFile(uRI0);
56:         fail("Expecting exception: IllegalArgumentException");
57:       
58:       } catch(IllegalArgumentException e) {
59:          //
60:          // URI scheme is not \"file\"
61:          //
62:          verifyException("java.io.File", e);
63:       }
64:   }
65: }
RegularFileObject[/tmp/EvoSuite_6_1574162582169/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.208 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.getUseWordFrequencies();
NullStemmer nullStemmer0 = new NullStemmer();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
MockFile mockFile0 = new MockFile("20k6", "-M <char>");
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList1 = new ArrayList<String>();
arrayList1.add("20k6");
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
Vector<String> vector0 = findWithCapabilities0.getMatches();
Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) vector0, locale_FilteringMode0);
MockFile mockFile1 = new MockFile(mockFile0, "20k6");
naiveBayesMultinomialText0.getLowercaseTokens();
URI uRI0 = MockURI.aFTPURI;
MockFile mockFile2 = new MockFile(uRI0);

[MASTER] 11:23:02.240 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1574162582209/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1574162582209/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.240 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.240 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.241 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.241 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.241 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.241 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:02.241 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:02.241 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 55
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 55
[MASTER] 11:23:02.242 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 56
[MASTER] 11:23:02.243 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1574162582209/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.GlobalInfoJavadoc;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=0.8505612088663046
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
32:       
33:       naiveBayesMultinomialText0.m_periodicP = 177;
34:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
37:       linkedHashMap0.get(globalInfoJavadoc0);
38:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       byte[] byteArray0 = new byte[17];
42:       Integer integer0 = new Integer((byte)28);
43:       Integer integer1 = new Integer(1483);
44:       linkedHashMap0.put(integer1, linkedHashMap1);
45:       linkedHashMap0.put(integer0, linkedHashMap2);
46:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap1 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
50:       Integer integer2 = new Integer((byte)28);
51:       Integer.compare((-1), 1);
52:       Integer.remainderUnsigned(70, (-1));
53:       Integer integer3 = new Integer(369);
54:       hashMap1.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
55:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap2 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
56:       hashMap2.replace(integer2, linkedHashMap4, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
57:       Integer integer4 = new Integer(177);
58:       Integer integer5 = new Integer(1789569706);
59:       hashMap1.put(integer5, linkedHashMap2);
60:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
61:       naiveBayesMultinomialText0.pruneDictionary();
62:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_7_1574162582209/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.244 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());

naiveBayesMultinomialText0.m_periodicP = 177;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
linkedHashMap0.get(globalInfoJavadoc0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
byte[] byteArray0 = new byte[17];
Integer integer0 = new Integer((byte)28);
Integer integer1 = new Integer(1483);
linkedHashMap0.put(integer1, linkedHashMap1);
linkedHashMap0.put(integer0, linkedHashMap2);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap1 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer2 = new Integer((byte)28);
Integer.compare((-1), 1);
Integer.remainderUnsigned(70, (-1));
Integer integer3 = new Integer(369);
hashMap1.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap2 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
hashMap2.replace(integer2, linkedHashMap4, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
Integer integer4 = new Integer(177);
Integer integer5 = new Integer(1789569706);
hashMap1.put(integer5, linkedHashMap2);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 11:23:02.276 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1574162582244/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1574162582244/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.276 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.276 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.276 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:02.282 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:02.282 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.282 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:02.282 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:02.282 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1574162582244/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.util.MockRandom;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.1574490435910625
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.m_periodicP = 177;
33:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
34:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       hashMap0.put((Integer) null, linkedHashMap0);
38:       TestInstances testInstances0 = new TestInstances();
39:       Instances instances0 = testInstances0.generate("jm:1aLJAN%t^i}ncxI|");
40:       MockRandom mockRandom0 = new MockRandom();
41:       byte[] byteArray0 = new byte[1];
42:       byteArray0[0] = (byte)28;
43:       mockRandom0.nextBytes(byteArray0);
44:       Instances instances1 = instances0.resample(mockRandom0);
45:       naiveBayesMultinomialText0.buildClassifier(instances1);
46:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
47:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
48:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
49:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
50:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_8_1574162582244/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.283 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 177;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put((Integer) null, linkedHashMap0);
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate("jm:1aLJAN%t^i}ncxI|");
MockRandom mockRandom0 = new MockRandom();
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)28;
mockRandom0.nextBytes(byteArray0);
Instances instances1 = instances0.resample(mockRandom0);
naiveBayesMultinomialText0.buildClassifier(instances1);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 11:23:02.384 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_10_1574162582347/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_10_1574162582347/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.384 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.384 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.384 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:02.384 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:02.385 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:02.385 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:02.385 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.385 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.386 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_10_1574162582347/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.SnowballStemmer;
18: import weka.core.tokenizers.WordTokenizer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_10_tmp__ESTest extends NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.3396373836930713
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.stemmerTipText();
31:       naiveBayesMultinomialText0.lowercaseTokensTipText();
32:       naiveBayesMultinomialText0.useStopListTipText();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       Integer integer0 = new Integer(2324);
36:       linkedHashMap1.put(integer0, linkedHashMap0);
37:       Integer integer1 = new Integer(2324);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("ic");
40:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
41:       naiveBayesMultinomialText1.getOptions();
42:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
43:       naiveBayesMultinomialText2.periodicPruningTipText();
44:       naiveBayesMultinomialText2.m_useStopList = true;
45:       WordTokenizer wordTokenizer0 = new WordTokenizer();
46:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
47:       naiveBayesMultinomialText1.reset();
48:       naiveBayesMultinomialText0.normTipText();
49:       FileSystemHandling.shouldAllThrowIOExceptions();
50:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
51:       naiveBayesMultinomialText1.stopwordsTipText();
52:       naiveBayesMultinomialText2.LNormTipText();
53:       naiveBayesMultinomialText3.normalizeDocLengthTipText();
54:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
55:       naiveBayesMultinomialText1.normTipText();
56:       naiveBayesMultinomialText4.useStopListTipText();
57:       naiveBayesMultinomialText3.useWordFrequenciesTipText();
58:       naiveBayesMultinomialText4.stemmerTipText();
59:       System.setCurrentTimeMillis(2324);
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_10_1574162582347/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.387 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.useStopListTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(2324);
linkedHashMap1.put(integer0, linkedHashMap0);
Integer integer1 = new Integer(2324);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("ic");
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.getOptions();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.periodicPruningTipText();
naiveBayesMultinomialText2.m_useStopList = true;
WordTokenizer wordTokenizer0 = new WordTokenizer();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.reset();
naiveBayesMultinomialText0.normTipText();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.stopwordsTipText();
naiveBayesMultinomialText2.LNormTipText();
naiveBayesMultinomialText3.normalizeDocLengthTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
naiveBayesMultinomialText4.useStopListTipText();
naiveBayesMultinomialText3.useWordFrequenciesTipText();
naiveBayesMultinomialText4.stemmerTipText();
System.setCurrentTimeMillis(2324);

[MASTER] 11:23:02.452 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_12_1574162582424/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_12_1574162582424/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.452 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.452 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 11:23:02.453 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 11:23:02.454 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 11:23:02.454 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:02.454 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:02.455 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:02.455 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 11:23:02.455 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 11:23:02.455 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_12_1574162582424/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.GlobalInfoJavadoc;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_12_tmp__ESTest extends NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.8408398156653452
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.m_useStopList = true;
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
35:       linkedHashMap0.get((Object) null);
36:       Integer integer0 = new Integer((-940));
37:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       Integer integer1 = new Integer(993);
40:       linkedHashMap0.put(integer1, linkedHashMap1);
41:       Integer integer2 = new Integer(14999);
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       Integer integer3 = new Integer(1483);
44:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       linkedHashMap3.put(integer2, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
46:       linkedHashMap3.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
47:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
48:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap4 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
49:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
50:       naiveBayesMultinomialText1.normTipText();
51:       String[] stringArray0 = new String[5];
52:       stringArray0[1] = "The norm of the instances after normalization.";
53:       try { 
54:         naiveBayesMultinomialText1.setOptions(stringArray0);
55:         fail("Expecting exception: NullPointerException");
56:       
57:       } catch(NullPointerException e) {
58:          //
59:          // no message in exception (getMessage() returned null)
60:          //
61:          verifyException("weka.core.Utils", e);
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_12_1574162582424/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.456 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
linkedHashMap0.get((Object) null);
Integer integer0 = new Integer((-940));
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer1 = new Integer(993);
linkedHashMap0.put(integer1, linkedHashMap1);
Integer integer2 = new Integer(14999);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer3 = new Integer(1483);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap3.put(integer2, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
linkedHashMap3.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap4 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
String[] stringArray0 = new String[5];
stringArray0[1] = "The norm of the instances after normalization.";
naiveBayesMultinomialText1.setOptions(stringArray0);

[MASTER] 11:23:02.486 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1574162582457/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1574162582457/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.486 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.486 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:02.487 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:02.488 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1574162582457/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.SparseInstance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_13_tmp__ESTest extends NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.2961346570528898
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_periodicP = 141;
32:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       hashMap0.put((Integer) null, linkedHashMap0);
37:       byte[] byteArray0 = new byte[9];
38:       Integer integer0 = new Integer((byte)28);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       hashMap0.put(integer0, linkedHashMap1);
41:       byteArray0[0] = (byte)28;
42:       double[] doubleArray0 = new double[1];
43:       doubleArray0[0] = (double) (byte)28;
44:       SparseInstance sparseInstance0 = new SparseInstance((byte)28, doubleArray0);
45:       try { 
46:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
47:         fail("Expecting exception: RuntimeException");
48:       
49:       } catch(RuntimeException e) {
50:          //
51:          // DenseInstance doesn't have access to a dataset!
52:          //
53:          verifyException("weka.core.AbstractInstance", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_13_1574162582457/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.488 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 141;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put((Integer) null, linkedHashMap0);
byte[] byteArray0 = new byte[9];
Integer integer0 = new Integer((byte)28);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap1);
byteArray0[0] = (byte)28;
double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) (byte)28;
SparseInstance sparseInstance0 = new SparseInstance((byte)28, doubleArray0);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);

[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1574162582811/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1574162582811/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:02.839 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:02.840 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1574162582811/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.util.MockRandom;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Capabilities;
20: import weka.core.Instances;
21: import weka.core.TestInstances;
22: import weka.estimators.PoissonEstimator;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=1.830738805564335
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
35:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       Integer integer0 = new Integer(177);
38:       hashMap0.put(integer0, linkedHashMap0);
39:       TestInstances testInstances0 = new TestInstances();
40:       PoissonEstimator poissonEstimator0 = new PoissonEstimator();
41:       Capabilities capabilities0 = poissonEstimator0.getCapabilities();
42:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
43:       Instances instances0 = testInstances1.generate("jm:1aLJAN%t^i}ncxI|");
44:       MockRandom mockRandom0 = new MockRandom();
45:       byte[] byteArray0 = new byte[7];
46:       byteArray0[0] = (byte)28;
47:       byteArray0[1] = (byte)28;
48:       byteArray0[2] = (byte)28;
49:       byteArray0[3] = (byte)28;
50:       byteArray0[4] = (byte)28;
51:       byteArray0[5] = (byte)28;
52:       byteArray0[6] = (byte)28;
53:       mockRandom0.nextBytes(byteArray0);
54:       Instances instances1 = instances0.resample(mockRandom0);
55:       try { 
56:         naiveBayesMultinomialText0.buildClassifier(instances1);
57:         fail("Expecting exception: RuntimeException");
58:       
59:       } catch(RuntimeException e) {
60:          //
61:          // weka.classifiers.bayes.NaiveBayesMultinomialText: Class attribute not set!
62:          //
63:          verifyException("weka.core.Capabilities", e);
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_26_1574162582811/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:02.840 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer0 = new Integer(177);
hashMap0.put(integer0, linkedHashMap0);
TestInstances testInstances0 = new TestInstances();
PoissonEstimator poissonEstimator0 = new PoissonEstimator();
Capabilities capabilities0 = poissonEstimator0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate("jm:1aLJAN%t^i}ncxI|");
MockRandom mockRandom0 = new MockRandom();
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte)28;
byteArray0[1] = (byte)28;
byteArray0[2] = (byte)28;
byteArray0[3] = (byte)28;
byteArray0[4] = (byte)28;
byteArray0[5] = (byte)28;
byteArray0[6] = (byte)28;
mockRandom0.nextBytes(byteArray0);
Instances instances1 = instances0.resample(mockRandom0);
naiveBayesMultinomialText0.buildClassifier(instances1);

[MASTER] 11:23:03.006 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_33_1574162582987/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_33_1574162582987/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.006 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.006 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.006 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 11:23:03.007 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_33_1574162582987/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.LinkedHashMap;
12: import java.util.Locale;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_33_tmp__ESTest extends NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.891488860988767
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
30:       naiveBayesMultinomialText0.setLowercaseTokens(false);
31:       naiveBayesMultinomialText0.useStopListTipText();
32:       String[] stringArray0 = Locale.getISOCountries();
33:       naiveBayesMultinomialText0.setOptions(stringArray0);
34:       naiveBayesMultinomialText0.setLowercaseTokens(true);
35:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
36:       naiveBayesMultinomialText0.setOptions(stringArray0);
37:       naiveBayesMultinomialText0.setLowercaseTokens(true);
38:       MockFile mockFile0 = new MockFile("M6R59@FnkP+Qu", "9");
39:       MockFile mockFile1 = new MockFile("z0]", "z0]");
40:       mockFile0.toURL();
41:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
42:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
43:       naiveBayesMultinomialText0.stopwordsTipText();
44:       naiveBayesMultinomialText0.normTipText();
45:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
46:       
47:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
48:       String string0 = naiveBayesMultinomialText2.normalizeDocLengthTipText();
49:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string0);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_33_1574162582987/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.007 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.useStopListTipText();
String[] stringArray0 = Locale.getISOCountries();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.setLowercaseTokens(true);
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.setLowercaseTokens(true);
MockFile mockFile0 = new MockFile("M6R59@FnkP+Qu", "9");
MockFile mockFile1 = new MockFile("z0]", "z0]");
mockFile0.toURL();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.normTipText();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());

NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText2.normalizeDocLengthTipText();
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string0);


[MASTER] 11:23:03.052 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1574162583033/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1574162583033/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.052 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.052 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.052 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 11:23:03.052 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 11:23:03.053 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 11:23:03.053 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 11:23:03.053 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1574162583033/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.063983366979555
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
27:       byte[] byteArray0 = new byte[9];
28:       byteArray0[0] = (byte)44;
29:       byteArray0[1] = (byte)44;
30:       Integer integer0 = new Integer((byte)44);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       hashMap0.put(integer0, linkedHashMap0);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.m_leplace = (double) (byte)44;
35:       double double0 = naiveBayesMultinomialText0.getNorm();
36:       assertEquals(1.0, double0, 0.01);
37:       
38:       int[] intArray0 = new int[0];
39:       String string0 = naiveBayesMultinomialText0.LNormTipText();
40:       assertEquals("The LNorm to use for document length normalization.", string0);
41:       
42:       String string1 = naiveBayesMultinomialText0.stopwordsTipText();
43:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string1);
44:       
45:       String string2 = naiveBayesMultinomialText0.stemmerTipText();
46:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
47:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
48:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
49:       assertEquals("The stemming algorithm to use on the words.", string2);
50:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
51:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_35_1574162583033/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.053 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)44;
byteArray0[1] = (byte)44;
Integer integer0 = new Integer((byte)44);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_leplace = (double) (byte)44;
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals(1.0, double0, 0.01);

int[] intArray0 = new int[0];
String string0 = naiveBayesMultinomialText0.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string0);

String string1 = naiveBayesMultinomialText0.stopwordsTipText();
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string1);

String string2 = naiveBayesMultinomialText0.stemmerTipText();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals("The stemming algorithm to use on the words.", string2);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1574162583115/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1574162583115/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 11:23:03.133 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 11:23:03.134 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 11:23:03.134 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 11:23:03.134 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 11:23:03.134 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 11:23:03.134 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1574162583115/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.1217186091313738
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_periodicP = (-1214);
32:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       linkedHashMap0.put((Integer) null, linkedHashMap1);
37:       byte[] byteArray0 = new byte[10];
38:       Integer integer0 = new Integer((byte)28);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       linkedHashMap0.put(integer0, linkedHashMap2);
41:       byteArray0[0] = (byte)28;
42:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
43:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap1 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap2 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
46:       Integer integer1 = new Integer((-1214));
47:       hashMap2.replace(integer1, linkedHashMap2, linkedHashMap2);
48:       hashMap2.put(integer0, linkedHashMap2);
49:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap3 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
50:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
51:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
52:       naiveBayesMultinomialText0.pruneDictionary();
53:       System.setCurrentTimeMillis(42L);
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_39_1574162583115/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.134 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = (-1214);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
byte[] byteArray0 = new byte[10];
Integer integer0 = new Integer((byte)28);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap2);
byteArray0[0] = (byte)28;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap1 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap2 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer((-1214));
hashMap2.replace(integer1, linkedHashMap2, linkedHashMap2);
hashMap2.put(integer0, linkedHashMap2);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap3 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.pruneDictionary();
System.setCurrentTimeMillis(42L);

[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1574162583135/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1574162583135/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 11:23:03.161 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:03.162 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 11:23:03.162 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1574162583135/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.GlobalInfoJavadoc;
20: import weka.core.Instance;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=3.098114931959847
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.m_useStopList = true;
34:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
36:       linkedHashMap0.get((Object) null);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       Integer integer0 = new Integer(993);
39:       linkedHashMap0.put(integer0, linkedHashMap1);
40:       Integer integer1 = new Integer(15000);
41:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
42:       Integer integer2 = new Integer(1483);
43:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
44:       linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
45:       linkedHashMap3.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
46:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap4 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
48:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
49:       naiveBayesMultinomialText1.normTipText();
50:       String[] stringArray0 = new String[1];
51:       stringArray0[0] = "The norm of the instances after normalization.";
52:       naiveBayesMultinomialText1.setOptions(stringArray0);
53:       naiveBayesMultinomialText0.LNormTipText();
54:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
55:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
56:       naiveBayesMultinomialText2.stopwordsTipText();
57:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
58:       naiveBayesMultinomialText2.debugTipText();
59:       naiveBayesMultinomialText1.tokenizerTipText();
60:       naiveBayesMultinomialText0.toString();
61:       // Undeclared exception!
62:       try { 
63:         naiveBayesMultinomialText1.tokenizeInstance((Instance) null, true);
64:         fail("Expecting exception: NullPointerException");
65:       
66:       } catch(NullPointerException e) {
67:          //
68:          // no message in exception (getMessage() returned null)
69:          //
70:       }
71:   }
72: }
RegularFileObject[/tmp/EvoSuite_40_1574162583135/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.163 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
linkedHashMap0.get((Object) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer0 = new Integer(993);
linkedHashMap0.put(integer0, linkedHashMap1);
Integer integer1 = new Integer(15000);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer2 = new Integer(1483);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
linkedHashMap3.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap4 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
String[] stringArray0 = new String[1];
stringArray0[0] = "The norm of the instances after normalization.";
naiveBayesMultinomialText1.setOptions(stringArray0);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.stopwordsTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText2.debugTipText();
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText1.tokenizeInstance((Instance) null, true);

[MASTER] 11:23:03.210 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1574162583188/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1574162583188/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.210 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.210 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.210 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.211 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1574162583188/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.LinkedHashMap;
13: import java.util.LinkedList;
14: import java.util.List;
15: import java.util.Locale;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.mock.java.io.MockFile;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.stemmers.Stemmer;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=3.279646009801383
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
34:       naiveBayesMultinomialText0.setLowercaseTokens(false);
35:       naiveBayesMultinomialText0.useStopListTipText();
36:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
37:       naiveBayesMultinomialText0.setOptions(stringArray0);
38:       naiveBayesMultinomialText0.setLowercaseTokens(true);
39:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
40:       
41:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
42:       ArrayList<String> arrayList1 = new ArrayList<String>();
43:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
44:       LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
45:       Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList1, locale_FilteringMode0);
46:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
47:       naiveBayesMultinomialText1.setStemmer((Stemmer) null);
48:       naiveBayesMultinomialText0.setOptions(stringArray0);
49:       naiveBayesMultinomialText1.setLowercaseTokens(false);
50:       MockFile mockFile0 = new MockFile("-normalize", "If true, ignores all words that are on the stoplist.");
51:       MockFile mockFile1 = new MockFile(">,QR)?:qU[z),T", ">,QR)?:qU[z),T");
52:       mockFile1.toURL();
53:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
54:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
55:       naiveBayesMultinomialText0.stopwordsTipText();
56:       naiveBayesMultinomialText0.normTipText();
57:       naiveBayesMultinomialText0.normTipText();
58:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_42_1574162583188/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.211 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.useStopListTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.setLowercaseTokens(true);
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());

ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList1 = new ArrayList<String>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList1, locale_FilteringMode0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setStemmer((Stemmer) null);
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText1.setLowercaseTokens(false);
MockFile mockFile0 = new MockFile("-normalize", "If true, ignores all words that are on the stoplist.");
MockFile mockFile1 = new MockFile(">,QR)?:qU[z),T", ">,QR)?:qU[z),T");
mockFile1.toURL();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.normTipText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 11:23:03.355 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_48_1574162583336/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_48_1574162583336/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.355 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.355 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.355 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 11:23:03.355 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 11:23:03.356 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_48_1574162583336/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Stopwords;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_48_tmp__ESTest extends NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.5531257522061517
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.pruneDictionary();
31:       naiveBayesMultinomialText0.m_periodicP = 141;
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       Integer integer0 = new Integer(11);
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
36:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
37:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
38:       Integer.getInteger("");
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
40:       hashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
41:       String[] stringArray0 = new String[7];
42:       stringArray0[0] = "~6*%D";
43:       stringArray0[1] = "";
44:       stringArray0[2] = "";
45:       stringArray0[3] = "";
46:       stringArray0[4] = "";
47:       stringArray0[5] = "";
48:       stringArray0[6] = "";
49:       NaiveBayesMultinomialText.main(stringArray0);
50:       Stopwords stopwords0 = new Stopwords();
51:       stopwords0.elements();
52:       Stopwords.main(stringArray0);
53:       naiveBayesMultinomialText0.normTipText();
54:       naiveBayesMultinomialText0.periodicPruningTipText();
55:       System.setCurrentTimeMillis((byte)44);
56:       naiveBayesMultinomialText0.stopwordsTipText();
57:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
58:       assertEquals(141, int0);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_48_1574162583336/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.357 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.m_periodicP = 141;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
Integer integer0 = new Integer(11);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
Integer.getInteger("");
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
String[] stringArray0 = new String[7];
stringArray0[0] = "~6*%D";
stringArray0[1] = "";
stringArray0[2] = "";
stringArray0[3] = "";
stringArray0[4] = "";
stringArray0[5] = "";
stringArray0[6] = "";
NaiveBayesMultinomialText.main(stringArray0);
Stopwords stopwords0 = new Stopwords();
stopwords0.elements();
Stopwords.main(stringArray0);
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
System.setCurrentTimeMillis((byte)44);
naiveBayesMultinomialText0.stopwordsTipText();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(141, int0);


[MASTER] 11:23:03.492 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_53_1574162583472/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_53_1574162583472/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.492 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.492 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.492 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:03.492 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 11:23:03.493 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_53_1574162583472/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.mock.java.util.MockRandom;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.meta.CostSensitiveClassifier;
19: import weka.core.BinarySparseInstance;
20: import weka.core.Capabilities;
21: import weka.core.GlobalInfoJavadoc;
22: import weka.core.Instances;
23: import weka.core.TestInstances;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_53_tmp__ESTest extends NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=1.830738805564335
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.m_useStopList = true;
36:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
37:       GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
38:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
39:       Capabilities capabilities0 = costSensitiveClassifier0.getCapabilities();
40:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
41:       String string0 = "";
42:       Instances instances0 = testInstances0.generate("");
43:       MockRandom mockRandom0 = new MockRandom();
44:       capabilities0.enableAllAttributes();
45:       byte[] byteArray0 = new byte[3];
46:       byteArray0[0] = (byte)0;
47:       byteArray0[1] = (byte)107;
48:       byteArray0[2] = (byte)107;
49:       mockRandom0.nextBytes(byteArray0);
50:       try { 
51:         naiveBayesMultinomialText0.buildClassifier(instances0);
52:         fail("Expecting exception: Exception");
53:       
54:       } catch(Exception e) {
55:          //
56:          // weka.classifiers.bayes.NaiveBayesMultinomialText: Cannot handle relational attributes!
57:          //
58:          verifyException("weka.core.Capabilities", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_53_1574162583472/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.493 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
Capabilities capabilities0 = costSensitiveClassifier0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
String string0 = "";
Instances instances0 = testInstances0.generate("");
MockRandom mockRandom0 = new MockRandom();
capabilities0.enableAllAttributes();
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)107;
byteArray0[2] = (byte)107;
mockRandom0.nextBytes(byteArray0);
naiveBayesMultinomialText0.buildClassifier(instances0);

[MASTER] 11:23:03.753 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_60_1574162583736/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_60_1574162583736/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.753 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.753 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.753 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.753 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.753 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:03.754 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_60_1574162583736/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_60_tmp__ESTest extends NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.447569545843601
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.pruneDictionary();
31:       naiveBayesMultinomialText0.m_periodicP = 141;
32:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       byte[] byteArray0 = new byte[9];
36:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
37:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
38:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText1.toString();
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       naiveBayesMultinomialText0.normTipText();
42:       naiveBayesMultinomialText0.setOptions(stringArray0);
43:       assertEquals(141, naiveBayesMultinomialText0.getPeriodicPruning());
44:       
45:       naiveBayesMultinomialText1.useStopListTipText();
46:       double double0 = naiveBayesMultinomialText1.getMinWordFrequency();
47:       assertEquals(3.0, double0, 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_60_1574162583736/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.754 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.m_periodicP = 141;
naiveBayesMultinomialText0.setNormalizeDocLength(true);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
byte[] byteArray0 = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.toString();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.setOptions(stringArray0);
assertEquals(141, naiveBayesMultinomialText0.getPeriodicPruning());

naiveBayesMultinomialText1.useStopListTipText();
double double0 = naiveBayesMultinomialText1.getMinWordFrequency();
assertEquals(3.0, double0, 0.01);


[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_62_1574162583774/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_62_1574162583774/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.java]]
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:03.798 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 11:23:03.799 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_62_1574162583774/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 11:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.Stopwords;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_62_tmp__ESTest extends NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.8778952727983707
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
36:       int int0 = 2754;
37:       Integer integer0 = new Integer(2754);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       hashMap0.put(integer0, linkedHashMap0);
40:       Stopwords stopwords0 = naiveBayesMultinomialText0.m_stopwords;
41:       naiveBayesMultinomialText0.m_stopwords = null;
42:       naiveBayesMultinomialText0.m_lnorm = (-2916.255719271228);
43:       naiveBayesMultinomialText0.toString();
44:       naiveBayesMultinomialText0.getRevision();
45:       NaiveBayesMultinomialText.main((String[]) null);
46:       naiveBayesMultinomialText0.setNorm((-2916.255719271228));
47:       naiveBayesMultinomialText0.getLNorm();
48:       naiveBayesMultinomialText0.LNormTipText();
49:       naiveBayesMultinomialText0.stopwordsTipText();
50:       naiveBayesMultinomialText0.pruneDictionary();
51:       naiveBayesMultinomialText0.tokenizerTipText();
52:       try { 
53:         Integer.decode("The LNorm to use for document length normalization.");
54:         fail("Expecting exception: NumberFormatException");
55:       
56:       } catch(NumberFormatException e) {
57:          //
58:          // For input string: \"The LNorm to use for document length normalization.\"
59:          //
60:          verifyException("java.lang.NumberFormatException", e);
61:       }
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_62_1574162583774/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 11:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.matrix.CholeskyDecomposition",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.matrix.LUDecomposition",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.matrix.SingularValueDecomposition",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.FindWithCapabilities",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.matrix.QRDecomposition",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.Option",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.tokenizers.AlphabeticTokenizer",
180:       "weka.core.matrix.LinearRegression",
181:       "weka.core.FastVector",
182:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
183:       "weka.core.matrix.EigenvalueDecomposition",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.tokenizers.NGramTokenizer",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.classifiers.bayes.net.ADNode",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.GlobalInfoJavadoc",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
199:       "weka.core.neighboursearch.covertrees.Stack",
200:       "weka.core.Randomizable",
201:       "weka.core.Javadoc",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.core.UnassignedClassException",
206:       "weka.classifiers.bayes.net.BIFReader",
207:       "weka.classifiers.bayes.net.ParentSet",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.estimators.MahalanobisEstimator",
210:       "weka.core.TechnicalInformation",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.classifiers.Sourcable",
213:       "weka.core.RevisionHandler",
214:       "weka.classifiers.evaluation.output.prediction.PlainText",
215:       "weka.core.neighboursearch.TreePerformanceStats",
216:       "weka.core.xml.XMLSerialization",
217:       "weka.classifiers.xml.XMLClassifier",
218:       "weka.filters.Filter",
219:       "weka.filters.supervised.attribute.Discretize"
220:     );
221:   } 
222: 
223:   private static void resetClasses() {
224:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader()); 
225: 
226:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
227:       "weka.classifiers.AbstractClassifier",
228:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
229:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
230:       "weka.core.Capabilities$Capability",
231:       "weka.core.tokenizers.Tokenizer",
232:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
233:       "weka.core.tokenizers.WordTokenizer",
234:       "weka.core.stemmers.NullStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.SelectedTag",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.Utils",
244:       "weka.classifiers.misc.SerializedClassifier",
245:       "weka.classifiers.Evaluation",
246:       "weka.core.Option",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.KDTree",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.neighboursearch.LinearNNSearch",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.SerializedObject",
259:       "weka.core.Capabilities",
260:       "org.pentaho.packageManagement.PackageManager",
261:       "org.pentaho.packageManagement.DefaultPackageManager",
262:       "weka.core.Version",
263:       "weka.core.Environment",
264:       "weka.core.WekaPackageManager",
265:       "weka.core.TestInstances",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.Instances",
269:       "weka.core.DenseInstance",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.classifiers.CostMatrix",
275:       "weka.core.RevisionUtils",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
278:       "weka.attributeSelection.PrincipalComponents",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.filters.Filter",
281:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
282:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
283:       "weka.estimators.Estimator",
284:       "weka.estimators.DiscreteEstimator",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.OneR",
287:       "weka.core.tokenizers.NGramTokenizer",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.classifiers.bayes.BayesNet",
290:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.K2",
293:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
294:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
295:       "weka.core.TechnicalInformation",
296:       "weka.core.TechnicalInformation$Type",
297:       "weka.core.TechnicalInformation$Field",
298:       "weka.attributeSelection.CorrelationAttributeEval",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.stemmers.SnowballStemmer",
305:       "weka.core.stemmers.Stemming",
306:       "weka.filters.supervised.attribute.Discretize",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.core.WekaException",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.neighboursearch.balltrees.BallNode",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.classifiers.misc.InputMappedClassifier",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.ClassDiscovery",
319:       "weka.classifiers.meta.FilteredClassifier",
320:       "weka.filters.supervised.attribute.AttributeSelection",
321:       "weka.attributeSelection.AttributeSelection",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.GreedyStepwise",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.classifiers.trees.J48",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.MultiClassClassifier",
330:       "weka.classifiers.functions.Logistic",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdaBoostM1",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.core.Stopwords",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.supportVector.Kernel",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.classifiers.trees.LMT",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
344:       "weka.attributeSelection.InfoGainAttributeEval",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.functions.MultilayerPerceptron",
347:       "weka.core.FastVector",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.SMO",
352:       "weka.classifiers.bayes.net.BIFReader",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.estimators.PoissonEstimator",
358:       "weka.classifiers.trees.j48.ClassifierTree",
359:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
360:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.Stacking",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.VotedPerceptron",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.functions.SGD",
370:       "weka.attributeSelection.ReliefFAttributeEval",
371:       "weka.classifiers.meta.AdditiveRegression",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.core.matrix.Matrix",
375:       "weka.estimators.MahalanobisEstimator",
376:       "weka.classifiers.meta.Vote",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.trees.REPTree",
381:       "weka.estimators.NormalEstimator",
382:       "weka.core.Javadoc",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.classifiers.meta.LogitBoost",
385:       "weka.classifiers.meta.ClassificationViaRegression",
386:       "weka.classifiers.trees.M5P",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.filters.SimpleFilter",
389:       "weka.filters.SimpleStreamFilter",
390:       "weka.filters.MultiFilter",
391:       "weka.filters.AllFilter",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.core.matrix.QRDecomposition",
394:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
395:     );
396:   }
397: }

[MASTER] 11:23:03.799 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
int int0 = 2754;
Integer integer0 = new Integer(2754);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
Stopwords stopwords0 = naiveBayesMultinomialText0.m_stopwords;
naiveBayesMultinomialText0.m_stopwords = null;
naiveBayesMultinomialText0.m_lnorm = (-2916.255719271228);
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.getRevision();
NaiveBayesMultinomialText.main((String[]) null);
naiveBayesMultinomialText0.setNorm((-2916.255719271228));
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.tokenizerTipText();
Integer.decode("The LNorm to use for document length normalization.");

* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8335
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:38:47.520 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:38:47.533 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:38:47.534 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:38:48.236 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:38:48.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:38:48.443 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 11:38:57.165 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttr()Lweka/core/Attribute;
[MASTER] 11:38:57.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttr()Lweka/core/Attribute;
[MASTER] 11:38:57.172 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttr()Lweka/core/Attribute;: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttr()Lweka/core/Attribute;
[MASTER] 11:38:58.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: Line 1098
[MASTER] 11:38:58.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: Line 1099
[MASTER] 11:38:58.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1116
[MASTER] 11:38:58.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1117
[MASTER] 11:38:58.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1118
[MASTER] 11:38:58.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1119
[MASTER] 11:38:58.559 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: root-Branch
[MASTER] 11:38:58.559 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: root-Branch
[MASTER] 11:38:58.562 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 428: weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V:1098 - InsertUnaryOp Negation of cl
[MASTER] 11:38:58.563 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1117 - ReplaceVariable copy -> this
[MASTER] 11:38:58.564 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1118 - ReplaceVariable copy -> this
[MASTER] 11:38:58.564 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 432: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1119 - ReplaceVariable copy -> this
[MASTER] 11:38:58.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.copy()Ljava/lang/Object;
[MASTER] 11:38:58.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.copy()Ljava/lang/Object;
[MASTER] 11:38:58.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: root-Branch in context: weka.classifiers.rules.JRip$RipperRule:copy()Ljava/lang/Object;
[MASTER] 11:47:14.004 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 842s and 220 generations, 216163 statements, best individual has fitness: 11944.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 39%
* Total number of goals: 705
* Number of covered goals: 274
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 119
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 993
* Number of covered goals: 596
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 119
* Generated 82 tests with total length 2033
* Resulting test suite's coverage: 46% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 11:54:04.111 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 11:54:04.699 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8336
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:54:58.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:54:58.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:54:58.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:54:59.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:55:00.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:55:00.178 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:55:02.741 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 11:55:02.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 11:55:02.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 11:55:02.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 11:55:02.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 11:55:02.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 11:55:02.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 11:55:02.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 11:55:02.765 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 11:55:02.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 11:55:02.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 11:55:06.691 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 11:55:39.621 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 12:01:29.634 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 846s and 84 generations, 73532 statements, best individual has fitness: 14184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 1378
* Number of covered goals: 851
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 48%
* Total number of goals: 809
* Number of covered goals: 385
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 70
* Number of covered goals: 70
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 424
* Number of covered goals: 284
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 278
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 809
* Number of covered goals: 378
* Generated 147 tests with total length 3520
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 12:14:39.632 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6685541666666667% of time used, but only 55/147 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 12:15:14.803 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:15:15.077 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:15:15.077 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 12:15:15.777 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8335
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:16:14.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:16:14.934 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:16:14.935 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:16:14.949 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 12:16:18.944 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 12:17:08.307 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:17:08.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 295s and 128 generations, 135389 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 14 tests with total length 369
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
