* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 19146
* Connecting to master process on port 19147
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaCharStream.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:02:15.006 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:02:15.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:02:15.099 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:02:15.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaParserTokenManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 10:07:51.445 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReadByte()C
[MASTER] 10:07:51.450 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReadByte()C
* Search finished after 695s and 69 generations, 59879 statements, best individual has fitness: 1272.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 239
* Number of covered goals: 211
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 216
* Number of covered goals: 193
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 974
* Number of covered goals: 892
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 216
* Number of covered goals: 193
* Generated 149 tests with total length 2417
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 850s and 36 generations, 29394 statements, best individual has fitness: 19688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 981
* Number of covered goals: 420
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 52%
* Total number of goals: 1707
* Number of covered goals: 889
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 434
* Number of covered goals: 172
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 52%
* Total number of goals: 1707
* Number of covered goals: 889
* Generated 92 tests with total length 1444
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 10:17:31.336 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 10:17:31.336 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.GTToken token_GTToken0 = new Token.GTToken();
Token token0 = token_GTToken0.specialToken;
StringReader stringReader0 = new StringReader("5y=@EwQ$.mmiiq`f#");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
javaParserTokenManager0.getNextToken();

[MASTER] 10:17:31.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 10:17:31.577 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.GTToken token_GTToken0 = new Token.GTToken();
Token token0 = token_GTToken0.specialToken;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
StringReader stringReader0 = new StringReader("5y=@EwQ$.mmiiq`f#");
StringReader stringReader1 = new StringReader("");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
stringReader1.ready();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();

[MASTER] 10:17:32.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 10:17:32.205 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.GTToken token_GTToken0 = new Token.GTToken();
Token token0 = token_GTToken0.specialToken;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
StringReader stringReader0 = new StringReader("5y=@EwQ$.mmiiq`f#");
StringReader stringReader1 = new StringReader("");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
stringReader1.ready();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
StringReader stringReader2 = new StringReader("5y=@EwQ$.mmiiq`f#");
javaParserTokenManager0.getNextToken();

[MASTER] 10:17:32.640 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<0>
[MASTER] 10:17:32.641 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
StringReader stringReader0 = new StringReader("xt9PJr|n2~P5;");
PipedInputStream pipedInputStream0 = new PipedInputStream();
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, (-1431), 84);
stringReader0.read();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
StringReader stringReader1 = new StringReader("E>'.[");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E>'.[");
javaCharStream0.ReadByte();
stringReader0.markSupported();
javaParserTokenManager0.MoreLexicalActions();
FileSystemHandling.createFolder((EvoSuiteFile) null);
stringReader0.ready();
stringReader0.mark(31);
MockFile mockFile0 = new MockFile("E>'.[");
StringReader stringReader2 = new StringReader("<<=");
Token token0 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.jjFillToken();
javaParserTokenManager0.SkipLexicalActions(token0);
javaParserTokenManager0.MoreLexicalActions();
assertEquals(3, javaCharStream0.bufpos);
assertEquals((-1428), javaCharStream0.getEndColumn());


[MASTER] 10:17:33.056 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 10:17:33.056 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.GTToken token_GTToken0 = new Token.GTToken();
byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)38;
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k-3Em%\"K+");
StringReader stringReader0 = new StringReader("f2m=n{O7a!*3.qgn");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
stringReader0.read();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k-3Em%\"K+");
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration0).hasMoreElements();
SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
sequenceInputStream0.markSupported();
javaParserTokenManager1.getNextToken();

[MASTER] 10:17:33.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 10:17:33.416 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration0).hasMoreElements();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "xt9PJr|n2~P5;");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "xt9PJr|n2~P5;");
StringReader stringReader0 = new StringReader("5*F'!b?#b>:P3[Hb");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 1836, 1836);
StringReader stringReader1 = new StringReader("5*F'!b?#b>:P3[Hb");
stringReader1.read();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5*F'!b?#b>:P3[Hb");
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
sequenceInputStream0.markSupported();
javaParserTokenManager1.getNextToken();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/19_jmca/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 43%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 19147
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:07:14.861 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:07:14.864 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:07:14.864 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:07:15.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/SimpleNode.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Search finished after 593s and 256 generations, 280495 statements, best individual has fitness: 240.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 121
* Number of covered goals: 105
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Generated 45 tests with total length 908
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 12:25:22.175 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 91%
* Compiling and checking tests
[MASTER] 12:25:49.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test06 -> class java.lang.StackOverflowError: null
[MASTER] 12:25:49.448 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(47);
simpleNode0.setIdentifier("}");
StringWriter stringWriter0 = new StringWriter();
stringWriter0.close();
StringWriter stringWriter1 = stringWriter0.append('h');
Node[] nodeArray0 = new Node[6];
SimpleNode simpleNode1 = new SimpleNode(47);
nodeArray0[0] = (Node) simpleNode1;
nodeArray0[1] = (Node) simpleNode0;
nodeArray0[2] = (Node) simpleNode0;
nodeArray0[3] = (Node) simpleNode0;
nodeArray0[4] = (Node) simpleNode0;
nodeArray0[5] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
StringWriter stringWriter2 = new StringWriter('h');
stringWriter0.close();
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)53;
byteArray0[1] = (byte)125;
byteArray0[2] = (byte)86;
simpleNode0.setIdentifier("/=");
StringWriter stringWriter3 = new StringWriter(0);
String string0 = "{T+N\"{h%]/9|alr0N";
simpleNode0.dump(string0, stringWriter1);

[MASTER] 12:25:49.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test18 -> class java.lang.StackOverflowError: null
[MASTER] 12:25:49.449 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(0);
simpleNode0.setIdentifier("\"!\"");
Node[] nodeArray0 = new Node[0];
simpleNode0.children = nodeArray0;
simpleNode0.jjtAddChild((Node) null, 0);
simpleNode0.toString("");
int int0 = 0;
simpleNode0.setIdentifier("5N*QB56/7oq#");
StringWriter stringWriter0 = new StringWriter(0);
stringWriter0.append((CharSequence) "\"!\"", 0, 0);
simpleNode0.dump("\"!\"", stringWriter0);
simpleNode0.jjtSetParent((Node) null);
simpleNode0.jjtGetNumChildren();
StringWriter stringWriter1 = new StringWriter();
stringWriter0.append('*');
JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
simpleNode1.children = nodeArray0;
simpleNode1.dump("&z uu'(/x`1@y@", stringWriter0);
simpleNode0.jjtGetChild(0);
SimpleNode simpleNode2 = new SimpleNode(0);
simpleNode2.toString();
simpleNode0.jjtGetChild(1);

[MASTER] 12:25:49.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test30 -> class java.lang.StackOverflowError: null
[MASTER] 12:25:49.449 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 16;
SimpleNode simpleNode0 = new SimpleNode(16);
StringWriter stringWriter0 = new StringWriter();
simpleNode0.setIdentifier("%");
simpleNode0.dump("VariableDeclaratorId", stringWriter0);
PipedInputStream pipedInputStream0 = new PipedInputStream();
PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/19_jmca/evosuite-tests
* Done!

* Computation finished
