* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13271
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:37:57.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:37:57.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:37:57.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:37:57.741 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:37:58.223 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:37:58.225 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:37:59.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 00:37:59.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 00:37:59.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 00:37:59.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 00:37:59.511 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 00:37:59.511 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 00:37:59.512 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 00:37:59.512 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 00:37:59.513 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 00:37:59.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 00:37:59.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 00:38:03.761 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 00:38:45.974 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:45:42.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce(DLweka/core/Instance;)V
[MASTER] 00:48:34.999 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 846s and 59 generations, 54775 statements, best individual has fitness: 15632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 799
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 341
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 250
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 318
* Generated 128 tests with total length 3390
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
[MASTER] 01:00:13.099 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 01:00:18.476 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:00:18.764 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:00:18.764 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 01:00:19.645 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13270
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:20:30.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:20:30.872 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:20:30.872 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:20:30.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Search finished after 1090s and 17 generations, 18839 statements, best individual has fitness: 3544.0
[MASTER] 01:38:43.451 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 251 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 612
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 394
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 678
* Number of covered goals: 583
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 244
* Number of covered goals: 90
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 124
* Number of covered goals: 110
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 124
* Number of covered goals: 110
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 441
* Number of covered goals: 359
* Generated 140 tests with total length 3417
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 01:44:18.827 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6783145833333334% of time used, but only 53/140 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
[MASTER] 01:45:39.215 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13269
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13271
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:46:12.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:46:12.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:46:12.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:46:12.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 01:46:15.132 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 01:46:32.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1141
[MASTER] 01:46:32.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1142
[MASTER] 01:46:32.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1143
[MASTER] 01:46:32.859 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1144
[MASTER] 01:46:32.859 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1146
[MASTER] 01:46:32.859 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1147
[MASTER] 01:46:32.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I169 Branch 189 IFLT L1141 - true
[MASTER] 01:46:32.861 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I169 Branch 189 IFLT L1141 - false
[MASTER] 01:46:32.861 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I175 Branch 190 IFNE L1142 - false
[MASTER] 01:46:32.861 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I191 Branch 191 IF_ICMPGE L1144 - true
[MASTER] 01:46:32.864 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:NonEmptyArray
[MASTER] 01:46:32.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I169 Branch 189 IFLT L1141 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 01:46:32.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I175 Branch 190 IFNE L1142 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 01:46:32.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I169 Branch 189 IFLT L1141 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 01:46:32.867 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I191 Branch 191 IF_ICMPGE L1144 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 263s and 128 generations, 130267 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 380
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 843s and 92 generations, 122333 statements, best individual has fitness: 2832.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 62 tests with total length 1264
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13269
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:17:50.380 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:17:50.385 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:17:50.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:17:50.406 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:17:50.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:17:50.410 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 02:18:02.482 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 02:18:02.483 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 02:18:07.579 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:Positive
[MASTER] 02:18:07.582 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D
[MASTER] 02:18:07.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D
[MASTER] 02:18:07.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getLNorm()D
[MASTER] 02:18:31.165 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: Line 574
[MASTER] 02:18:31.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch
[MASTER] 02:18:31.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 243: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:574 - ReplaceConstant - The tokenizing algorithm to use on the strings. -> 
[MASTER] 02:18:31.233 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 02:18:31.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 02:18:31.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 02:18:31.251 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:tokenizerTipText()Ljava/lang/String;
* Search finished after 841s and 89 generations, 91241 statements, best individual has fitness: 1448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 112
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Generated 76 tests with total length 1469
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 02:38:51.226 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_5_1574044730795/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_5_1574044730795/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.226 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.226 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.246 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 02:38:51.247 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 02:38:51.248 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_5_1574044730795/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.DenseInstance;
19: import weka.core.SparseInstance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_5_tmp__ESTest extends NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.4267173502315558
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
31:       FileSystemHandling.shouldAllThrowIOExceptions();
32:       double[] doubleArray0 = new double[5];
33:       FileSystemHandling.shouldAllThrowIOExceptions();
34:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(15.0, doubleArray0);
35:       binarySparseInstance0.deleteAttributeAt((-395));
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       DenseInstance denseInstance0 = new DenseInstance(1717986918);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_5_1574044730795/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.248 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
double[] doubleArray0 = new double[5];
FileSystemHandling.shouldAllThrowIOExceptions();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(15.0, doubleArray0);
binarySparseInstance0.deleteAttributeAt((-395));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
DenseInstance denseInstance0 = new DenseInstance(1717986918);

[MASTER] 02:38:51.475 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1574044731444/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1574044731444/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.475 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.475 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.475 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 02:38:51.475 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 02:38:51.476 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 02:38:51.476 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:38:51.476 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 02:38:51.476 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1574044731444/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.9366147725931562
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = new Integer(266);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
33:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       String string0 = naiveBayesMultinomialText0.periodicPruningTipText();
36:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);
37:       
38:       naiveBayesMultinomialText0.setStopwords((File) null);
39:       String string1 = naiveBayesMultinomialText0.globalInfo();
40:       assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string1);
41:       
42:       String string2 = naiveBayesMultinomialText0.stemmerTipText();
43:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
44:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
45:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
46:       assertEquals("The stemming algorithm to use on the words.", string2);
47:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
48:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
49:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_11_1574044731444/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.477 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(266);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
String string0 = naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);

naiveBayesMultinomialText0.setStopwords((File) null);
String string1 = naiveBayesMultinomialText0.globalInfo();
assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string1);

String string2 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals("The stemming algorithm to use on the words.", string2);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 02:38:51.520 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_12_1574044731477/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_12_1574044731477/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.520 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.520 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.520 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 02:38:51.520 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 02:38:51.521 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_12_1574044731477/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.misc.InputMappedClassifier;
19: import weka.core.Instances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_12_tmp__ESTest extends NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.478816407902517
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
31:       FileSystemHandling.shouldAllThrowIOExceptions();
32:       FileSystemHandling.shouldAllThrowIOExceptions();
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.getDebug();
35:       naiveBayesMultinomialText0.normTipText();
36:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
37:       naiveBayesMultinomialText0.m_minWordP = 0.0;
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       naiveBayesMultinomialText0.setOptions(stringArray0);
40:       double double0 = naiveBayesMultinomialText0.m_minWordP;
41:       naiveBayesMultinomialText0.stemmerTipText();
42:       naiveBayesMultinomialText0.lowercaseTokensTipText();
43:       naiveBayesMultinomialText0.stopwordsTipText();
44:       naiveBayesMultinomialText0.tokenizerTipText();
45:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
46:       Instances instances0 = null;
47:       try {
48:         instances0 = new Instances((Instances) null);
49:         fail("Expecting exception: NullPointerException");
50:       
51:       } catch(NullPointerException e) {
52:          //
53:          // no message in exception (getMessage() returned null)
54:          //
55:          verifyException("weka.core.Instances", e);
56:       }
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_12_1574044731477/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.521 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.shouldAllThrowIOExceptions();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getDebug();
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.m_minWordP = 0.0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setOptions(stringArray0);
double double0 = naiveBayesMultinomialText0.m_minWordP;
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.tokenizerTipText();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
Instances instances0 = new Instances((Instances) null);

[MASTER] 02:38:51.668 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_17_1574044731646/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_17_1574044731646/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.668 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.668 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.668 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 02:38:51.668 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 02:38:51.668 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_17_1574044731646/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Instances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_17_tmp__ESTest extends NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.4397123874420505
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
30:       FileSystemHandling.shouldAllThrowIOExceptions();
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.normTipText();
33:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
34:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       naiveBayesMultinomialText0.setOptions(stringArray0);
37:       double double0 = naiveBayesMultinomialText0.m_minWordP;
38:       naiveBayesMultinomialText0.stemmerTipText();
39:       naiveBayesMultinomialText0.lowercaseTokensTipText();
40:       naiveBayesMultinomialText0.tokenizerTipText();
41:       Instances instances0 = null;
42:       try {
43:         instances0 = new Instances((Instances) null);
44:         fail("Expecting exception: NullPointerException");
45:       
46:       } catch(NullPointerException e) {
47:          //
48:          // no message in exception (getMessage() returned null)
49:          //
50:          verifyException("weka.core.Instances", e);
51:       }
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_17_1574044731646/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.669 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setOptions(stringArray0);
double double0 = naiveBayesMultinomialText0.m_minWordP;
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.tokenizerTipText();
Instances instances0 = new Instances((Instances) null);

[MASTER] 02:38:51.758 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1574044731735/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1574044731735/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.758 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.758 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.758 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:38:51.758 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:38:51.759 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1574044731735/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.AbstractClassifier;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.misc.InputMappedClassifier;
19: import weka.core.Instances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_21_tmp__ESTest extends NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.5171547072297153
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.normTipText();
32:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       naiveBayesMultinomialText0.setOptions(stringArray0);
35:       double double0 = naiveBayesMultinomialText0.m_minWordP;
36:       naiveBayesMultinomialText0.stemmerTipText();
37:       naiveBayesMultinomialText0.lowercaseTokensTipText();
38:       naiveBayesMultinomialText0.stopwordsTipText();
39:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
40:       naiveBayesMultinomialText0.tokenizerTipText();
41:       Instances instances0 = null;
42:       naiveBayesMultinomialText0.reset();
43:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
44:       Instances instances1 = null;
45:       try {
46:         instances1 = new Instances((Instances) null);
47:         fail("Expecting exception: NullPointerException");
48:       
49:       } catch(NullPointerException e) {
50:          //
51:          // no message in exception (getMessage() returned null)
52:          //
53:          verifyException("weka.core.Instances", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_21_1574044731735/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.759 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setOptions(stringArray0);
double double0 = naiveBayesMultinomialText0.m_minWordP;
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stopwordsTipText();
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
naiveBayesMultinomialText0.tokenizerTipText();
Instances instances0 = null;
naiveBayesMultinomialText0.reset();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
Instances instances1 = new Instances((Instances) null);

[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1574044731759/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1574044731759/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 02:38:51.781 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 02:38:51.782 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1574044731759/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.DenseInstance;
19: import weka.core.Instances;
20: import weka.core.SparseInstance;
21: import weka.core.TestInstances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_22_tmp__ESTest extends NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=0.9004024235381879
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       double[] doubleArray0 = new double[4];
33:       doubleArray0[0] = 0.25;
34:       doubleArray0[1] = 15.0;
35:       doubleArray0[2] = 0.25;
36:       doubleArray0[3] = 15.0;
37:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.25, doubleArray0);
38:       binarySparseInstance0.deleteAttributeAt(2505);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       DenseInstance denseInstance0 = new DenseInstance(2077);
41:       BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1717986918, doubleArray0);
42:       binarySparseInstance0.copy();
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       DenseInstance denseInstance1 = new DenseInstance(2077);
45:       SparseInstance sparseInstance0 = new SparseInstance(1717986918, doubleArray0);
46:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
47:       TestInstances testInstances0 = new TestInstances();
48:       Instances instances0 = testInstances0.generate();
49:       naiveBayesMultinomialText0.m_data = instances0;
50:       Random.setNextRandom(76);
51:       DenseInstance denseInstance2 = new DenseInstance(544.1936349, doubleArray0);
52:       // Undeclared exception!
53:       try { 
54:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance2, true);
55:         fail("Expecting exception: RuntimeException");
56:       
57:       } catch(RuntimeException e) {
58:          //
59:          // DenseInstance doesn't have access to a dataset!
60:          //
61:          verifyException("weka.core.AbstractInstance", e);
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_22_1574044731759/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.782 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
double[] doubleArray0 = new double[4];
doubleArray0[0] = 0.25;
doubleArray0[1] = 15.0;
doubleArray0[2] = 0.25;
doubleArray0[3] = 15.0;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.25, doubleArray0);
binarySparseInstance0.deleteAttributeAt(2505);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
DenseInstance denseInstance0 = new DenseInstance(2077);
BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1717986918, doubleArray0);
binarySparseInstance0.copy();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
DenseInstance denseInstance1 = new DenseInstance(2077);
SparseInstance sparseInstance0 = new SparseInstance(1717986918, doubleArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.m_data = instances0;
Random.setNextRandom(76);
DenseInstance denseInstance2 = new DenseInstance(544.1936349, doubleArray0);
naiveBayesMultinomialText0.tokenizeInstance(denseInstance2, true);

[MASTER] 02:38:51.834 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1574044731814/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1574044731814/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.834 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.834 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.835 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 02:38:51.835 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 02:38:51.835 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1574044731814/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Locale;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_24_tmp__ESTest extends NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.44160000178792
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
28:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.setPeriodicPruning(3271);
30:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
31:       naiveBayesMultinomialText1.setDebug(false);
32:       naiveBayesMultinomialText1.tokenizerTipText();
33:       naiveBayesMultinomialText0.getUseWordFrequencies();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.listOptions();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText3.setNormalizeDocLength(true);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText4.setLNorm(3271);
40:       naiveBayesMultinomialText3.getUseStopList();
41:       naiveBayesMultinomialText4.setPeriodicPruning(8);
42:       naiveBayesMultinomialText1.setMinWordFrequency(2.0);
43:       naiveBayesMultinomialText4.normTipText();
44:       String[] stringArray0 = naiveBayesMultinomialText2.getOptions();
45:       naiveBayesMultinomialText1.getStopwords();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       naiveBayesMultinomialText4.setOptions(stringArray0);
48:       Locale.getISOLanguages();
49:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
50:       assertEquals(3271, naiveBayesMultinomialText0.getPeriodicPruning());
51:       assertFalse(boolean0);
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_24_1574044731814/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.836 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning(3271);
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.setDebug(false);
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.listOptions();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.setNormalizeDocLength(true);
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText4.setLNorm(3271);
naiveBayesMultinomialText3.getUseStopList();
naiveBayesMultinomialText4.setPeriodicPruning(8);
naiveBayesMultinomialText1.setMinWordFrequency(2.0);
naiveBayesMultinomialText4.normTipText();
String[] stringArray0 = naiveBayesMultinomialText2.getOptions();
naiveBayesMultinomialText1.getStopwords();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText4.setOptions(stringArray0);
Locale.getISOLanguages();
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertEquals(3271, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(boolean0);


[MASTER] 02:38:51.926 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1574044731878/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1574044731878/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:51.926 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.926 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:51.935 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 02:38:51.935 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 02:38:51.935 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 02:38:51.935 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1574044731878/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.classifiers.functions.supportVector.Kernel;
20: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
21: import weka.core.Capabilities;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_27_tmp__ESTest extends NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.5531257522061517
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
34:       File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
35:       FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
36:       byte[] byteArray0 = new byte[9];
37:       byteArray0[0] = (byte)16;
38:       byteArray0[1] = (byte)55;
39:       byteArray0[2] = (byte)3;
40:       byteArray0[3] = (byte)122;
41:       byteArray0[4] = (byte)16;
42:       byteArray0[5] = (byte)16;
43:       byteArray0[6] = (byte)16;
44:       byteArray0[7] = (byte)112;
45:       byteArray0[8] = (byte) (-3);
46:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
47:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
48:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(378, 378);
49:       Kernel.makeCopies(precomputedKernelMatrixKernel0, 963);
50:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
51:       FileSystemHandling.shouldAllThrowIOExceptions();
52:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "WOX#|C6");
53:       byte[] byteArray1 = new byte[0];
54:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
55:       naiveBayesMultinomialText0.m_stopwordsFile = file0;
56:       String string0 = naiveBayesMultinomialText0.stemmerTipText();
57:       assertEquals("The stemming algorithm to use on the words.", string0);
58:       
59:       naiveBayesMultinomialText0.getStopwords();
60:       String string1 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
61:       assertEquals("Use word frequencies rather than binary bag of words representation", string1);
62:       
63:       linkedHashMap0.clear();
64:       String string2 = naiveBayesMultinomialText0.tokenizerTipText();
65:       assertEquals("The tokenizing algorithm to use on the strings.", string2);
66:       
67:       naiveBayesMultinomialText0.getTokenizer();
68:       naiveBayesMultinomialText0.getTokenizer();
69:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
70:       assertEquals(0, capabilities0.getMinimumNumberInstances());
71:       
72:       String string3 = naiveBayesMultinomialText0.periodicPruningTipText();
73:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
74:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
75:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
76:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
77:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
78:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string3);
79:   }
80: }
RegularFileObject[/tmp/EvoSuite_27_1574044731878/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:51.936 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)16;
byteArray0[1] = (byte)55;
byteArray0[2] = (byte)3;
byteArray0[3] = (byte)122;
byteArray0[4] = (byte)16;
byteArray0[5] = (byte)16;
byteArray0[6] = (byte)16;
byteArray0[7] = (byte)112;
byteArray0[8] = (byte) (-3);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(378, 378);
Kernel.makeCopies(precomputedKernelMatrixKernel0, 963);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "WOX#|C6");
byte[] byteArray1 = new byte[0];
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
naiveBayesMultinomialText0.m_stopwordsFile = file0;
String string0 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string0);

naiveBayesMultinomialText0.getStopwords();
String string1 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string1);

linkedHashMap0.clear();
String string2 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string2);

naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.getTokenizer();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
assertEquals(0, capabilities0.getMinimumNumberInstances());

String string3 = naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string3);


[MASTER] 02:38:52.139 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1574044732110/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1574044732110/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.139 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.139 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 02:38:52.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 02:38:52.141 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1574044732110/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.classifiers.misc.InputMappedClassifier;
20: import weka.core.Instances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_36_tmp__ESTest extends NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=3.479552056658728
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       FileSystemHandling.shouldAllThrowIOExceptions();
33:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e-Vtn6Kaa");
34:       MockFile mockFile0 = new MockFile("");
35:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
36:       MockFile mockFile1 = new MockFile("");
37:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e-Vtn6Kaa");
38:       mockFile1.toPath();
39:       mockFile0.getAbsoluteFile();
40:       mockFile0.mkdirs();
41:       mockFile0.delete();
42:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
44:       naiveBayesMultinomialText0.getLowercaseTokens();
45:       naiveBayesMultinomialText0.normTipText();
46:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
47:       naiveBayesMultinomialText0.getStopwords();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       naiveBayesMultinomialText0.setOptions(stringArray0);
50:       naiveBayesMultinomialText0.getLNorm();
51:       naiveBayesMultinomialText0.stemmerTipText();
52:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
53:       naiveBayesMultinomialText1.lowercaseTokensTipText();
54:       naiveBayesMultinomialText0.stopwordsTipText();
55:       naiveBayesMultinomialText0.tokenizerTipText();
56:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
57:       try { 
58:         inputMappedClassifier0.getModelHeader((Instances) null);
59:         fail("Expecting exception: NullPointerException");
60:       
61:       } catch(NullPointerException e) {
62:          //
63:          // no message in exception (getMessage() returned null)
64:          //
65:          verifyException("weka.core.Instances", e);
66:       }
67:   }
68: }
RegularFileObject[/tmp/EvoSuite_36_1574044732110/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.141 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e-Vtn6Kaa");
MockFile mockFile0 = new MockFile("");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
MockFile mockFile1 = new MockFile("");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e-Vtn6Kaa");
mockFile1.toPath();
mockFile0.getAbsoluteFile();
mockFile0.mkdirs();
mockFile0.delete();
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getStopwords();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.lowercaseTokensTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.tokenizerTipText();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
inputMappedClassifier0.getModelHeader((Instances) null);

[MASTER] 02:38:52.393 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1574044732376/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1574044732376/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.393 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.393 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 02:38:52.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 02:38:52.394 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1574044732376/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.4818586614236438
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.getLowercaseTokens();
28:       naiveBayesMultinomialText0.setUseWordFrequencies(false);
29:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText1.m_t = (double) 1279;
31:       naiveBayesMultinomialText1.setPeriodicPruning(1279);
32:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
33:       naiveBayesMultinomialText1.setDebug(true);
34:       naiveBayesMultinomialText1.tokenizerTipText();
35:       naiveBayesMultinomialText0.getUseWordFrequencies();
36:       naiveBayesMultinomialText0.listOptions();
37:       naiveBayesMultinomialText1.setNormalizeDocLength(true);
38:       naiveBayesMultinomialText1.setLNorm(0.0);
39:       naiveBayesMultinomialText0.getLowercaseTokens();
40:       naiveBayesMultinomialText0.setMinWordFrequency(2289.2784104);
41:       naiveBayesMultinomialText0.normTipText();
42:       String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
43:       naiveBayesMultinomialText0.getStopwords();
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       naiveBayesMultinomialText0.setOptions(stringArray0);
46:       naiveBayesMultinomialText0.getOptions();
47:       naiveBayesMultinomialText0.getNormalizeDocLength();
48:       naiveBayesMultinomialText0.lowercaseTokensTipText();
49:       System.setCurrentTimeMillis(1279);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_45_1574044732376/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.395 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.setUseWordFrequencies(false);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.m_t = (double) 1279;
naiveBayesMultinomialText1.setPeriodicPruning(1279);
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.setDebug(true);
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText1.setNormalizeDocLength(true);
naiveBayesMultinomialText1.setLNorm(0.0);
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.setMinWordFrequency(2289.2784104);
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
naiveBayesMultinomialText0.getStopwords();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.lowercaseTokensTipText();
System.setCurrentTimeMillis(1279);

[MASTER] 02:38:52.485 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_48_1574044732455/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_48_1574044732455/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.485 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.485 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.485 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 02:38:52.486 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 02:38:52.486 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_48_1574044732455/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Locale;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_48_tmp__ESTest extends NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.44160000178792
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
28:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.setPeriodicPruning(3271);
30:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
31:       naiveBayesMultinomialText1.setDebug(false);
32:       naiveBayesMultinomialText0.minWordFrequencyTipText();
33:       naiveBayesMultinomialText0.getUseWordFrequencies();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText2.listOptions();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText3.setNormalizeDocLength(true);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText4.setLNorm(3271);
40:       naiveBayesMultinomialText3.getLowercaseTokens();
41:       naiveBayesMultinomialText4.setPeriodicPruning(8);
42:       naiveBayesMultinomialText1.setMinWordFrequency(2.0);
43:       naiveBayesMultinomialText4.normTipText();
44:       String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
45:       naiveBayesMultinomialText1.getStopwords();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       naiveBayesMultinomialText4.setOptions(stringArray0);
48:       Locale.getISOLanguages();
49:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
50:       assertEquals(3271, naiveBayesMultinomialText0.getPeriodicPruning());
51:       assertFalse(boolean0);
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_48_1574044732455/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.487 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning(3271);
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.setDebug(false);
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.listOptions();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.setNormalizeDocLength(true);
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText4.setLNorm(3271);
naiveBayesMultinomialText3.getLowercaseTokens();
naiveBayesMultinomialText4.setPeriodicPruning(8);
naiveBayesMultinomialText1.setMinWordFrequency(2.0);
naiveBayesMultinomialText4.normTipText();
String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
naiveBayesMultinomialText1.getStopwords();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText4.setOptions(stringArray0);
Locale.getISOLanguages();
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertEquals(3271, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(boolean0);


[MASTER] 02:38:52.627 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_54_1574044732609/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_54_1574044732609/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.627 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.627 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.627 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 02:38:52.627 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 02:38:52.628 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_54_1574044732609/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Locale;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_54_tmp__ESTest extends NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.44160000178792
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
28:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.setPeriodicPruning(3271);
30:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
31:       naiveBayesMultinomialText1.setDebug(false);
32:       naiveBayesMultinomialText1.tokenizerTipText();
33:       naiveBayesMultinomialText0.getUseWordFrequencies();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText2.listOptions();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText3.setNormalizeDocLength(true);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText4.setLNorm(3271);
40:       naiveBayesMultinomialText3.getLowercaseTokens();
41:       naiveBayesMultinomialText4.setPeriodicPruning(8);
42:       naiveBayesMultinomialText1.setMinWordFrequency(2.0);
43:       naiveBayesMultinomialText4.normTipText();
44:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
45:       naiveBayesMultinomialText1.getStopwords();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       naiveBayesMultinomialText4.setOptions(stringArray0);
48:       Locale.getISOLanguages();
49:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
50:       assertEquals(3271, naiveBayesMultinomialText0.getPeriodicPruning());
51:       assertFalse(boolean0);
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_54_1574044732609/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.628 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning(3271);
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.setDebug(false);
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.listOptions();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.setNormalizeDocLength(true);
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText4.setLNorm(3271);
naiveBayesMultinomialText3.getLowercaseTokens();
naiveBayesMultinomialText4.setPeriodicPruning(8);
naiveBayesMultinomialText1.setMinWordFrequency(2.0);
naiveBayesMultinomialText4.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText1.getStopwords();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText4.setOptions(stringArray0);
Locale.getISOLanguages();
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertEquals(3271, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(boolean0);


[MASTER] 02:38:52.673 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1574044732650/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1574044732650/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.673 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.673 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 02:38:52.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 02:38:52.674 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1574044732650/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Instance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.0931471805599453
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}xpy");
30:       double[] doubleArray0 = new double[1];
31:       doubleArray0[0] = 1960.9902929;
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       try { 
35:         naiveBayesMultinomialText0.updateClassifier((Instance) null, true);
36:         fail("Expecting exception: NullPointerException");
37:       
38:       } catch(NullPointerException e) {
39:          //
40:          // no message in exception (getMessage() returned null)
41:          //
42:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
43:       }
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_56_1574044732650/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.674 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}xpy");
double[] doubleArray0 = new double[1];
doubleArray0[0] = 1960.9902929;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.updateClassifier((Instance) null, true);

[MASTER] 02:38:52.690 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_57_1574044732674/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_57_1574044732674/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.690 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.690 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.690 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 02:38:52.690 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 02:38:52.690 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_57_1574044732674/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.DenseInstance;
19: import weka.core.Instance;
20: import weka.core.SparseInstance;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_57_tmp__ESTest extends NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=0.9909065731902369
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       FileSystemHandling.shouldAllThrowIOExceptions();
33:       double[] doubleArray0 = new double[4];
34:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1892.3144916288243, doubleArray0);
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       double double0 = naiveBayesMultinomialText1.m_t;
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       DenseInstance denseInstance0 = new DenseInstance(0.0, doubleArray0);
40:       SparseInstance sparseInstance0 = new SparseInstance(1717986918, doubleArray0);
41:       // Undeclared exception!
42:       try { 
43:         naiveBayesMultinomialText0.tokenizeInstance((Instance) null, true);
44:         fail("Expecting exception: NullPointerException");
45:       
46:       } catch(NullPointerException e) {
47:          //
48:          // no message in exception (getMessage() returned null)
49:          //
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_57_1574044732674/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.691 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
double[] doubleArray0 = new double[4];
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1892.3144916288243, doubleArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
double double0 = naiveBayesMultinomialText1.m_t;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
DenseInstance denseInstance0 = new DenseInstance(0.0, doubleArray0);
SparseInstance sparseInstance0 = new SparseInstance(1717986918, doubleArray0);
naiveBayesMultinomialText0.tokenizeInstance((Instance) null, true);

[MASTER] 02:38:52.711 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1574044732691/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1574044732691/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.java]]
[MASTER] 02:38:52.711 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.711 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:38:52.711 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 02:38:52.711 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 02:38:52.711 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1574044732691/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 02:38:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.mock.java.io.MockFile;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.AbstractClassifier;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.misc.InputMappedClassifier;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_58_tmp__ESTest extends NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.479685821917471
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, (String[]) null);
30:       MockFile mockFile0 = new MockFile("");
31:       mockFile0.toPath();
32:       mockFile0.toURI();
33:       mockFile0.mkdirs();
34:       naiveBayesMultinomialText0.setLNorm((-332.7929));
35:       naiveBayesMultinomialText0.getLowercaseTokens();
36:       naiveBayesMultinomialText0.setMinWordFrequency((-1345.8765954));
37:       naiveBayesMultinomialText0.normTipText();
38:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
39:       naiveBayesMultinomialText0.getStopwords();
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       naiveBayesMultinomialText0.setOptions(stringArray0);
42:       naiveBayesMultinomialText0.getLNorm();
43:       naiveBayesMultinomialText0.stemmerTipText();
44:       naiveBayesMultinomialText0.lowercaseTokensTipText();
45:       naiveBayesMultinomialText0.stopwordsTipText();
46:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
47:       assertEquals("Ignore case when matching attribute names and nomina values.", inputMappedClassifier0.ignoreCaseForNamesTipText());
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_58_1574044732691/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 02:38:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.classifiers.meta.RegressionByDiscretization",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.classifiers.ConditionalDensityEstimator",
141:       "weka.core.SingleIndex",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.misc.InputMappedClassifier",
152:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.estimators.UnivariateDensityEstimator",
159:       "weka.core.FindWithCapabilities",
160:       "weka.filters.unsupervised.attribute.Center",
161:       "weka.core.OptionHandler",
162:       "weka.core.WekaException",
163:       "weka.core.ClassDiscovery",
164:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
165:       "weka.filters.StreamableFilter",
166:       "weka.core.Range",
167:       "weka.core.PartitionGenerator",
168:       "weka.core.scripting.JythonSerializableObject",
169:       "weka.classifiers.Classifier",
170:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.classifiers.trees.j48.ClassifierSplitModel",
175:       "weka.attributeSelection.AttributeTransformer",
176:       "weka.core.tokenizers.WordTokenizer",
177:       "weka.classifiers.trees.j48.ClassifierTree",
178:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
179:       "weka.attributeSelection.PrincipalComponents",
180:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.classifiers.trees.j48.PruneableClassifierTree",
183:       "weka.core.stemmers.LovinsStemmer",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.core.WekaPackageManager",
187:       "weka.core.TechnicalInformationHandler",
188:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
189:       "weka.core.Option",
190:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
191:       "weka.core.neighboursearch.PerformanceStats",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.core.UnassignedDatasetException",
198:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
199:       "weka.classifiers.RandomizableClassifier",
200:       "weka.classifiers.SingleClassifierEnhancer",
201:       "weka.core.RevisionUtils",
202:       "weka.core.Instance",
203:       "weka.core.ProtectedProperties",
204:       "weka.classifiers.IntervalEstimator",
205:       "weka.core.StringLocator",
206:       "weka.core.Matchable",
207:       "weka.core.AttributeStats",
208:       "weka.core.WeightedInstancesHandler",
209:       "weka.core.GlobalInfoJavadoc",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.core.neighboursearch.covertrees.Stack",
212:       "weka.filters.unsupervised.attribute.Remove",
213:       "weka.filters.unsupervised.attribute.Discretize",
214:       "weka.core.Randomizable",
215:       "weka.core.Javadoc",
216:       "weka.classifiers.trees.j48.NoSplit",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
224:       "weka.filters.unsupervised.attribute.Standardize",
225:       "weka.core.stemmers.Stemming",
226:       "weka.core.UnsupportedAttributeTypeException",
227:       "weka.core.TechnicalInformation",
228:       "weka.classifiers.Sourcable",
229:       "weka.core.RevisionHandler",
230:       "weka.classifiers.evaluation.output.prediction.PlainText",
231:       "weka.core.neighboursearch.TreePerformanceStats",
232:       "weka.core.xml.XMLSerialization",
233:       "weka.classifiers.xml.XMLClassifier",
234:       "weka.filters.Filter"
235:     );
236:   } 
237: 
238:   private static void resetClasses() {
239:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
240: 
241:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
242:       "weka.classifiers.AbstractClassifier",
243:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
244:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
245:       "weka.core.Capabilities$Capability",
246:       "weka.core.tokenizers.Tokenizer",
247:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
248:       "weka.core.tokenizers.WordTokenizer",
249:       "weka.core.stemmers.NullStemmer",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Utils",
252:       "weka.core.Option",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.stemmers.IteratedLovinsStemmer",
255:       "weka.core.SerializedObject",
256:       "weka.core.TechnicalInformation",
257:       "weka.core.TechnicalInformation$Type",
258:       "weka.core.TechnicalInformation$Field",
259:       "weka.core.RevisionUtils",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
272:       "weka.core.Tag",
273:       "weka.classifiers.lazy.IBk",
274:       "weka.core.neighboursearch.NearestNeighbourSearch",
275:       "weka.core.neighboursearch.LinearNNSearch",
276:       "weka.core.NormalizableDistance",
277:       "weka.core.EuclideanDistance",
278:       "weka.core.Range",
279:       "weka.classifiers.CostMatrix",
280:       "weka.core.TestInstances",
281:       "weka.core.stemmers.SnowballStemmer",
282:       "weka.core.stemmers.Stemming",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.AbstractInstance",
285:       "weka.core.SparseInstance",
286:       "weka.core.BinarySparseInstance",
287:       "weka.core.Instances",
288:       "weka.core.UnassignedDatasetException",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.core.DenseInstance",
293:       "weka.attributeSelection.CorrelationAttributeEval",
294:       "weka.core.tokenizers.NGramTokenizer",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.tokenizers.AlphabeticTokenizer",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.misc.InputMappedClassifier",
307:       "weka.classifiers.rules.ZeroR",
308:       "weka.classifiers.RandomizableClassifier",
309:       "weka.classifiers.functions.SGDText",
310:       "weka.filters.Filter",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.Stopwords",
313:       "weka.core.WekaEnumeration",
314:       "weka.core.Attribute$1",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.core.neighboursearch.KDTree",
321:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
322:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
323:       "weka.classifiers.rules.DecisionTable",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.BestFirst",
326:       "weka.core.SelectedTag",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.functions.GaussianProcesses",
331:       "weka.classifiers.functions.supportVector.CachedKernel",
332:       "weka.classifiers.functions.supportVector.PolyKernel",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.classifiers.bayes.NaiveBayes",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.classifiers.functions.SMOreg",
343:       "weka.classifiers.functions.supportVector.RegOptimizer",
344:       "weka.classifiers.functions.supportVector.RegSMO",
345:       "weka.classifiers.functions.supportVector.RegSMOImproved",
346:       "weka.filters.AllFilter",
347:       "weka.classifiers.IteratedSingleClassifierEnhancer",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.RandomCommittee",
351:       "weka.classifiers.trees.RandomTree",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.PoissonEstimator",
354:       "weka.attributeSelection.AttributeSelection",
355:       "weka.attributeSelection.CfsSubsetEval",
356:       "weka.classifiers.functions.SMO",
357:       "weka.attributeSelection.ReliefFAttributeEval",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.core.UnassignedClassException",
363:       "weka.classifiers.meta.AdditiveRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.meta.CVParameterSelection",
368:       "weka.core.FastVector",
369:       "weka.attributeSelection.OneRAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.trees.J48",
372:       "weka.classifiers.MultipleClassifiersCombiner",
373:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
376:       "weka.classifiers.rules.JRip",
377:       "weka.core.FindWithCapabilities",
378:       "weka.core.SingleIndex",
379:       "weka.core.ClassDiscovery",
380:       "weka.attributeSelection.WrapperSubsetEval",
381:       "weka.classifiers.rules.OneR",
382:       "weka.filters.SimpleFilter",
383:       "weka.filters.SimpleStreamFilter",
384:       "weka.filters.MultiFilter",
385:       "weka.classifiers.lazy.KStar",
386:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.trees.m5.M5Base",
389:       "weka.classifiers.rules.M5Rules",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.meta.Vote",
393:       "weka.classifiers.meta.RegressionByDiscretization",
394:       "weka.filters.unsupervised.attribute.Discretize",
395:       "weka.classifiers.trees.j48.ClassifierTree",
396:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.filters.unsupervised.attribute.NominalToBinary",
399:       "weka.classifiers.functions.neural.SigmoidUnit",
400:       "weka.classifiers.functions.neural.LinearUnit",
401:       "weka.core.Javadoc",
402:       "weka.core.GlobalInfoJavadoc",
403:       "weka.core.Check",
404:       "weka.core.CheckOptionHandler",
405:       "weka.attributeSelection.GainRatioAttributeEval",
406:       "weka.classifiers.trees.REPTree",
407:       "weka.classifiers.meta.Bagging",
408:       "weka.core.TechnicalInformationHandlerJavadoc",
409:       "weka.core.OptionHandlerJavadoc",
410:       "weka.core.ListOptions",
411:       "weka.attributeSelection.InfoGainAttributeEval",
412:       "weka.core.SerializationHelper",
413:       "weka.core.AttributeStats",
414:       "weka.classifiers.trees.RandomForest",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.supportVector.Puk",
417:       "weka.core.ClassCache",
418:       "weka.core.AllJavadoc",
419:       "weka.classifiers.meta.ClassificationViaRegression",
420:       "weka.classifiers.trees.M5P",
421:       "weka.estimators.NormalEstimator",
422:       "weka.core.ManhattanDistance",
423:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
424:       "weka.core.ChebyshevDistance",
425:       "weka.classifiers.functions.VotedPerceptron",
426:       "weka.classifiers.meta.FilteredClassifier",
427:       "weka.filters.supervised.attribute.AttributeSelection",
428:       "weka.attributeSelection.GreedyStepwise",
429:       "weka.classifiers.functions.supportVector.RBFKernel",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.MinkowskiDistance",
433:       "weka.estimators.DiscreteEstimator",
434:       "weka.classifiers.bayes.NaiveBayesUpdateable",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Stacking"
439:     );
440:   }
441: }

[MASTER] 02:38:52.712 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, (String[]) null);
MockFile mockFile0 = new MockFile("");
mockFile0.toPath();
mockFile0.toURI();
mockFile0.mkdirs();
naiveBayesMultinomialText0.setLNorm((-332.7929));
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.setMinWordFrequency((-1345.8765954));
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getStopwords();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stopwordsTipText();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
assertEquals("Ignore case when matching attribute names and nomina values.", inputMappedClassifier0.ignoreCaseForNamesTipText());


[MASTER] 02:38:55.381 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 02:38:55.465 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 02:39:23.989 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 02:39:23.990 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldAllThrowIOExceptions();
double[] doubleArray0 = new double[5];
FileSystemHandling.shouldAllThrowIOExceptions();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(15.0, doubleArray0);
TestInstances testInstances0 = new TestInstances();
binarySparseInstance0.isMissing((-1));
Instances instances0 = testInstances0.generate("");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.buildClassifier(instances0);
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
InputMappedClassifier inputMappedClassifier1 = new InputMappedClassifier();
InputMappedClassifier inputMappedClassifier2 = new InputMappedClassifier();
Environment environment0 = new Environment();
Instances instances1 = testInstances0.generate("stoplist");
Integer integer0 = new Integer(70);
naiveBayesMultinomialText0.buildClassifier(instances1);
BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1717986918);

[MASTER] 02:39:25.701 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 02:39:25.702 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Capabilities capabilities1 = capabilities0.getOtherCapabilities();
Instances instances0 = testInstances0.generate("weka/core/Capabilities.props");
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
InputMappedClassifier inputMappedClassifier1 = new InputMappedClassifier();
Environment environment0 = new Environment();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
Capabilities capabilities2 = new Capabilities(inputMappedClassifier0);
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances1 = testInstances1.generate(".bsi");
Capabilities.Capability capabilities_Capability0 = Capabilities.Capability.DATE_ATTRIBUTES;
capabilities2.and(capabilities1);
capabilities0.enableDependency(capabilities_Capability0);
GlobalInfoJavadoc globalInfoJavadoc0 = new GlobalInfoJavadoc();
Instances instances2 = inputMappedClassifier0.getModelHeader(instances1);
inputMappedClassifier0.getModelHeader(instances2);
Option option0 = new Option("weka/core/Capabilities.props", "[3<{ae ]7k6bTL", 6, "TlsHGC>ec7");
capabilities0.getAttributeCapabilities();
instances0.lastIndexOf(capabilities2);
naiveBayesMultinomialText0.buildClassifier(instances0);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
instances2.add((Instance) binarySparseInstance0);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
naiveBayesMultinomialText0.toString();
Instances instances3 = new Instances(instances0);
Instances instances4 = new Instances(instances2, 1717986918);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13268
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:39:38.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:39:38.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:39:38.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:39:38.405 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:39:38.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:39:38.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Search finished after 841s and 216 generations, 196870 statements, best individual has fitness: 4152.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 267
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 144
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 528
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 144
* Generated 88 tests with total length 1986
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 02:59:31.053 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 02:59:31.372 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 02:59:46.224 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 02:59:46.226 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiFilter multiFilter0 = new MultiFilter();
Filter filter0 = Filter.makeCopy(multiFilter0);
String[] stringArray0 = new String[11];
Filter.runFilter(filter0, stringArray0);
Filter.runFilter(filter0, stringArray0);
AllFilter allFilter0 = new AllFilter();
Filter.runFilter(filter0, stringArray0);
Filter.makeCopies(filter0, 2819);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("", arrayList0, 2370);
Attribute attribute0 = new Attribute("]FeB", instances0);
arrayList0.add(attribute0);
Discretize discretize0 = new Discretize("date");
discretize0.setBins(2);
Instances instances1 = new Instances("KK[F", arrayList0, 0);
int[] intArray0 = new int[5];
intArray0[0] = 2;
intArray0[1] = 3;
intArray0[2] = 2370;
intArray0[3] = 14;
intArray0[4] = 2819;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(14, intArray0, 2);
instances0.remove((Object) binarySparseInstance0);
discretize0.setInputFormat(instances1);

[MASTER] 02:59:51.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 02:59:51.321 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiFilter multiFilter0 = new MultiFilter();
Filter filter0 = Filter.makeCopy(multiFilter0);
String[] stringArray0 = new String[1];
Filter.runFilter(multiFilter0, stringArray0);
Filter.runFilter(filter0, stringArray0);
Filter.runFilter(multiFilter0, stringArray0);
Filter.runFilter(filter0, stringArray0);
AllFilter allFilter0 = new AllFilter();
Filter.runFilter(filter0, (String[]) null);
Filter.makeCopies(filter0, 2819);
MultiFilter multiFilter1 = new MultiFilter();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Attribute attribute0 = new Attribute("5L&_<)znN2#", 125);
arrayList0.add(attribute0);
Discretize discretize0 = new Discretize();
discretize0.setBins(2819);
Instances instances0 = new Instances("string", arrayList0, 0);
discretize0.setInputFormat(instances0);
discretize0.getBins();
Locale.getISOLanguages();
discretize0.batchFinished();
Object object0 = new Object();
Object object1 = new Object();
Attribute attribute1 = new Attribute("@data", instances0, 1);
arrayList0.add(attribute1);
discretize0.setBins(2819);
Instances instances1 = new Instances("numeric", arrayList0, 2807);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13272
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:17:00.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:17:00.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:17:00.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:17:01.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:17:01.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:17:01.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 03:17:07.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 500
[MASTER] 03:17:07.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 501
[MASTER] 03:17:07.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 527
[MASTER] 03:17:07.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 528
[MASTER] 03:17:07.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: Line 536
[MASTER] 03:17:07.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 03:17:07.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 03:17:07.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 581
[MASTER] 03:17:07.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 582
[MASTER] 03:17:07.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch
[MASTER] 03:17:07.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 03:17:07.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: root-Branch
[MASTER] 03:17:07.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: root-Branch
[MASTER] 03:17:07.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch
[MASTER] 03:17:07.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.rules.JRip.setMinNo(D)V:500 - InsertUnaryOp Negation of m
[MASTER] 03:17:07.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 198: weka.classifiers.rules.JRip.setSeed(J)V:527 - ReplaceVariable s -> serialVersionUID
[MASTER] 03:17:07.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 199: weka.classifiers.rules.JRip.setSeed(J)V:527 - InsertUnaryOp Negation of s
[MASTER] 03:17:07.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: weka.classifiers.rules.JRip.getSeed()J:536 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 03:17:07.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: weka.classifiers.rules.JRip.getSeed()J:536 - InsertUnaryOp Negation
[MASTER] 03:17:07.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 03:17:07.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 03:17:07.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 03:17:07.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 210: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp Negation of d
[MASTER] 03:17:07.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 211: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC 1 d
[MASTER] 03:17:07.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 212: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC -1 d
[MASTER] 03:17:07.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Zero
[MASTER] 03:17:07.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 03:17:07.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 03:17:07.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 03:17:07.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 03:17:07.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 03:17:07.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 03:17:07.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 03:17:07.850 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 03:17:07.850 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 03:17:07.850 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 03:17:07.851 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setSeed(J)V: root-Branch in context: weka.classifiers.rules.JRip:setSeed(J)V
[MASTER] 03:17:07.857 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch in context: weka.classifiers.rules.JRip:setMinNo(D)V
[MASTER] 03:17:07.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 03:17:07.859 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setDebug(Z)V
[MASTER] 03:17:07.859 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getSeed()J: root-Branch in context: weka.classifiers.rules.JRip:getSeed()J
[MASTER] 03:17:09.803 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: Line 723
[MASTER] 03:17:09.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 03:17:09.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch
[MASTER] 03:17:09.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 03:17:09.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 03:17:09.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 665: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> cover
[MASTER] 03:17:09.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 666: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accu
[MASTER] 03:17:09.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 667: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accuRate
[MASTER] 03:17:09.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 668: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> maxInfoGain
[MASTER] 03:17:09.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 669: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - InsertUnaryOp Negation
[MASTER] 03:17:09.886 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 03:17:09.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 03:17:09.889 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 03:17:09.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 03:17:09.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 03:17:09.895 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttrValue()D
[MASTER] 03:17:09.895 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 03:17:34.228 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 03:26:21.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Positive
* Search finished after 841s and 213 generations, 193306 statements, best individual has fitness: 13304.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 235
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 993
* Number of covered goals: 488
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Generated 76 tests with total length 1667
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 03:33:05.636 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:33:06.395 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
