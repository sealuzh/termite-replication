* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:58:18.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:58:18.606 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:58:18.614 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:58:18.655 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:58:18.661 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:58:18.663 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 19:06:24.905 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 19:06:28.982 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 523s and 369 generations, 244285 statements, best individual has fitness: 8176.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 165
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 79
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 38%
* Total number of goals: 713
* Number of covered goals: 271
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 79
* Generated 55 tests with total length 1159
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 19:08:10.642 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:08:10.965 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13428
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13431
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 19:12:39.436 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:12:39.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:12:39.453 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:12:40.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:12:41.031 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:12:41.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 19:12:45.019 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 843s and 79 generations, 96492 statements, best individual has fitness: 2992.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 217
* Number of covered goals: 185
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 226
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Generated 62 tests with total length 1225
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 842s and 232 generations, 234753 statements, best individual has fitness: 12512.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 255
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 559
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Generated 77 tests with total length 1862
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 19:30:34.849 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:30:35.855 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13428
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:31:35.670 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:31:35.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:31:35.674 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:31:36.165 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:31:36.690 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:31:36.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:31:38.161 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:31:38.184 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:31:38.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:31:38.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:31:38.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:31:38.186 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:31:38.186 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:31:38.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:31:38.188 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:31:38.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 19:31:38.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 19:31:41.314 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[MASTER] 19:32:30.704 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 19:36:50.346 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Nov 18, 2019 7:38:32 PM sun.rmi.transport.tcp.TCPTransport$AcceptLoop executeAcceptLoop
WARNING: RMI TCP Accept-5209: accept loop for ServerSocket[addr=0.0.0.0/0.0.0.0,localport=5209] throws
java.lang.OutOfMemoryError: unable to create new native thread
	at java.lang.Thread.start0(Native Method)
	at java.lang.Thread.start(Thread.java:717)
	at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:957)
	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1378)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:420)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:377)
	at java.lang.Thread.run(Thread.java:748)

[MASTER] 19:38:32.317 [logback-2] ERROR ClientNodeImpl - Error when exporting statistics: TotalExceptionsTimeline=0
java.rmi.ConnectIOException: error during JRMP connection establishment; nested exception is: 
	java.net.SocketException: Connection reset
	at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:307) ~[na:1.8.0_201]
	at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:202) ~[na:1.8.0_201]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:129) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_201]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl$2.run(ClientNodeImpl.java:358) ~[evosuite.jar:1.0.6]
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210) ~[na:1.8.0_201]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_201]
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246) ~[na:1.8.0_201]
	at java.io.BufferedInputStream.read(BufferedInputStream.java:265) ~[na:1.8.0_201]
	at java.io.DataInputStream.readByte(DataInputStream.java:265) ~[na:1.8.0_201]
	at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:246) ~[na:1.8.0_201]
	... 6 common frames omitted
* Search finished after 844s and 70 generations, 72635 statements, best individual has fitness: 16816.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 53%
* Total number of goals: 1378
* Number of covered goals: 736
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 307
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 424
* Number of covered goals: 237
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 103
* Number of covered goals: 96
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 809
* Number of covered goals: 287
* Generated 114 tests with total length 2865
* Resulting test suite's coverage: 47% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 19:45:53.678 [logback-2] ERROR ClientNodeImpl - Error when generating tests for: weka.classifiers.Evaluation with seed 1019. Configuration id : QMOSA
java.lang.OutOfMemoryError: unable to create new native thread
	at java.lang.Thread.start0(Native Method) [na:1.8.0_201]
	at java.lang.Thread.start(Thread.java:717) [na:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:957) [na:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1367) [na:1.8.0_201]
	at java.util.concurrent.Executors$DelegatedExecutorService.execute(Executors.java:668) ~[na:1.8.0_201]
	at org.evosuite.testcase.execution.TimeoutHandler.executeWithTimeout(TimeoutHandler.java:106) ~[evosuite.jar:1.0.6]
	at org.evosuite.testcase.execution.TimeoutHandler.execute(TimeoutHandler.java:96) ~[evosuite.jar:1.0.6]
	at org.evosuite.testcase.execution.TestCaseExecutor.execute(TestCaseExecutor.java:334) ~[evosuite.jar:1.0.6]
	at org.evosuite.testcase.execution.TestCaseExecutor.execute(TestCaseExecutor.java:277) ~[evosuite.jar:1.0.6]
	at org.evosuite.testcase.execution.TestCaseExecutor.execute(TestCaseExecutor.java:264) ~[evosuite.jar:1.0.6]
	at org.evosuite.assertion.MutationAssertionGenerator.runTest(MutationAssertionGenerator.java:144) ~[evosuite.jar:1.0.6]
	at org.evosuite.assertion.MutationAssertionGenerator.runTest(MutationAssertionGenerator.java:114) ~[evosuite.jar:1.0.6]
	at org.evosuite.assertion.SimpleMutationAssertionGenerator.addAssertions(SimpleMutationAssertionGenerator.java:139) ~[evosuite.jar:1.0.6]
	at org.evosuite.assertion.SimpleMutationAssertionGenerator.addAssertions(SimpleMutationAssertionGenerator.java:114) ~[evosuite.jar:1.0.6]
	at org.evosuite.assertion.SimpleMutationAssertionGenerator.addAssertions(SimpleMutationAssertionGenerator.java:91) ~[evosuite.jar:1.0.6]
	at org.evosuite.TestSuiteGeneratorHelper.addAssertions(TestSuiteGeneratorHelper.java:285) ~[evosuite.jar:1.0.6]
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:520) ~[evosuite.jar:1.0.6]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:238) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.service.ClientNodeImpl$1.run(ClientNodeImpl.java:145) ~[evosuite.jar:1.0.6]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_201]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_201]
* Computation finished
[MASTER] 19:45:53.847 [main] ERROR SearchStatistics - No obtained value for output variable: MutationScore
[MASTER] 19:45:55.852 [main] ERROR SearchStatistics - No obtained value for output variable: MutationScore
[MASTER] 19:45:56.852 [main] ERROR SearchStatistics - No obtained value for output variable: MutationScore
[MASTER] 19:45:57.853 [main] ERROR SearchStatistics - No obtained value for output variable: MutationScore
[MASTER] 19:45:58.854 [main] ERROR SearchStatistics - No obtained value for output variable: MutationScore
[MASTER] 19:45:59.854 [main] ERROR SearchStatistics - No obtained value for output variable: MutationScore
[MASTER] 19:45:59.855 [main] ERROR SearchStatistics - Not going to write down statistics data, as some are missing
[MASTER] 19:45:59.956 [main] ERROR TestGeneration - failed to write statistics data
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Cannot create GC thread. Out of system resources.
# An error report file with more information is saved as:
# /home/ubuntu/termite/projects/107_weka/hs_err_pid10763.log
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13429
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:14:39.868 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:14:39.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:14:39.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:14:39.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
* Search finished after 850s and 27 generations, 28805 statements, best individual has fitness: 2584.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 631
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 610
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 105
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 124
* Number of covered goals: 118
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 124
* Number of covered goals: 118
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 383
* Generated 165 tests with total length 3136
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:34:26.779 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6797166666666666% of time used, but only 65/165 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 20:35:49.302 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13426
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:36:22.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:36:22.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:36:22.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:36:22.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:36:22.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:36:22.500 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 20:36:31.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;: Line 799
[MASTER] 20:36:31.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;: root-Branch
[MASTER] 20:36:31.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 324: weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;:799 - ReplaceConstant - If true, ignores all words that are on the stoplist. -> 
[MASTER] 20:36:31.968 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 20:36:31.969 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;
[MASTER] 20:36:31.971 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;
[MASTER] 20:36:31.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.useStopListTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:useStopListTipText()Ljava/lang/String;
[MASTER] 20:37:59.965 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 20:38:32.725 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 20:38:32.725 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 842s and 105 generations, 104436 statements, best individual has fitness: 1688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 300
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 438
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Generated 71 tests with total length 1646
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 20:55:58.968 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1574110558939/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1574110558939/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 20:55:58.968 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:55:58.968 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:55:58.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 20:55:58.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 20:55:58.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:55:58.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:55:58.972 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1574110558939/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 20:55:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.mock.java.io.MockFile;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.functions.SGDText;
17: import weka.core.tokenizers.WordTokenizer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.1950745878335933
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
30:       naiveBayesMultinomialText0.setStopwords(mockFile0);
31:       WordTokenizer wordTokenizer0 = (WordTokenizer)naiveBayesMultinomialText0.m_tokenizer;
32:       naiveBayesMultinomialText0.setTokenizer(wordTokenizer0);
33:       naiveBayesMultinomialText0.getNormalizeDocLength();
34:       naiveBayesMultinomialText0.getStopwords();
35:       Integer integer0 = new Integer(62);
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
38:       linkedHashMap1.put(integer0, linkedHashMap0);
39:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
40:       naiveBayesMultinomialText0.getMinWordFrequency();
41:       Integer integer1 = new Integer(62);
42:       Integer integer2 = new Integer((-441));
43:       linkedHashMap1.put(integer2, linkedHashMap0);
44:       naiveBayesMultinomialText0.stemmerTipText();
45:       naiveBayesMultinomialText0.getNormalizeDocLength();
46:       SGDText sGDText0 = new SGDText();
47:       sGDText0.getTokenizer();
48:       naiveBayesMultinomialText0.setTokenizer(wordTokenizer0);
49:       naiveBayesMultinomialText0.getTokenizer();
50:       naiveBayesMultinomialText0.setUseStopList(true);
51:       naiveBayesMultinomialText0.lowercaseTokensTipText();
52:       naiveBayesMultinomialText0.getPeriodicPruning();
53:       naiveBayesMultinomialText0.listOptions();
54:       naiveBayesMultinomialText0.getRevision();
55:       naiveBayesMultinomialText0.getUseWordFrequencies();
56:       naiveBayesMultinomialText0.getTokenizer();
57:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
58:       
59:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
60:       double double0 = naiveBayesMultinomialText1.getNorm();
61:       assertEquals(1.0, double0, 0.01);
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_25_1574110558939/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 20:55:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.core.AdditionalMeasureProducer",
127:       "weka.core.neighboursearch.balltrees.BallNode",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.SingleIndex",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.attributeSelection.ASEvaluation",
133:       "weka.core.AbstractInstance",
134:       "weka.classifiers.lazy.kstar.KStarConstants",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.core.Tag",
142:       "weka.core.ManhattanDistance",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.FindWithCapabilities",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.attributeSelection.AttributeTransformer",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
158:       "weka.attributeSelection.PrincipalComponents",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
171:       "weka.filters.Sourcable",
172:       "weka.core.Attribute",
173:       "weka.core.Stopwords",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.tokenizers.NGramTokenizer",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.classifiers.lazy.KStar",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.StringLocator",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.filters.unsupervised.attribute.Remove",
188:       "weka.core.Randomizable",
189:       "weka.core.EuclideanDistance",
190:       "weka.core.Instances",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
195:       "weka.filters.unsupervised.attribute.Standardize",
196:       "weka.core.TechnicalInformation",
197:       "weka.core.UnsupportedAttributeTypeException",
198:       "weka.classifiers.Sourcable",
199:       "weka.core.RevisionHandler",
200:       "weka.classifiers.evaluation.output.prediction.PlainText",
201:       "weka.core.xml.XMLSerialization",
202:       "weka.classifiers.xml.XMLClassifier",
203:       "weka.classifiers.lazy.IBk",
204:       "weka.filters.Filter",
205:       "weka.filters.supervised.attribute.Discretize"
206:     );
207:   } 
208: 
209:   private static void resetClasses() {
210:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
211: 
212:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
213:       "weka.classifiers.AbstractClassifier",
214:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
215:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
216:       "weka.core.Capabilities$Capability",
217:       "weka.core.tokenizers.Tokenizer",
218:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
219:       "weka.core.tokenizers.WordTokenizer",
220:       "weka.core.stemmers.NullStemmer",
221:       "weka.classifiers.RandomizableClassifier",
222:       "weka.core.Tag",
223:       "weka.classifiers.functions.SGDText",
224:       "weka.core.Stopwords",
225:       "weka.core.Utils",
226:       "weka.core.Option",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.stemmers.SnowballStemmer",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.attributeSelection.ASEvaluation",
232:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
233:       "weka.attributeSelection.PrincipalComponents",
234:       "weka.classifiers.SingleClassifierEnhancer",
235:       "weka.classifiers.misc.InputMappedClassifier",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
238:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
239:       "weka.core.neighboursearch.balltrees.BallNode",
240:       "weka.core.RevisionUtils",
241:       "weka.core.neighboursearch.NearestNeighbourSearch",
242:       "weka.core.neighboursearch.CoverTree",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.EuclideanDistance",
245:       "weka.core.Range",
246:       "weka.core.Instances",
247:       "weka.filters.Filter",
248:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
249:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.core.UnassignedDatasetException",
253:       "weka.core.BinarySparseInstance",
254:       "weka.core.Attribute",
255:       "weka.core.ProtectedProperties",
256:       "weka.core.DenseInstance",
257:       "weka.classifiers.bayes.BayesNet",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.neighboursearch.BallTree",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.SerializedObject",
274:       "weka.core.TestInstances",
275:       "weka.classifiers.bayes.net.BIFReader",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
279:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
280:       "weka.core.WekaException",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.functions.SimpleLogistic",
283:       "weka.classifiers.trees.REPTree",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.IteratedSingleClassifierEnhancer",
287:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
288:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
289:       "weka.classifiers.meta.Bagging",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.classifiers.lazy.KStar",
292:       "weka.core.stemmers.LovinsStemmer",
293:       "weka.core.FindWithCapabilities",
294:       "weka.core.SingleIndex",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.LogitBoost",
298:       "weka.classifiers.trees.DecisionStump",
299:       "weka.core.neighboursearch.KDTree",
300:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
301:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
302:       "weka.core.converters.ArffLoader$ArffReader",
303:       "weka.classifiers.CostMatrix",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.filters.AllFilter",
308:       "weka.core.UnsupportedAttributeTypeException",
309:       "weka.core.stemmers.Stemming",
310:       "weka.attributeSelection.OneRAttributeEval",
311:       "weka.classifiers.functions.SGD",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.classifiers.misc.SerializedClassifier",
315:       "weka.attributeSelection.WrapperSubsetEval",
316:       "weka.classifiers.functions.VotedPerceptron",
317:       "weka.core.TechnicalInformation",
318:       "weka.core.TechnicalInformation$Type",
319:       "weka.core.TechnicalInformation$Field",
320:       "weka.core.tokenizers.AlphabeticTokenizer",
321:       "weka.attributeSelection.CfsSubsetEval",
322:       "weka.classifiers.bayes.NaiveBayesMultinomial",
323:       "weka.core.tokenizers.NGramTokenizer",
324:       "weka.classifiers.functions.SMOreg",
325:       "weka.classifiers.functions.supportVector.RegOptimizer",
326:       "weka.classifiers.functions.supportVector.RegSMO",
327:       "weka.classifiers.functions.supportVector.RegSMOImproved",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.estimators.MahalanobisEstimator",
331:       "weka.core.SelectedTag",
332:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
333:       "weka.classifiers.meta.CostSensitiveClassifier",
334:       "weka.classifiers.functions.MultilayerPerceptron",
335:       "weka.core.FastVector",
336:       "weka.filters.unsupervised.attribute.NominalToBinary",
337:       "weka.classifiers.functions.neural.SigmoidUnit",
338:       "weka.classifiers.functions.neural.LinearUnit",
339:       "weka.core.ClassDiscovery",
340:       "weka.attributeSelection.GainRatioAttributeEval",
341:       "weka.core.WekaEnumeration",
342:       "weka.classifiers.functions.supportVector.StringKernel",
343:       "weka.classifiers.meta.RegressionByDiscretization",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.classifiers.trees.J48",
346:       "weka.classifiers.trees.j48.ClassifierTree",
347:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
348:       "weka.classifiers.trees.RandomForest",
349:       "weka.classifiers.meta.AdditiveRegression",
350:       "weka.classifiers.rules.JRip",
351:       "weka.core.Attribute$1",
352:       "weka.classifiers.rules.OneR",
353:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
354:       "weka.core.ManhattanDistance",
355:       "weka.core.matrix.Matrix",
356:       "weka.estimators.KernelEstimator",
357:       "weka.classifiers.meta.MultiClassClassifier",
358:       "weka.classifiers.functions.Logistic",
359:       "weka.core.Javadoc",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.classifiers.functions.LinearRegression",
363:       "weka.classifiers.meta.ClassificationViaRegression",
364:       "weka.classifiers.trees.m5.M5Base",
365:       "weka.classifiers.trees.M5P",
366:       "weka.classifiers.meta.AdaBoostM1",
367:       "weka.classifiers.meta.AttributeSelectedClassifier",
368:       "weka.attributeSelection.ASSearch",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
371:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
372:       "weka.classifiers.meta.Stacking",
373:       "weka.core.UnassignedClassException",
374:       "weka.classifiers.rules.DecisionTable",
375:       "weka.classifiers.trees.RandomTree",
376:       "weka.core.Check",
377:       "weka.core.CheckOptionHandler",
378:       "weka.core.GlobalInfoJavadoc",
379:       "weka.attributeSelection.ReliefFAttributeEval",
380:       "weka.classifiers.rules.M5Rules",
381:       "weka.core.ListOptions",
382:       "weka.core.CheckGOE",
383:       "weka.classifiers.meta.FilteredClassifier",
384:       "weka.filters.supervised.attribute.AttributeSelection",
385:       "weka.attributeSelection.AttributeSelection",
386:       "weka.attributeSelection.GreedyStepwise",
387:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
388:       "weka.classifiers.trees.LMT",
389:       "weka.core.MinkowskiDistance",
390:       "weka.core.TechnicalInformationHandlerJavadoc",
391:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.functions.GaussianProcesses",
394:       "weka.classifiers.lazy.LWL",
395:       "weka.core.OptionHandlerJavadoc",
396:       "weka.classifiers.meta.RandomCommittee",
397:       "weka.filters.SimpleFilter",
398:       "weka.filters.SimpleStreamFilter",
399:       "weka.filters.MultiFilter",
400:       "weka.classifiers.functions.supportVector.Puk",
401:       "weka.estimators.PoissonEstimator",
402:       "weka.classifiers.functions.supportVector.RBFKernel",
403:       "weka.classifiers.meta.CVParameterSelection",
404:       "weka.classifiers.meta.Vote"
405:     );
406:   }
407: }

[MASTER] 20:55:58.973 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
naiveBayesMultinomialText0.setStopwords(mockFile0);
WordTokenizer wordTokenizer0 = (WordTokenizer)naiveBayesMultinomialText0.m_tokenizer;
naiveBayesMultinomialText0.setTokenizer(wordTokenizer0);
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.getStopwords();
Integer integer0 = new Integer(62);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.getMinWordFrequency();
Integer integer1 = new Integer(62);
Integer integer2 = new Integer((-441));
linkedHashMap1.put(integer2, linkedHashMap0);
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.getNormalizeDocLength();
SGDText sGDText0 = new SGDText();
sGDText0.getTokenizer();
naiveBayesMultinomialText0.setTokenizer(wordTokenizer0);
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.setUseStopList(true);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.getTokenizer();
assertTrue(naiveBayesMultinomialText0.getUseStopList());

NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
double double0 = naiveBayesMultinomialText1.getNorm();
assertEquals(1.0, double0, 0.01);


[MASTER] 20:56:01.947 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 20:56:02.024 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
