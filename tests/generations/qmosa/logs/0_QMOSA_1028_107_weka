* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20774
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:45:33.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:45:33.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:45:33.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:45:33.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
* Search finished after 856s and 26 generations, 29555 statements, best individual has fitness: 2616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 628
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 410
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 608
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 244
* Number of covered goals: 102
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 121
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 121
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 387
* Generated 170 tests with total length 3717
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 22:05:29.373 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6755583333333334% of time used, but only 54/170 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 22:06:53.936 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20771
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20773
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
[MASTER] 22:07:28.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:07:28.418 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:07:28.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:07:28.505 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:07:28.521 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:07:28.522 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 22:09:55.648 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 529s and 369 generations, 327851 statements, best individual has fitness: 7928.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 72
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 61 tests with total length 1321
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 22:17:10.766 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:17:11.147 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 842s and 88 generations, 128935 statements, best individual has fitness: 2896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 260
* Number of covered goals: 237
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Generated 52 tests with total length 1184
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20771
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:23:40.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:23:40.653 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:23:40.656 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:23:40.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 22:23:42.839 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 22:23:51.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:23:51.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 261s and 128 generations, 131032 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 15 tests with total length 353
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20775
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20774
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:41:11.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:41:11.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:41:11.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:41:11.684 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:41:11.686 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:41:11.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:41:13.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:41:13.134 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:41:13.135 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
[MASTER] 22:41:14.144 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:41:14.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:41:14.342 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 22:41:17.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 22:41:44.502 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:41:44.502 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 842s and 140 generations, 129598 statements, best individual has fitness: 1408.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 338
* Number of covered goals: 317
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 194
* Number of covered goals: 166
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 476
* Number of covered goals: 432
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 112
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Search finished after 842s and 204 generations, 197526 statements, best individual has fitness: 12864.0
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 165
* Generated 69 tests with total length 1484
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 247
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 993
* Number of covered goals: 530
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Generated 77 tests with total length 1739
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 22:59:04.587 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1574204344564/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1574204344564/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 22:59:04.587 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:59:04.587 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:59:04.590 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 22:59:04.590 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 22:59:04.590 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 22:59:04.591 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1574204344564/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 22:59:04 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.meta.Stacking;
18: import weka.core.BinarySparseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.0931471805599453
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       Stacking stacking0 = new Stacking();
30:       FileSystemHandling.shouldAllThrowIOExceptions();
31:       int[] intArray0 = new int[5];
32:       intArray0[0] = 0;
33:       intArray0[1] = 0;
34:       intArray0[2] = 0;
35:       intArray0[3] = (-5438);
36:       intArray0[4] = 0;
37:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(5118.514560344084, intArray0, 26);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
39:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
40:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
41:       naiveBayesMultinomialText0.getTokenizer();
42:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
43:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
44:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
45:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
46:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
47:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_18_1574204344564/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 22:59:04 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.ChebyshevDistance",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.SerializedObject",
125:       "weka.core.Summarizable",
126:       "weka.core.AdditionalMeasureProducer",
127:       "weka.core.neighboursearch.balltrees.BallNode",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.Check",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.core.AbstractInstance",
135:       "weka.core.SelectedTag",
136:       "org.pentaho.packageManagement.DefaultPackage",
137:       "weka.classifiers.misc.InputMappedClassifier",
138:       "weka.core.Version",
139:       "weka.core.Tag",
140:       "weka.core.neighboursearch.CoverTree",
141:       "weka.classifiers.AbstractClassifier",
142:       "weka.classifiers.meta.Stacking",
143:       "weka.core.OptionHandler",
144:       "weka.core.WekaException",
145:       "weka.core.Range",
146:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
147:       "weka.classifiers.Classifier",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
149:       "weka.core.Capabilities$Capability",
150:       "weka.core.SparseInstance",
151:       "org.pentaho.packageManagement.PackageManager",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.classifiers.misc.SerializedClassifier",
154:       "weka.core.stemmers.SnowballStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.core.TechnicalInformationHandler",
159:       "weka.core.neighboursearch.LinearNNSearch",
160:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
161:       "weka.core.Option",
162:       "weka.classifiers.meta.CostSensitiveClassifier",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.core.Attribute",
165:       "weka.core.Stopwords",
166:       "weka.core.tokenizers.AlphabeticTokenizer",
167:       "weka.core.FastVector",
168:       "weka.classifiers.MultipleClassifiersCombiner",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.AttributeStats",
176:       "weka.core.WeightedInstancesHandler",
177:       "weka.core.GlobalInfoJavadoc",
178:       "weka.core.neighboursearch.NearestNeighbourSearch",
179:       "weka.classifiers.trees.DecisionStump",
180:       "weka.core.TechnicalInformation$Field",
181:       "weka.core.neighboursearch.covertrees.Stack",
182:       "weka.core.Randomizable",
183:       "weka.core.Javadoc",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier"
198:     );
199:   } 
200: 
201:   private static void resetClasses() {
202:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
203: 
204:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
205:       "weka.classifiers.AbstractClassifier",
206:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
208:       "weka.core.Capabilities$Capability",
209:       "weka.core.tokenizers.Tokenizer",
210:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
211:       "weka.core.tokenizers.WordTokenizer",
212:       "weka.core.stemmers.NullStemmer",
213:       "weka.core.Capabilities",
214:       "weka.core.Utils",
215:       "org.pentaho.packageManagement.PackageManager",
216:       "org.pentaho.packageManagement.DefaultPackageManager",
217:       "weka.core.Version",
218:       "weka.core.Environment",
219:       "weka.core.WekaPackageManager",
220:       "weka.attributeSelection.ASEvaluation",
221:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
222:       "weka.attributeSelection.PrincipalComponents",
223:       "weka.core.RevisionUtils",
224:       "weka.core.Option",
225:       "weka.classifiers.bayes.BayesNet",
226:       "weka.classifiers.bayes.net.BIFReader",
227:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
228:       "weka.core.Tag",
229:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
230:       "weka.classifiers.bayes.net.search.local.K2",
231:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
232:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
233:       "weka.core.Instances",
234:       "weka.core.stemmers.SnowballStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.core.DenseInstance",
242:       "weka.classifiers.Evaluation",
243:       "weka.classifiers.MultipleClassifiersCombiner",
244:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
245:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
246:       "weka.classifiers.meta.Stacking",
247:       "weka.classifiers.rules.ZeroR",
248:       "weka.core.TechnicalInformation",
249:       "weka.core.TechnicalInformation$Type",
250:       "weka.core.TechnicalInformation$Field",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.classifiers.SingleClassifierEnhancer",
257:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
258:       "weka.classifiers.meta.CostSensitiveClassifier",
259:       "weka.classifiers.CostMatrix",
260:       "weka.core.Stopwords",
261:       "weka.filters.Filter",
262:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
263:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
264:       "weka.core.Attribute",
265:       "weka.core.ProtectedProperties",
266:       "weka.classifiers.functions.supportVector.Kernel",
267:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
268:       "weka.core.SerializedObject",
269:       "weka.core.neighboursearch.balltrees.BallNode",
270:       "weka.core.neighboursearch.KDTree",
271:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
272:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
273:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
274:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.core.TestInstances",
278:       "weka.core.tokenizers.NGramTokenizer",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.LovinsStemmer",
285:       "weka.core.stemmers.IteratedLovinsStemmer",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.lazy.KStar",
288:       "weka.classifiers.misc.SerializedClassifier",
289:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
290:       "weka.classifiers.meta.Vote",
291:       "weka.classifiers.bayes.NaiveBayes",
292:       "weka.core.WekaEnumeration",
293:       "weka.core.Attribute$1",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.SerializationHelper",
296:       "weka.filters.SimpleFilter",
297:       "weka.filters.SimpleStreamFilter",
298:       "weka.filters.MultiFilter",
299:       "weka.filters.AllFilter",
300:       "weka.core.SelectedTag",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.Queue",
303:       "weka.core.AttributeLocator",
304:       "weka.core.StringLocator",
305:       "weka.core.RelationalLocator",
306:       "weka.classifiers.lazy.LWL",
307:       "weka.classifiers.trees.DecisionStump",
308:       "weka.classifiers.rules.DecisionTable",
309:       "weka.attributeSelection.ASSearch",
310:       "weka.attributeSelection.BestFirst",
311:       "weka.core.converters.ArffLoader$ArffReader",
312:       "weka.core.FindWithCapabilities",
313:       "weka.core.SingleIndex",
314:       "weka.classifiers.trees.RandomForest",
315:       "weka.classifiers.trees.LMT",
316:       "weka.attributeSelection.CorrelationAttributeEval",
317:       "weka.classifiers.rules.OneR",
318:       "weka.classifiers.IteratedSingleClassifierEnhancer",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.classifiers.functions.Logistic",
324:       "weka.classifiers.lazy.IBk",
325:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
326:       "weka.classifiers.functions.SMO",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.attributeSelection.InfoGainAttributeEval",
331:       "weka.classifiers.bayes.NaiveBayesMultinomial",
332:       "weka.core.WekaException",
333:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.meta.LogitBoost",
335:       "weka.attributeSelection.ReliefFAttributeEval",
336:       "weka.classifiers.meta.RegressionByDiscretization",
337:       "weka.filters.unsupervised.attribute.Discretize",
338:       "weka.classifiers.trees.J48",
339:       "weka.classifiers.trees.j48.ClassifierTree",
340:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
341:       "weka.classifiers.rules.PART",
342:       "weka.classifiers.rules.part.MakeDecList",
343:       "weka.core.ChebyshevDistance",
344:       "weka.core.UnsupportedAttributeTypeException",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.UnassignedClassException",
348:       "weka.classifiers.meta.MultiClassClassifier",
349:       "weka.classifiers.functions.supportVector.RBFKernel",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.trees.REPTree",
352:       "weka.classifiers.functions.SMOreg",
353:       "weka.classifiers.functions.supportVector.RegOptimizer",
354:       "weka.classifiers.functions.supportVector.RegSMO",
355:       "weka.classifiers.functions.supportVector.RegSMOImproved",
356:       "weka.core.AttributeStats",
357:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
358:       "weka.core.MinkowskiDistance",
359:       "weka.classifiers.meta.AttributeSelectedClassifier",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.classifiers.functions.VotedPerceptron",
362:       "weka.classifiers.meta.CVParameterSelection",
363:       "weka.core.FastVector",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.classifiers.meta.AdditiveRegression",
369:       "weka.classifiers.functions.MultilayerPerceptron",
370:       "weka.filters.unsupervised.attribute.NominalToBinary",
371:       "weka.classifiers.functions.neural.SigmoidUnit",
372:       "weka.classifiers.functions.neural.LinearUnit",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassDiscovery",
375:       "weka.core.ClassCache",
376:       "weka.core.AllJavadoc",
377:       "weka.core.GlobalInfoJavadoc",
378:       "weka.classifiers.functions.supportVector.Puk",
379:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
380:       "weka.classifiers.functions.supportVector.StringKernel",
381:       "weka.classifiers.rules.JRip",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.core.ListOptions",
384:       "weka.classifiers.bayes.NaiveBayesUpdateable",
385:       "weka.classifiers.functions.GaussianProcesses",
386:       "weka.core.matrix.Matrix",
387:       "weka.estimators.MahalanobisEstimator",
388:       "weka.attributeSelection.GainRatioAttributeEval",
389:       "weka.classifiers.meta.MultiScheme",
390:       "weka.estimators.KernelEstimator",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.core.Check",
393:       "weka.core.CheckGOE",
394:       "weka.classifiers.functions.SGDText$Count"
395:     );
396:   }
397: }

[MASTER] 22:59:04.591 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Stacking stacking0 = new Stacking();
FileSystemHandling.shouldAllThrowIOExceptions();
int[] intArray0 = new int[5];
intArray0[0] = 0;
intArray0[1] = 0;
intArray0[2] = 0;
intArray0[3] = (-5438);
intArray0[4] = 0;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(5118.514560344084, intArray0, 26);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.getTokenizer();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 22:59:04.775 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1574204344754/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1574204344754/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 22:59:04.775 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:59:04.775 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:59:04.775 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 22:59:04.775 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 22:59:04.775 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1574204344754/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 22:59:04 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.1087167121666344
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
28:       FileSystemHandling.shouldAllThrowIOExceptions();
29:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
33:       
34:       naiveBayesMultinomialText0.setOptions(stringArray0);
35:       naiveBayesMultinomialText0.setOptions(stringArray0);
36:       assertEquals(12, stringArray0.length);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_25_1574204344754/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 22:59:04 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.ChebyshevDistance",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.SerializedObject",
125:       "weka.core.Summarizable",
126:       "weka.core.AdditionalMeasureProducer",
127:       "weka.core.neighboursearch.balltrees.BallNode",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.Check",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.core.AbstractInstance",
135:       "weka.core.SelectedTag",
136:       "org.pentaho.packageManagement.DefaultPackage",
137:       "weka.classifiers.misc.InputMappedClassifier",
138:       "weka.core.Version",
139:       "weka.core.Tag",
140:       "weka.core.neighboursearch.CoverTree",
141:       "weka.classifiers.AbstractClassifier",
142:       "weka.classifiers.meta.Stacking",
143:       "weka.core.OptionHandler",
144:       "weka.core.WekaException",
145:       "weka.core.Range",
146:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
147:       "weka.classifiers.Classifier",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
149:       "weka.core.Capabilities$Capability",
150:       "weka.core.SparseInstance",
151:       "org.pentaho.packageManagement.PackageManager",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.classifiers.misc.SerializedClassifier",
154:       "weka.core.stemmers.SnowballStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.core.TechnicalInformationHandler",
159:       "weka.core.neighboursearch.LinearNNSearch",
160:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
161:       "weka.core.Option",
162:       "weka.classifiers.meta.CostSensitiveClassifier",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.core.Attribute",
165:       "weka.core.Stopwords",
166:       "weka.core.tokenizers.AlphabeticTokenizer",
167:       "weka.core.FastVector",
168:       "weka.classifiers.MultipleClassifiersCombiner",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.AttributeStats",
176:       "weka.core.WeightedInstancesHandler",
177:       "weka.core.GlobalInfoJavadoc",
178:       "weka.core.neighboursearch.NearestNeighbourSearch",
179:       "weka.classifiers.trees.DecisionStump",
180:       "weka.core.TechnicalInformation$Field",
181:       "weka.core.neighboursearch.covertrees.Stack",
182:       "weka.core.Randomizable",
183:       "weka.core.Javadoc",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier"
198:     );
199:   } 
200: 
201:   private static void resetClasses() {
202:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
203: 
204:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
205:       "weka.classifiers.AbstractClassifier",
206:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
208:       "weka.core.Capabilities$Capability",
209:       "weka.core.tokenizers.Tokenizer",
210:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
211:       "weka.core.tokenizers.WordTokenizer",
212:       "weka.core.stemmers.NullStemmer",
213:       "weka.core.Capabilities",
214:       "weka.core.Utils",
215:       "org.pentaho.packageManagement.PackageManager",
216:       "org.pentaho.packageManagement.DefaultPackageManager",
217:       "weka.core.Version",
218:       "weka.core.Environment",
219:       "weka.core.WekaPackageManager",
220:       "weka.attributeSelection.ASEvaluation",
221:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
222:       "weka.attributeSelection.PrincipalComponents",
223:       "weka.core.RevisionUtils",
224:       "weka.core.Option",
225:       "weka.classifiers.bayes.BayesNet",
226:       "weka.classifiers.bayes.net.BIFReader",
227:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
228:       "weka.core.Tag",
229:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
230:       "weka.classifiers.bayes.net.search.local.K2",
231:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
232:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
233:       "weka.core.Instances",
234:       "weka.core.stemmers.SnowballStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.core.DenseInstance",
242:       "weka.classifiers.Evaluation",
243:       "weka.classifiers.MultipleClassifiersCombiner",
244:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
245:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
246:       "weka.classifiers.meta.Stacking",
247:       "weka.classifiers.rules.ZeroR",
248:       "weka.core.TechnicalInformation",
249:       "weka.core.TechnicalInformation$Type",
250:       "weka.core.TechnicalInformation$Field",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.classifiers.SingleClassifierEnhancer",
257:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
258:       "weka.classifiers.meta.CostSensitiveClassifier",
259:       "weka.classifiers.CostMatrix",
260:       "weka.core.Stopwords",
261:       "weka.filters.Filter",
262:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
263:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
264:       "weka.core.Attribute",
265:       "weka.core.ProtectedProperties",
266:       "weka.classifiers.functions.supportVector.Kernel",
267:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
268:       "weka.core.SerializedObject",
269:       "weka.core.neighboursearch.balltrees.BallNode",
270:       "weka.core.neighboursearch.KDTree",
271:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
272:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
273:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
274:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.core.TestInstances",
278:       "weka.core.tokenizers.NGramTokenizer",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.LovinsStemmer",
285:       "weka.core.stemmers.IteratedLovinsStemmer",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.lazy.KStar",
288:       "weka.classifiers.misc.SerializedClassifier",
289:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
290:       "weka.classifiers.meta.Vote",
291:       "weka.classifiers.bayes.NaiveBayes",
292:       "weka.core.WekaEnumeration",
293:       "weka.core.Attribute$1",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.SerializationHelper",
296:       "weka.filters.SimpleFilter",
297:       "weka.filters.SimpleStreamFilter",
298:       "weka.filters.MultiFilter",
299:       "weka.filters.AllFilter",
300:       "weka.core.SelectedTag",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.Queue",
303:       "weka.core.AttributeLocator",
304:       "weka.core.StringLocator",
305:       "weka.core.RelationalLocator",
306:       "weka.classifiers.lazy.LWL",
307:       "weka.classifiers.trees.DecisionStump",
308:       "weka.classifiers.rules.DecisionTable",
309:       "weka.attributeSelection.ASSearch",
310:       "weka.attributeSelection.BestFirst",
311:       "weka.core.converters.ArffLoader$ArffReader",
312:       "weka.core.FindWithCapabilities",
313:       "weka.core.SingleIndex",
314:       "weka.classifiers.trees.RandomForest",
315:       "weka.classifiers.trees.LMT",
316:       "weka.attributeSelection.CorrelationAttributeEval",
317:       "weka.classifiers.rules.OneR",
318:       "weka.classifiers.IteratedSingleClassifierEnhancer",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.classifiers.functions.Logistic",
324:       "weka.classifiers.lazy.IBk",
325:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
326:       "weka.classifiers.functions.SMO",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.attributeSelection.InfoGainAttributeEval",
331:       "weka.classifiers.bayes.NaiveBayesMultinomial",
332:       "weka.core.WekaException",
333:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.meta.LogitBoost",
335:       "weka.attributeSelection.ReliefFAttributeEval",
336:       "weka.classifiers.meta.RegressionByDiscretization",
337:       "weka.filters.unsupervised.attribute.Discretize",
338:       "weka.classifiers.trees.J48",
339:       "weka.classifiers.trees.j48.ClassifierTree",
340:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
341:       "weka.classifiers.rules.PART",
342:       "weka.classifiers.rules.part.MakeDecList",
343:       "weka.core.ChebyshevDistance",
344:       "weka.core.UnsupportedAttributeTypeException",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.UnassignedClassException",
348:       "weka.classifiers.meta.MultiClassClassifier",
349:       "weka.classifiers.functions.supportVector.RBFKernel",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.trees.REPTree",
352:       "weka.classifiers.functions.SMOreg",
353:       "weka.classifiers.functions.supportVector.RegOptimizer",
354:       "weka.classifiers.functions.supportVector.RegSMO",
355:       "weka.classifiers.functions.supportVector.RegSMOImproved",
356:       "weka.core.AttributeStats",
357:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
358:       "weka.core.MinkowskiDistance",
359:       "weka.classifiers.meta.AttributeSelectedClassifier",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.classifiers.functions.VotedPerceptron",
362:       "weka.classifiers.meta.CVParameterSelection",
363:       "weka.core.FastVector",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.classifiers.meta.AdditiveRegression",
369:       "weka.classifiers.functions.MultilayerPerceptron",
370:       "weka.filters.unsupervised.attribute.NominalToBinary",
371:       "weka.classifiers.functions.neural.SigmoidUnit",
372:       "weka.classifiers.functions.neural.LinearUnit",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassDiscovery",
375:       "weka.core.ClassCache",
376:       "weka.core.AllJavadoc",
377:       "weka.core.GlobalInfoJavadoc",
378:       "weka.classifiers.functions.supportVector.Puk",
379:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
380:       "weka.classifiers.functions.supportVector.StringKernel",
381:       "weka.classifiers.rules.JRip",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.core.ListOptions",
384:       "weka.classifiers.bayes.NaiveBayesUpdateable",
385:       "weka.classifiers.functions.GaussianProcesses",
386:       "weka.core.matrix.Matrix",
387:       "weka.estimators.MahalanobisEstimator",
388:       "weka.attributeSelection.GainRatioAttributeEval",
389:       "weka.classifiers.meta.MultiScheme",
390:       "weka.estimators.KernelEstimator",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.core.Check",
393:       "weka.core.CheckGOE",
394:       "weka.classifiers.functions.SGDText$Count"
395:     );
396:   }
397: }

[MASTER] 22:59:04.776 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.m_lowercaseTokens = true;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());

naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.setOptions(stringArray0);
assertEquals(12, stringArray0.length);


[MASTER] 22:59:05.736 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_61_1574204345716/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_61_1574204345716/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.java]]
[MASTER] 22:59:05.736 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:59:05.736 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:59:05.737 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 22:59:05.737 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_61_1574204345716/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 22:59:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.tokenizers.WordTokenizer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_61_tmp__ESTest extends NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.2182145918425933
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       naiveBayesMultinomialText0.LNormTipText();
33:       WordTokenizer wordTokenizer0 = (WordTokenizer)naiveBayesMultinomialText0.m_tokenizer;
34:       naiveBayesMultinomialText0.setTokenizer(wordTokenizer0);
35:       String[] stringArray0 = new String[5];
36:       stringArray0[0] = "The LNorm to use for document length normalization.";
37:       stringArray0[1] = "The LNorm to use for document length normalization.";
38:       stringArray0[2] = "-normalize";
39:       stringArray0[3] = "The LNorm to use for document length normalization.";
40:       stringArray0[4] = "The LNorm to use for document length normalization.";
41:       naiveBayesMultinomialText0.setOptions(stringArray0);
42:       String[] stringArray1 = new String[1];
43:       stringArray1[0] = "The LNorm to use for document length normalization.";
44:       naiveBayesMultinomialText0.listOptions();
45:       naiveBayesMultinomialText0.m_stopwords = null;
46:       NaiveBayesMultinomialText.main(stringArray1);
47:       naiveBayesMultinomialText0.setNorm((-1262.511));
48:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
49:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The LNorm to use for document length normalization.");
50:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
51:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
52:       naiveBayesMultinomialText0.getNorm();
53:       naiveBayesMultinomialText0.tokenizerTipText();
54:       naiveBayesMultinomialText0.getStopwords();
55:       naiveBayesMultinomialText0.periodicPruningTipText();
56:       double double0 = naiveBayesMultinomialText0.m_leplace;
57:       naiveBayesMultinomialText0.stemmerTipText();
58:       naiveBayesMultinomialText0.toString();
59:       System.setCurrentTimeMillis(0L);
60:       naiveBayesMultinomialText0.LNormTipText();
61:       naiveBayesMultinomialText0.periodicPruningTipText();
62:       assertEquals((-1262.511), naiveBayesMultinomialText0.getNorm(), 0.01);
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_61_1574204345716/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 22:59:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.ChebyshevDistance",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.SerializedObject",
125:       "weka.core.Summarizable",
126:       "weka.core.AdditionalMeasureProducer",
127:       "weka.core.neighboursearch.balltrees.BallNode",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.Check",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.core.AbstractInstance",
135:       "weka.core.SelectedTag",
136:       "org.pentaho.packageManagement.DefaultPackage",
137:       "weka.classifiers.misc.InputMappedClassifier",
138:       "weka.core.Version",
139:       "weka.core.Tag",
140:       "weka.core.neighboursearch.CoverTree",
141:       "weka.classifiers.AbstractClassifier",
142:       "weka.classifiers.meta.Stacking",
143:       "weka.core.OptionHandler",
144:       "weka.core.WekaException",
145:       "weka.core.Range",
146:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
147:       "weka.classifiers.Classifier",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
149:       "weka.core.Capabilities$Capability",
150:       "weka.core.SparseInstance",
151:       "org.pentaho.packageManagement.PackageManager",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.classifiers.misc.SerializedClassifier",
154:       "weka.core.stemmers.SnowballStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.core.TechnicalInformationHandler",
159:       "weka.core.neighboursearch.LinearNNSearch",
160:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
161:       "weka.core.Option",
162:       "weka.classifiers.meta.CostSensitiveClassifier",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.core.Attribute",
165:       "weka.core.Stopwords",
166:       "weka.core.tokenizers.AlphabeticTokenizer",
167:       "weka.core.FastVector",
168:       "weka.classifiers.MultipleClassifiersCombiner",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.AttributeStats",
176:       "weka.core.WeightedInstancesHandler",
177:       "weka.core.GlobalInfoJavadoc",
178:       "weka.core.neighboursearch.NearestNeighbourSearch",
179:       "weka.classifiers.trees.DecisionStump",
180:       "weka.core.TechnicalInformation$Field",
181:       "weka.core.neighboursearch.covertrees.Stack",
182:       "weka.core.Randomizable",
183:       "weka.core.Javadoc",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier"
198:     );
199:   } 
200: 
201:   private static void resetClasses() {
202:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.class.getClassLoader()); 
203: 
204:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
205:       "weka.classifiers.AbstractClassifier",
206:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
208:       "weka.core.Capabilities$Capability",
209:       "weka.core.tokenizers.Tokenizer",
210:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
211:       "weka.core.tokenizers.WordTokenizer",
212:       "weka.core.stemmers.NullStemmer",
213:       "weka.core.Capabilities",
214:       "weka.core.Utils",
215:       "org.pentaho.packageManagement.PackageManager",
216:       "org.pentaho.packageManagement.DefaultPackageManager",
217:       "weka.core.Version",
218:       "weka.core.Environment",
219:       "weka.core.WekaPackageManager",
220:       "weka.attributeSelection.ASEvaluation",
221:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
222:       "weka.attributeSelection.PrincipalComponents",
223:       "weka.core.RevisionUtils",
224:       "weka.core.Option",
225:       "weka.classifiers.bayes.BayesNet",
226:       "weka.classifiers.bayes.net.BIFReader",
227:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
228:       "weka.core.Tag",
229:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
230:       "weka.classifiers.bayes.net.search.local.K2",
231:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
232:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
233:       "weka.core.Instances",
234:       "weka.core.stemmers.SnowballStemmer",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.core.DenseInstance",
242:       "weka.classifiers.Evaluation",
243:       "weka.classifiers.MultipleClassifiersCombiner",
244:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
245:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
246:       "weka.classifiers.meta.Stacking",
247:       "weka.classifiers.rules.ZeroR",
248:       "weka.core.TechnicalInformation",
249:       "weka.core.TechnicalInformation$Type",
250:       "weka.core.TechnicalInformation$Field",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.classifiers.SingleClassifierEnhancer",
257:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
258:       "weka.classifiers.meta.CostSensitiveClassifier",
259:       "weka.classifiers.CostMatrix",
260:       "weka.core.Stopwords",
261:       "weka.filters.Filter",
262:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
263:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
264:       "weka.core.Attribute",
265:       "weka.core.ProtectedProperties",
266:       "weka.classifiers.functions.supportVector.Kernel",
267:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
268:       "weka.core.SerializedObject",
269:       "weka.core.neighboursearch.balltrees.BallNode",
270:       "weka.core.neighboursearch.KDTree",
271:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
272:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
273:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
274:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.core.TestInstances",
278:       "weka.core.tokenizers.NGramTokenizer",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.LovinsStemmer",
285:       "weka.core.stemmers.IteratedLovinsStemmer",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.lazy.KStar",
288:       "weka.classifiers.misc.SerializedClassifier",
289:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
290:       "weka.classifiers.meta.Vote",
291:       "weka.classifiers.bayes.NaiveBayes",
292:       "weka.core.WekaEnumeration",
293:       "weka.core.Attribute$1",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.SerializationHelper",
296:       "weka.filters.SimpleFilter",
297:       "weka.filters.SimpleStreamFilter",
298:       "weka.filters.MultiFilter",
299:       "weka.filters.AllFilter",
300:       "weka.core.SelectedTag",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.Queue",
303:       "weka.core.AttributeLocator",
304:       "weka.core.StringLocator",
305:       "weka.core.RelationalLocator",
306:       "weka.classifiers.lazy.LWL",
307:       "weka.classifiers.trees.DecisionStump",
308:       "weka.classifiers.rules.DecisionTable",
309:       "weka.attributeSelection.ASSearch",
310:       "weka.attributeSelection.BestFirst",
311:       "weka.core.converters.ArffLoader$ArffReader",
312:       "weka.core.FindWithCapabilities",
313:       "weka.core.SingleIndex",
314:       "weka.classifiers.trees.RandomForest",
315:       "weka.classifiers.trees.LMT",
316:       "weka.attributeSelection.CorrelationAttributeEval",
317:       "weka.classifiers.rules.OneR",
318:       "weka.classifiers.IteratedSingleClassifierEnhancer",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.classifiers.functions.Logistic",
324:       "weka.classifiers.lazy.IBk",
325:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
326:       "weka.classifiers.functions.SMO",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.attributeSelection.InfoGainAttributeEval",
331:       "weka.classifiers.bayes.NaiveBayesMultinomial",
332:       "weka.core.WekaException",
333:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.meta.LogitBoost",
335:       "weka.attributeSelection.ReliefFAttributeEval",
336:       "weka.classifiers.meta.RegressionByDiscretization",
337:       "weka.filters.unsupervised.attribute.Discretize",
338:       "weka.classifiers.trees.J48",
339:       "weka.classifiers.trees.j48.ClassifierTree",
340:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
341:       "weka.classifiers.rules.PART",
342:       "weka.classifiers.rules.part.MakeDecList",
343:       "weka.core.ChebyshevDistance",
344:       "weka.core.UnsupportedAttributeTypeException",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.UnassignedClassException",
348:       "weka.classifiers.meta.MultiClassClassifier",
349:       "weka.classifiers.functions.supportVector.RBFKernel",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.trees.REPTree",
352:       "weka.classifiers.functions.SMOreg",
353:       "weka.classifiers.functions.supportVector.RegOptimizer",
354:       "weka.classifiers.functions.supportVector.RegSMO",
355:       "weka.classifiers.functions.supportVector.RegSMOImproved",
356:       "weka.core.AttributeStats",
357:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
358:       "weka.core.MinkowskiDistance",
359:       "weka.classifiers.meta.AttributeSelectedClassifier",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.classifiers.functions.VotedPerceptron",
362:       "weka.classifiers.meta.CVParameterSelection",
363:       "weka.core.FastVector",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.classifiers.meta.AdditiveRegression",
369:       "weka.classifiers.functions.MultilayerPerceptron",
370:       "weka.filters.unsupervised.attribute.NominalToBinary",
371:       "weka.classifiers.functions.neural.SigmoidUnit",
372:       "weka.classifiers.functions.neural.LinearUnit",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassDiscovery",
375:       "weka.core.ClassCache",
376:       "weka.core.AllJavadoc",
377:       "weka.core.GlobalInfoJavadoc",
378:       "weka.classifiers.functions.supportVector.Puk",
379:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
380:       "weka.classifiers.functions.supportVector.StringKernel",
381:       "weka.classifiers.rules.JRip",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.core.ListOptions",
384:       "weka.classifiers.bayes.NaiveBayesUpdateable",
385:       "weka.classifiers.functions.GaussianProcesses",
386:       "weka.core.matrix.Matrix",
387:       "weka.estimators.MahalanobisEstimator",
388:       "weka.attributeSelection.GainRatioAttributeEval",
389:       "weka.classifiers.meta.MultiScheme",
390:       "weka.estimators.KernelEstimator",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.core.Check",
393:       "weka.core.CheckGOE",
394:       "weka.classifiers.functions.SGDText$Count"
395:     );
396:   }
397: }

[MASTER] 22:59:05.738 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.LNormTipText();
WordTokenizer wordTokenizer0 = (WordTokenizer)naiveBayesMultinomialText0.m_tokenizer;
naiveBayesMultinomialText0.setTokenizer(wordTokenizer0);
String[] stringArray0 = new String[5];
stringArray0[0] = "The LNorm to use for document length normalization.";
stringArray0[1] = "The LNorm to use for document length normalization.";
stringArray0[2] = "-normalize";
stringArray0[3] = "The LNorm to use for document length normalization.";
stringArray0[4] = "The LNorm to use for document length normalization.";
naiveBayesMultinomialText0.setOptions(stringArray0);
String[] stringArray1 = new String[1];
stringArray1[0] = "The LNorm to use for document length normalization.";
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.m_stopwords = null;
NaiveBayesMultinomialText.main(stringArray1);
naiveBayesMultinomialText0.setNorm((-1262.511));
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The LNorm to use for document length normalization.");
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.periodicPruningTipText();
double double0 = naiveBayesMultinomialText0.m_leplace;
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.toString();
System.setCurrentTimeMillis(0L);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals((-1262.511), naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 22:59:07.672 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 22:59:07.753 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20775
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:53:47.126 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:53:47.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:53:47.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:53:47.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:53:47.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:53:47.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:53:49.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:53:49.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:53:49.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:53:49.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:53:49.235 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:53:49.235 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:53:49.236 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:53:49.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:53:49.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:53:49.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:53:49.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 23:53:51.754 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[MASTER] 23:53:54.443 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 844s and 85 generations, 54426 statements, best individual has fitness: 15328.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 802
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 352
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 55
* Number of covered goals: 55
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 264
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 333
* Generated 116 tests with total length 2190
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 00:15:11.194 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:15:11.285 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:15:11.294 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 00:15:11.612 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:15:11.612 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 00:15:11.613 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
