* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2861
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaCharStream.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 21:27:37.060 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaCharStream.hexval(C)I: I3 Branch 50 TABLESWITCH L16 Case 97 - true in context: 
* Search finished after 741s and 69 generations, 45796 statements, best individual has fitness: 1416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 239
* Number of covered goals: 200
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 216
* Number of covered goals: 191
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 974
* Number of covered goals: 889
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 216
* Number of covered goals: 191
* Generated 145 tests with total length 2165
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2861
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:36:15.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:36:15.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:36:15.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:36:15.841 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/SimpleNode.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 21:37:43.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:37:43.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 530s and 256 generations, 286926 statements, best individual has fitness: 200.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 121
* Number of covered goals: 109
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Generated 43 tests with total length 970
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
[MASTER] 21:46:00.396 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test04 -> class java.lang.StackOverflowError: null
[MASTER] 21:46:00.397 [logback-1] WARN  JUnitAnalyzer - Failing test:
 EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<");
FileSystemHandling.createFolder(evoSuiteFile0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)64;
byteArray0[2] = (byte)90;
byteArray0[3] = (byte)70;
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.createFolder(evoSuiteFile0);
StringWriter stringWriter0 = new StringWriter();
FileSystemHandling.appendStringToFile(evoSuiteFile0, "Literal");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
StringReader stringReader0 = new StringReader(";");
stringReader0.reset();
stringReader0.markSupported();
stringReader0.read();
SimpleNode simpleNode0 = new SimpleNode((byte)0);
Node[] nodeArray0 = new Node[1];
nodeArray0[0] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
String string0 = null;
simpleNode0.dump(string0, stringWriter0);

[MASTER] 21:46:00.397 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class java.lang.StackOverflowError: null
[MASTER] 21:46:00.398 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringWriter stringWriter0 = new StringWriter(66);
SimpleNode simpleNode0 = new SimpleNode(66);
ArrayList<String> arrayList0 = simpleNode0.identifiers;
ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
arrayList0.forEach(consumer0);
arrayList0.clone();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) arrayList0, locale_FilteringMode0);
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
linkedList0.add((Locale.LanguageRange) null);
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0);
arrayList0.addAll((Collection<? extends String>) list0);
stringWriter0.close();
List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) arrayList0, locale_FilteringMode0);
arrayList0.retainAll(arrayList1);
Node[] nodeArray0 = new Node[0];
arrayList0.add("{");
simpleNode0.children = nodeArray0;
arrayList0.add("{");
List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1);
arrayList0.addAll((Collection<? extends String>) list2);
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.shouldAllThrowIOExceptions();
arrayList0.add(",F'WF");
simpleNode0.dump("else", stringWriter0);
assertEquals("<Arguments>\n  <identifier>,F'WF</identifier>\n</Arguments>\n", stringWriter0.toString());


[MASTER] 21:46:00.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test23 -> class java.lang.StackOverflowError: null
[MASTER] 21:46:00.399 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 14;
ArrayList<String> arrayList0 = new ArrayList<String>();
SimpleNode simpleNode0 = new SimpleNode(14);
String string0 = "<<";
StringWriter stringWriter0 = new StringWriter(14);
SystemInUtil.addInputLine("<<");
FileSystemHandling.shouldAllThrowIOExceptions();
ArrayList<String> arrayList1 = simpleNode0.identifiers;
arrayList1.add("}");
stringWriter0.write(14);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
StringWriter stringWriter1 = new StringWriter();
simpleNode0.dump("}", stringWriter1);
int int1 = (-1256);
PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-1256));

[MASTER] 21:46:07.035 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test35 -> class java.lang.StackOverflowError: null
[MASTER] 21:46:07.036 [logback-1] WARN  JUnitAnalyzer - Failing test:
 EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<");
FileSystemHandling.createFolder((EvoSuiteFile) null);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)64;
byteArray0[2] = (byte)90;
byteArray0[3] = (byte)70;
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.createFolder(evoSuiteFile0);
StringWriter stringWriter0 = new StringWriter();
FileSystemHandling.appendStringToFile(evoSuiteFile0, "Literal");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
StringReader stringReader0 = new StringReader(";");
stringReader0.reset();
stringReader0.markSupported();
stringReader0.read();
SimpleNode simpleNode0 = new SimpleNode((byte)0);
Node[] nodeArray0 = new Node[1];
nodeArray0[0] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
String string0 = null;
simpleNode0.dump(string0, stringWriter0);

[MASTER] 21:46:07.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test18 -> class java.lang.StackOverflowError: null
[MASTER] 21:46:07.037 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
SimpleNode simpleNode0 = new SimpleNode(0);
Node[] nodeArray0 = new Node[8];
nodeArray0[0] = (Node) simpleNode0;
nodeArray0[1] = (Node) simpleNode0;
nodeArray0[2] = (Node) simpleNode0;
nodeArray0[3] = (Node) simpleNode0;
nodeArray0[4] = (Node) simpleNode0;
nodeArray0[5] = (Node) simpleNode0;
nodeArray0[6] = (Node) simpleNode0;
nodeArray0[7] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
StringWriter stringWriter0 = new StringWriter(0);
stringWriter0.flush();
stringWriter0.append('7');
StringWriter stringWriter1 = stringWriter0.append('7');
FileSystemHandling.shouldAllThrowIOExceptions();
ArrayList<String> arrayList0 = simpleNode0.identifiers;
String string0 = null;
simpleNode0.dump(string0, stringWriter1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2861
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:25:48.307 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:25:48.312 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:25:48.313 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:25:48.318 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaParserTokenManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 22:26:37.304 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: Line 218
[MASTER] 22:26:37.308 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(JJ)I: Line 334
[MASTER] 22:26:37.310 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(JJJJ)I: Line 384
[MASTER] 22:26:37.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(JJ)I: I29 Branch 204 TABLESWITCH L267 Case 98 - true
[MASTER] 22:26:37.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(JJJJ)I: I15 Branch 254 IFNE L383 - false
[MASTER] 22:26:37.577 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: I4 Branch 114 TABLESWITCH L159 Case 98 - true
[MASTER] 22:26:37.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1684: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(JJJJ)I:383 - ReplaceComparisonOperator != -> -1
[MASTER] 22:26:37.705 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: I4 Branch 114 TABLESWITCH L159 Case 98 - true in context: 
[MASTER] 22:26:37.706 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(JJ)I: I29 Branch 204 TABLESWITCH L267 Case 98 - true in context: 
[MASTER] 22:26:37.718 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(JJJJ)I: I15 Branch 254 IFNE L383 - false in context: 
* Search finished after 852s and 30 generations, 29906 statements, best individual has fitness: 18872.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 981
* Number of covered goals: 445
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 1707
* Number of covered goals: 919
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 434
* Number of covered goals: 183
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 1707
* Number of covered goals: 919
* Generated 78 tests with total length 1546
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 22:41:03.435 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:03.436 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)57;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 43, 0, 136);
ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)57, (-1), 0);
StringReader stringReader0 = new StringReader("");
stringReader0.read();
StringReader stringReader1 = new StringReader("");
JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
StringReader stringReader2 = new StringReader(";");
stringReader0.reset();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.getNextToken();

[MASTER] 22:41:03.516 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:03.516 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("z3;\"O*[LC)E_b");
StringReader stringReader1 = new StringReader("z3;\"O*[LC)E_b");
StringReader stringReader2 = new StringReader("z3;\"O*[LC)E_b");
byte[] byteArray0 = new byte[0];
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
StringReader stringReader3 = new StringReader("0D$EXf`Ts2($M=Ee");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
StringReader stringReader4 = new StringReader("0D$EXf`Ts2($M=Ee");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
stringReader1.reset();
javaParserTokenManager0.getNextToken();

[MASTER] 22:41:03.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:03.556 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration0).hasMoreElements();
SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)61;
byteArray0[1] = (byte)61;
byteArray0[2] = (byte)61;
byteArray0[3] = (byte)61;
byteArray0[4] = (byte)61;
byteArray0[5] = (byte)61;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, (byte)61, 61, 61);
StringReader stringReader0 = new StringReader("1Uz`)%g?0o7Sq#e");
StringReader stringReader1 = new StringReader("1Uz`)%g?0o7Sq#e");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)61, (byte)61, 24);
StringReader stringReader2 = new StringReader(";");
stringReader1.reset();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 36, (byte)61, (byte)61);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
javaParserTokenManager1.getNextToken();
javaParserTokenManager0.getNextToken();

[MASTER] 22:41:03.749 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:03.749 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
StringReader stringReader0 = new StringReader("I{-/2cw]&D)zcsk2");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 20, 37, 36);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
Token token0 = new Token();
javaParserTokenManager0.TokenLexicalActions(token0);
javaParserTokenManager0.TokenLexicalActions(token0);
javaParserTokenManager0.SkipLexicalActions(token0);
javaParserTokenManager0.getNextToken();
Token token1 = Token.newToken(105);
javaParserTokenManager0.TokenLexicalActions(token1);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
stringReader0.reset();
javaParserTokenManager1.getNextToken();
javaParserTokenManager1.getNextToken();
javaParserTokenManager0.SwitchTo(0);
javaParserTokenManager1.getNextToken();
javaParserTokenManager0.jjFillToken();
javaParserTokenManager0.getNextToken();

[MASTER] 22:41:03.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:03.874 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
StringReader stringReader0 = new StringReader("z3;\"O*[LC)E_b");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 39, 567, 72);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = new Token();
javaParserTokenManager0.TokenLexicalActions(token0);
javaParserTokenManager0.TokenLexicalActions(token0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
Token.GTToken token_GTToken0 = new Token.GTToken();
javaParserTokenManager1.SkipLexicalActions(token0);
javaCharStream0.nextCharInd = 0;
StringReader stringReader1 = new StringReader("d,BMJm[[I");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager2.getNextToken();
javaParserTokenManager0.getNextToken();

[MASTER] 22:41:04.086 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:04.086 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
StringReader stringReader0 = new StringReader("6P#Hq_");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-98), 46, 103);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = new Token();
javaParserTokenManager0.TokenLexicalActions(token0);
javaParserTokenManager0.TokenLexicalActions(token0);
javaParserTokenManager0.SkipLexicalActions(token0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager1.getNextToken();

[MASTER] 22:41:04.349 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:04.349 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
StringReader stringReader0 = new StringReader("z3;\"O*[LC)E_b");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 39, 567, 72);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = new Token();
javaParserTokenManager0.TokenLexicalActions(token0);
javaCharStream0.ReadByte();
javaParserTokenManager0.TokenLexicalActions(token0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager1.getNextToken();

[MASTER] 22:41:04.627 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:04.628 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
byte[] byteArray0 = new byte[9];
byteArray0[3] = (byte)35;
byteArray0[4] = (byte) (-20);
byteArray0[5] = (byte)0;
byteArray0[6] = (byte) (-20);
byteArray0[7] = (byte) (-98);
byteArray0[8] = (byte)61;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
byteArrayInputStream0.markSupported();
JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte) (-20), Integer.MAX_VALUE);
StringReader stringReader0 = new StringReader("1Uz`)%g?0o7Sq#e");
StringReader stringReader1 = new StringReader("1Uz`)%g?0o7Sq#e");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 28, (-2648), 47);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
Token token0 = new Token();
token0.image = null;
javaParserTokenManager0.TokenLexicalActions(token0);
javaParserTokenManager0.getNextToken();

[MASTER] 22:41:05.160 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 22:41:05.161 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false, false, false).when(enumeration0).hasMoreElements();
SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
byte[] byteArray0 = new byte[19];
sequenceInputStream1.read(byteArray0);
byteArray0[0] = (byte)99;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
sequenceInputStream1.read(byteArray0);
sequenceInputStream1.markSupported();
SequenceInputStream sequenceInputStream2 = new SequenceInputStream(byteArrayInputStream0, sequenceInputStream0);
ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
StringReader stringReader0 = new StringReader("oegF)74G]Y6}2Qs<}Q");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, (byte)99);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
char[] charArray0 = new char[8];
charArray0[0] = '`';
charArray0[1] = ':';
charArray0[2] = 'q';
charArray0[3] = '{';
charArray0[4] = 'Q';
Token token0 = Token.newToken((-560));
javaParserTokenManager0.SkipLexicalActions(token0);
javaParserTokenManager0.getNextToken();
Token.newToken((-1788));
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();

* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/19_jmca/evosuite-tests
* Done!

* Computation finished
