* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: state.Player
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/27_gangup/evosuite-files/evosuite.properties
* Connecting to master process on port 14423
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:46:16.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:46:16.572 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:46:16.573 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:46:16.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class state.Player
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/27_gangup/src/main/java/state/Player.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 01:53:49.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: state.Player.getPictureId()I:Negative
* Search finished after 472s and 144 generations, 179226 statements, best individual has fitness: 72.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 130
* Number of covered goals: 127
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 270
* Number of covered goals: 268
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 47
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Generated 54 tests with total length 844
* Resulting test suite's coverage: 99% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
[MASTER] 01:54:43.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:54:43.494 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Player player0 = new Player((-1522), ".*[.]class$", (-24318));
Party party0 = player0.gangBoss();
player0.head = party0;
player0.gangStrength();

[MASTER] 01:54:44.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:54:44.211 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Player player0 = new Player(0, "", "", 0, 0);
player0.getY();
player0.setDead((long) 0);
player0.getX();
player0.type();
player0.setDead(0L);
player0.getPictureId();
Player player1 = new Player((-466), "~Ox[F2u@z", "1E%x_[HE", 0);
player0.prev = (Party) player1;
player1.setY((-279.75F));
player1.add(player0);
player0.setY(5);
player0.isJoinOK(player1, true);
player0.getZ();
player0.head = (Party) player1;
player0.setX(0.0F);
Player player2 = new Player((short)4919, "~Ox[F2u@z", 5);
player1.isConnected();
player1.setZ(0.1F);
Player player3 = new Player();
byte[] byteArray0 = player3.pack();
player2.unpack(byteArray0);
player0.type();
player0.type();
player0.isConnected();
player0.gangStrength();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 12
* Writing JUnit test case 'Player_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/27_gangup/evosuite-tests
* Done!

* Computation finished
