* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18439
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:59:09.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:59:09.356 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:59:09.357 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 19:59:09.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 19:59:09.359 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 19:59:09.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:59:09.429 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/Range.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 19:59:48.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 528
[MASTER] 19:59:48.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 540
[MASTER] 19:59:48.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 541
[MASTER] 19:59:48.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 542
[MASTER] 19:59:48.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 546
[MASTER] 19:59:48.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 547
[MASTER] 19:59:48.908 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.<init>(JJ)V: Line 2060
[MASTER] 19:59:48.909 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.<init>(JJ)V: Line 2061
[MASTER] 19:59:48.910 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.<init>(JJ)V: Line 2062
[MASTER] 19:59:48.911 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.<init>(JJ)V: Line 2063
[MASTER] 19:59:48.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.getLength()J: Line 2067
[MASTER] 19:59:48.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.getBegin()J: Line 2080
[MASTER] 19:59:48.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J: Line 2091
[MASTER] 19:59:48.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1887
[MASTER] 19:59:48.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1888
[MASTER] 19:59:48.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1889
[MASTER] 19:59:48.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1890
[MASTER] 19:59:48.918 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getLength()J: Line 1894
[MASTER] 19:59:48.919 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getBegin()J: Line 1907
[MASTER] 19:59:48.920 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J: Line 1918
[MASTER] 19:59:48.926 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1541
[MASTER] 19:59:48.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1542
[MASTER] 19:59:48.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1543
[MASTER] 19:59:48.930 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1545
[MASTER] 19:59:48.931 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: Line 1557
[MASTER] 19:59:48.931 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: Line 1562
[MASTER] 19:59:48.932 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: Line 1567
[MASTER] 19:59:48.946 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 147: org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z:497 - ReplaceComparisonOperator > -> -2
[MASTER] 19:59:48.948 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 180: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator < -> !=
[MASTER] 19:59:48.949 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 191: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator > -> >=
[MASTER] 19:59:48.949 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator < -> !=
[MASTER] 19:59:48.953 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:525 - ReplaceComparisonOperator > -> -2
[MASTER] 19:59:48.955 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:531 - ReplaceComparisonOperator > -> -2
[MASTER] 19:59:48.959 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 314: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:540 - ReplaceComparisonOperator > -> -2
[MASTER] 19:59:48.961 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:540 - ReplaceComparisonOperator > -> !=
[MASTER] 19:59:48.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 326: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:541 - ReplaceComparisonOperator > -> !=
[MASTER] 19:59:48.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 531: org.jcvi.jillion.core.Range.startsBefore(Lorg/jcvi/jillion/core/Range;)Z:880 - ReplaceComparisonOperator >= -> -1
[MASTER] 19:59:49.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1113: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> %
[MASTER] 19:59:49.001 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1114: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> -
[MASTER] 19:59:49.002 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1115: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> *
[MASTER] 19:59:49.003 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1116: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> /
[MASTER] 19:59:49.004 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1120: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> +
[MASTER] 19:59:49.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1121: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> %
[MASTER] 19:59:49.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1122: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> *
[MASTER] 19:59:49.006 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1123: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> /
[MASTER] 19:59:49.012 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1465: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> %
[MASTER] 19:59:49.013 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1466: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> -
[MASTER] 19:59:49.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1467: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> *
[MASTER] 19:59:49.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1468: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> /
[MASTER] 19:59:49.016 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1472: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> +
[MASTER] 19:59:49.017 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1473: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> %
[MASTER] 19:59:49.017 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1474: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> *
[MASTER] 19:59:49.018 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1475: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> /
[MASTER] 19:59:49.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1657: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator + -> %
[MASTER] 19:59:49.020 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1658: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator + -> -
[MASTER] 19:59:49.021 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1659: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator + -> *
[MASTER] 19:59:49.022 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1660: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator + -> /
[MASTER] 19:59:49.023 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1664: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator - -> +
[MASTER] 19:59:49.023 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1665: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator - -> %
[MASTER] 19:59:49.024 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1666: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator - -> *
[MASTER] 19:59:49.025 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1667: org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J:2091 - ReplaceArithmeticOperator - -> /
[MASTER] 19:59:49.062 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$LongStartIntLengthRange.getLength()J: root-Branch in context: 
[MASTER] 19:59:49.063 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I136 Branch 25 IFGT L546 - false in context: 
[MASTER] 19:59:49.064 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 19:59:49.066 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$LongStartIntLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 19:59:49.072 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 19:59:49.075 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: root-Branch in context: 
[MASTER] 19:59:49.080 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getLength()J: root-Branch in context: 
[MASTER] 19:59:49.081 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 19:59:49.083 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.startsBefore(Lorg/jcvi/jillion/core/Range;)Z: I31 Branch 56 IFGE L880 - false in context: org.jcvi.jillion.core.Range:startsBefore(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 19:59:49.088 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I13 Branch 11 IFGT L497 - true in context: 
[MASTER] 19:59:49.089 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I106 Branch 23 IFGT L540 - true in context: 
[MASTER] 19:59:49.112 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 19:59:49.113 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I112 Branch 24 IFGT L541 - false in context: 
[MASTER] 19:59:49.118 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I29 Branch 19 IFGT L525 - true in context: 
[MASTER] 19:59:49.121 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I106 Branch 23 IFGT L540 - false in context: 
[MASTER] 19:59:49.122 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 19:59:54.065 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 189: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator > -> -2
[MASTER] 19:59:54.201 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I13 Branch 15 IFGT L501 - true in context: 
[MASTER] 20:00:11.561 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I57 Branch 20 IFGT L531 - true in context: 
[MASTER] 20:02:54.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;
[MASTER] 20:02:58.025 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 947
[MASTER] 20:02:58.026 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 950
[MASTER] 20:02:58.027 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 951
[MASTER] 20:02:58.027 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 954
[MASTER] 20:02:58.028 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 955
[MASTER] 20:02:58.029 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 956
[MASTER] 20:02:58.029 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 957
[MASTER] 20:02:58.030 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 958
[MASTER] 20:02:58.031 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 959
[MASTER] 20:02:58.031 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 960
[MASTER] 20:02:58.095 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 564: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> ==
[MASTER] 20:02:58.095 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 20:02:58.096 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 20:02:58.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 589: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> %
[MASTER] 20:02:58.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 590: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> -
[MASTER] 20:02:58.098 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 591: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> *
[MASTER] 20:02:58.099 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 592: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> /
[MASTER] 20:02:58.100 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 596: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> +
[MASTER] 20:02:58.101 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 20:02:58.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 598: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> *
[MASTER] 20:02:58.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 599: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> /
[MASTER] 20:02:58.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 616: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> %
[MASTER] 20:02:58.104 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 617: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> -
[MASTER] 20:02:58.104 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 618: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> *
[MASTER] 20:02:58.105 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 619: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> /
[MASTER] 20:02:58.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.split(J)Ljava/util/List;
[MASTER] 20:02:58.146 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.split(J)Ljava/util/List;
[MASTER] 20:02:58.155 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I5 Branch 60 IFGE L947 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 20:02:58.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I61 Branch 62 IFGT L956 - false in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 20:02:58.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I38 Branch 61 IFGE L951 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
* Search finished after 802s and 91 generations, 67444 statements, best individual has fitness: 7736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 632
* Number of covered goals: 443
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 426
* Number of covered goals: 310
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 802
* Number of covered goals: 429
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 426
* Number of covered goals: 309
* Generated 161 tests with total length 2474
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
[MASTER] 20:17:22.849 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 20:17:22.849 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range.Builder range_Builder1 = range_Builder0.copy();
Range.Builder range_Builder2 = new Range.Builder(32767L);
range_Builder1.copy();
range_Builder0.copy();
Range.Builder range_Builder3 = range_Builder0.contractEnd((-1L));
range_Builder0.expandBegin(1377L);
Range range0 = range_Builder1.build();
range_Builder3.build();
boolean boolean0 = range0.equals(range_Builder1);
assertFalse(boolean0);
assertFalse(range0.isEmpty());


[MASTER] 20:17:23.196 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 20:17:23.196 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775807L, 9223372036854775807L);
assertFalse(range0.isEmpty());


[MASTER] 20:17:23.673 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 20:17:23.673 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range range0 = Range.of(108L, 9223372036854775768L);
String string0 = range0.toString();
assertEquals("[ 108 .. 9223372036854775768 ]/0B", string0);

Range range1 = Range.parseRange("[ 108 .. 9223372036854775768 ]/0B");
range1.endsBefore(range0);
List<Range> list0 = range1.complement(range0);
Range range2 = Range.parseRange("[ 108 .. 9223372036854775768 ]/0B");
Range range3 = Range.parseRange("[ 108 .. 9223372036854775768 ]/0B");
List<Range> list1 = range2.complementFrom(list0);
assertEquals(2, list1.size());
assertEquals(1, list0.size());

Range range4 = Range.of(2814L);
Range range5 = range4.intersection(range1);
assertSame(range5, range4);

Range range6 = Range.parseRange("[ 108 .. 9223372036854775768 ]/0B");
Range range7 = Range.of((-44L), 1393L);
boolean boolean0 = range1.isSubRangeOf(range7);
range2.intersection(range7);
Range range8 = Range.of(2319L);
boolean boolean1 = range2.intersects(range7);
Range.ofLength(2319L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range.of(range_CoordinateSystem0, (-2844L), (-1L));
Range range9 = Range.parseRange("[ 108 .. 9223372036854775768 ]/0B", range_CoordinateSystem0);
range9.intersection(range0);
List<Range> list2 = range8.complement(range6);
assertEquals(0, list2.size());

Range range10 = range6.asRange();
boolean boolean2 = range10.startsBefore(range7);
assertFalse(boolean2 == boolean1);

boolean boolean3 = range3.endsBefore(range2);
assertTrue(boolean3 == boolean0);
assertFalse(boolean3);


[MASTER] 20:17:26.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 20:17:26.086 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder((-1771L), 0L);
range_Builder0.contractEnd(0L);
Range range0 = range_Builder0.build();
Range.Builder range_Builder1 = range_Builder0.expandEnd(0L);
Range.Builder range_Builder2 = new Range.Builder(range0);
Range range1 = range_Builder0.build();
range_Builder0.copy();
range_Builder0.contractBegin((-1771L));
range_Builder1.expandEnd(2147483671L);
List<Range> list0 = range1.complement(range0);
assertTrue(list0.contains(range1));
assertTrue(range1.isEmpty());


[MASTER] 20:17:27.880 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 20:17:27.880 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder((-1771L), 0L);
range_Builder0.contractEnd(0L);
Range range0 = range_Builder0.build();
assertTrue(range0.isEmpty());

range_Builder0.expandEnd(0L);
Range.Builder range_Builder1 = range_Builder0.shift((-1771L));
Range range1 = range_Builder0.build();
range_Builder0.copy();
range_Builder0.contractBegin((-1771L));
range_Builder1.expandEnd(2147483647L);
List<Range> list0 = range1.split(1L);
assertEquals(1772, list0.size());
assertFalse(list0.contains(range1));


[MASTER] 20:17:28.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [1183 - ? ] beyond max allowed end offset
[MASTER] 20:17:28.687 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, (-1L), 2577L);
LinkedList<Range> linkedList0 = new LinkedList<Range>();
Range range1 = Range.of((-1L), 2577L);
range1.intersects(range0);
linkedList0.add(range1);
Range range2 = linkedList0.pop();
range1.complementFrom(linkedList0);
range2.complementFrom(linkedList0);
Long long0 = new Long((-9223372036854775808L));
Long long1 = new Long(2577L);
long long2 = 1183L;
Range.Builder range_Builder0 = new Range.Builder(1183L, (-9223372036854775808L));
range_Builder0.copy();
range_Builder0.build();

[MASTER] 20:17:29.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 20:17:29.238 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Comparators.values();
Range range0 = Range.of(32766L, 32766L);
LinkedList<Range> linkedList0 = new LinkedList<Range>();
range0.complementFrom(linkedList0);
Range range1 = Range.ofLength(32766L);
range1.spliterator();
List<Range> list0 = range0.complement(range1);
range1.iterator();
List<Range> list1 = range0.complementFrom(list0);
assertFalse(list1.equals((Object)list0));
assertEquals(1, list1.size());

range0.intersects(range1);
Range range2 = Range.ofLength(1544L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range3 = Range.of(range_CoordinateSystem0, 1544L, 32766L);
Range.CoordinateSystem.values();
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
range3.getBegin(range_CoordinateSystem1);
Range range4 = Range.of((-2916L));
range3.complement(range2);
assertFalse(range2.isEmpty());

range4.complement(range0);
assertFalse(range0.isEmpty());


[MASTER] 20:17:30.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 20:17:30.130 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(370L, 2147483646L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 370L, 4294967295L);
Range range1 = Range.of(range_CoordinateSystem0, 0L, 4294967295L);
assertFalse(range1.isEmpty());

Range range2 = range0.intersection(range0);
Range range3 = Range.of(4294967295L, 9223372036854775807L);
List<Range> list0 = range3.complement(range2);
assertEquals(2, list0.size());

Range range4 = Range.of(1231L, 1231L);
Range range5 = range4.intersection(range0);
assertFalse(range5.isEmpty());
assertSame(range0, range2);


[MASTER] 20:17:30.421 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 20:17:30.422 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, (-1L), 2577L);
LinkedList<Range> linkedList0 = new LinkedList<Range>();
Range range1 = Range.of((-1L), 2577L);
boolean boolean0 = range1.intersects(range0);
linkedList0.add(range1);
Range range2 = linkedList0.pop();
range1.complementFrom(linkedList0);
range2.complementFrom(linkedList0);
linkedList0.add(range0);
List<Range> list0 = range1.complement(range0);
assertFalse(list0.contains(range1));
assertEquals(2, list0.size());

Range range3 = Range.ofLength(313L);
boolean boolean1 = range2.isSubRangeOf(range0);
assertFalse(boolean1 == boolean0);

range0.equals(range2);
Range.of(255L);
Range.Builder range_Builder0 = new Range.Builder(range0);
Range.Builder range_Builder1 = range_Builder0.expandBegin((-1L));
range_Builder1.build();
range_Builder1.expandBegin(2577L);
Range.Builder range_Builder2 = new Range.Builder();
range_Builder0.build();
Range.Builder range_Builder3 = new Range.Builder((-1L), 255L);
range_Builder3.build();
Long.getLong("The first parameter in the comparison is null.");
boolean boolean2 = range3.equals((Object) null);
assertFalse(range3.isEmpty());
assertFalse(boolean2);


[MASTER] 20:17:32.148 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 20:17:32.148 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder((-1771L), 0L);
range_Builder0.contractEnd(0L);
Range range0 = range_Builder0.build();
Range.Builder range_Builder1 = range_Builder0.expandEnd(0L);
Range.Builder range_Builder2 = new Range.Builder(range0);
Range range1 = range_Builder0.build();
range_Builder0.copy();
range_Builder0.contractBegin((-1771L));
range_Builder1.expandEnd(2147483671L);
List<Range> list0 = range1.split(1L);
assertTrue(list0.contains(range1));
assertTrue(range1.isEmpty());


[MASTER] 20:17:32.319 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 20:17:32.320 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
Range.Builder range_Builder0 = new Range.Builder(range0);
Range.CoordinateSystem.values();
Range range1 = Range.of(2724L, 9223372036854775098L);
Range range2 = Range.of(2724L);
Range.Builder range_Builder1 = range_Builder0.copy();
assertFalse(range0.isEmpty());

Range.Builder range_Builder2 = range_Builder1.contractBegin(2724L);
range_Builder2.copy();
range_Builder0.contractBegin((-2757L));
range1.toString();
Range.Builder range_Builder3 = new Range.Builder();
Range.Builder range_Builder4 = new Range.Builder(range1);
Range range3 = Range.of(918L, 9223372036854775098L);
range0.endsBefore(range3);
Range range4 = range_Builder2.build();
assertFalse(range4.isEmpty());

String string0 = range1.toString();
assertEquals("[ 2724 .. 9223372036854775098 ]/0B", string0);

Range range5 = Range.parseRange("[ 2724 .. 9223372036854775098 ]/0B");
range1.isEmpty();
List<Range> list0 = range5.complement(range3);
assertEquals(1, list0.size());

range2.asRange();
range5.iterator();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
String string1 = range2.toString(range_CoordinateSystem0);
assertEquals("[ 2725 .. 2725 ]/RB", string1);

range5.equals(range1);
assertFalse(range1.equals((Object)range3));
assertFalse(range5.equals((Object)range2));


[MASTER] 20:17:34.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 20:17:34.183 [logback-1] WARN  JUnitAnalyzer - Failing test:
 long long0 = 370L;
long long1 = 9223372036854773244L;
Range.of(370L, 9223372036854773244L);
Object object0 = new Object();
Range range0 = Range.of(1L);
Object object1 = new Object();
Object object2 = new Object();
Object object3 = new Object();
Range range1 = Range.ofLength(9223372036854773244L);
range1.isSubRangeOf(range0);
Object object4 = new Object();
Range.ofLength(1L);
long long2 = 798L;
Range range2 = Range.of(798L);
Object object5 = new Object();
range2.equals(object5);
Range.Builder range_Builder0 = new Range.Builder(9223372036854773244L);
range_Builder0.copy();
Range range3 = Range.ofLength(9223372036854773244L);
range3.split(9223372036854773244L);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18441
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18439
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:55:33.873 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:55:34.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:55:34.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:55:34.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/util/FileIterator.java
[MASTER] 20:55:34.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:55:34.838 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:55:34.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:55:34.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/residue/nt/DefaultNucleotideCodec.java
* Using seed 1027
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 20:55:36.452 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 20:55:36.452 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 20:59:08.295 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 840s and 606 generations, 559629 statements, best individual has fitness: 616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 67
* Number of covered goals: 65
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 53
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 74
* Number of covered goals: 41
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 67
* Number of covered goals: 61
* Generated 30 tests with total length 648
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 842s and 141 generations, 155168 statements, best individual has fitness: 344.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 52
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 87 tests with total length 2215
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
[MASTER] 21:10:40.111 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 21:10:40.112 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)65;
byteArray0[1] = (byte)62;
byteArray0[2] = (byte) (-23);
byteArray0[3] = (byte)0;
byteArray0[4] = (byte) (-11);
byteArray0[5] = (byte) (-1);
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18440
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:13:19.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:13:19.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:13:19.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:13:19.966 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:13:19.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:13:19.975 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:13:20.050 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:13:20.050 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:13:20.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:13:20.052 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:13:20.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:13:20.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:13:20.054 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:13:20.078 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:13:20.079 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/assembly/consed/phd/PhdBuilder.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 21:14:07.944 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 21:18:07.300 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 21:18:46.190 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 840s and 966 generations, 1063299 statements, best individual has fitness: 240.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 93
* Number of covered goals: 86
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 27
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 47
* Number of covered goals: 43
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 27
* Number of covered goals: 22
* Generated 21 tests with total length 528
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
