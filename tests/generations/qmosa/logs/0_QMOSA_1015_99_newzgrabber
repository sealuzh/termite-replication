* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: Newzgrabber.Base64Decoder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/99_newzgrabber/evosuite-files/evosuite.properties
* Connecting to master process on port 12623
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:47:31.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:47:31.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:47:31.008 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:47:31.793 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:47:31.824 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:47:31.825 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:47:33.865 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:47:33.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:47:33.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:47:33.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:47:33.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:47:33.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:47:33.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:47:33.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:47:33.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 06:47:33.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class Newzgrabber.Base64Decoder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/99_newzgrabber/src/main/java/Newzgrabber/Base64Decoder.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 06:47:53.759 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 300s and 128 generations, 119146 statements, best individual has fitness: 416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 76
* Number of covered goals: 54
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 59
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 1
* Number of covered goals: 1
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 69
* Number of covered goals: 65
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 59
* Number of covered goals: 46
* Generated 7 tests with total length 180
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
[MASTER] 06:52:44.306 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-9992> but was:<-9991>
[MASTER] 06:52:44.306 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CH:Y>?*{");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)42;
byteArray0[1] = (byte) (-11);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
byteArray0[2] = (byte)119;
byteArray0[3] = (byte)1;
byteArray0[4] = (byte)46;
byteArray0[5] = (byte)10;
byteArray0[7] = (byte)11;
byteArray0[8] = (byte) (-1);
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
MockFile mockFile0 = new MockFile((String) null, "mK[v9");
File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
Object object0 = new Object();
file0.setExecutable(false, false);
mockFile0.mkdirs();
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, (byte)10, true);
Object object1 = new Object();
Object object2 = new Object();
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
base64Decoder0.setBegin(true);
base64Decoder0.decodeStream();
assertEquals((-9992), mockFileInputStream0.available());
assertEquals(1L, base64Decoder0.getLineCount());


[MASTER] 06:52:44.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-19977> but was:<-19961>
[MASTER] 06:52:44.545 [logback-1] WARN  JUnitAnalyzer - Failing test:
 EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
byte[] byteArray0 = new byte[9];
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)91;
byteArray0[3] = (byte)0;
byteArray0[4] = (byte)38;
byteArray0[1] = (byte)10;
FileSystemHandling.appendStringToFile(evoSuiteFile0, "{O6XMl_|_SC(*rr");
byteArray0[6] = (byte)10;
byteArray0[7] = (byte)10;
byteArray0[8] = (byte)10;
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
MockFile mockFile0 = new MockFile((String) null, "mK[v9");
File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
MockFileInputStream mockFileInputStream1 = new MockFileInputStream(file0);
mockFileInputStream0.release();
file0.toURI();
mockFile0.toURL();
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
MockFile mockFile1 = new MockFile("*&m-|6{(B,1r");
file0.renameTo(mockFile1);
mockFile1.toURL();
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
file0.deleteOnExit();
base64Decoder0.setTotalLines((byte)38);
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
assertEquals((-19977), mockFileInputStream0.available());
assertEquals(4L, base64Decoder0.getLineCount());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 48
* Writing JUnit test case 'Base64Decoder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/99_newzgrabber/evosuite-tests
* Done!

* Computation finished
