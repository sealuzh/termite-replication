* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7483
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7487
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7486
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:50:48.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:50:48.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:50:48.681 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:50:48.737 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:50:48.741 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:50:48.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:50:48.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:50:48.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:50:48.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:50:48.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1014
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1014
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:50:56.539 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:50:56.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:50:56.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:50:56.975 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:50:57.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:50:57.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:50:58.696 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:50:58.715 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:50:58.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:50:58.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:50:58.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:50:58.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:50:58.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:50:58.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:50:58.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:50:58.758 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:50:58.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1014
* Starting evolution
[MASTER] 03:51:01.647 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 03:53:32.403 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 03:55:46.921 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 843s and 154 generations, 162893 statements, best individual has fitness: 5440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 370
* Number of covered goals: 251
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 242
* Number of covered goals: 124
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 713
* Number of covered goals: 425
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 51%
* Total number of goals: 242
* Number of covered goals: 124
* Generated 71 tests with total length 1480
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 855s and 24 generations, 27511 statements, best individual has fitness: 2648.0
* Search finished after 845s and 80 generations, 64054 statements, best individual has fitness: 15816.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 777
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 336
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 250
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 321
* Generated 125 tests with total length 2518
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 632
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 678
* Number of covered goals: 605
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 244
* Number of covered goals: 97
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 124
* Number of covered goals: 119
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 124
* Number of covered goals: 118
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 387
* Generated 141 tests with total length 3381
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 04:06:53.651 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:06:54.023 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:07:04.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:07:04.058 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>(arrayList0);
LinkedList<String> linkedList1 = new LinkedList<String>();
Attribute attribute0 = new Attribute("ceJcD~", linkedList1);
arrayList0.add(attribute0);
Instances instances0 = new Instances("numeric", arrayList0, 104);
SystemInUtil.addInputLine("first-last");
Instances instances1 = new Instances(instances0, 15);
Attribute attribute1 = new Attribute("relational", instances0);
Instances instances2 = new Instances(instances1, 0);
ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>(arrayList0);
arrayList0.add(attribute1);
Instances instances3 = new Instances("v5} }zn!y", arrayList1, 12);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances2);

[MASTER] 04:07:07.496 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:07:07.497 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>(arrayList0);
LinkedList<String> linkedList1 = new LinkedList<String>();
Attribute attribute0 = new Attribute("ceJcD~", linkedList1);
arrayList0.add(attribute0);
Instances instances0 = new Instances("numeric", arrayList0, 104);
Instances instances1 = new Instances(instances0, 15);
Attribute attribute1 = new Attribute("relational", instances0);
Instances instances2 = new Instances(instances1, 0);
ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
arrayList0.add(attribute1);
Instances instances3 = new Instances("v5} }zn!y", arrayList1, 12);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances2);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 04:11:09.259 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.72961875% of time used, but only 43/141 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 04:11:32.179 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:11:32.435 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:11:32.435 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 04:11:33.126 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
[MASTER] 04:12:42.447 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7483
* Connecting to master process on port 7482
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:13:22.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:13:22.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:13:22.496 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:13:22.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:13:22.514 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:13:22.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:13:24.403 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:13:24.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:13:24.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:13:24.420 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1014
* Starting evolution
* Using seed 1014
* Starting evolution
[MASTER] 04:13:29.251 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 04:13:55.260 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:13:55.260 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 04:14:08.994 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:14:09.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:14:09.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:14:11.284 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1051
[MASTER] 04:14:11.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - false
[MASTER] 04:14:11.315 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 266: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - ReplaceVariable m_lowercaseTokens -> m_useStopList
[MASTER] 04:14:11.338 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 334: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - ReplaceVariable m_useStopList -> m_lowercaseTokens
[MASTER] 04:14:11.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 04:14:18.524 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1130
[MASTER] 04:14:18.527 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I70 Branch 184 IFNE L1123 - true
[MASTER] 04:14:18.566 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 492: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1127 - ReplaceArithmeticOperator / -> %
[MASTER] 04:14:18.568 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I70 Branch 184 IFNE L1123 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 04:18:14.350 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 297s and 128 generations, 116380 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 384
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 841s and 103 generations, 117068 statements, best individual has fitness: 1920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 338
* Number of covered goals: 293
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 151
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 425
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 112
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 148
* Generated 68 tests with total length 1592
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 60%
* Compiling and checking tests
[MASTER] 04:32:11.395 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_9_1574051531370/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_9_1574051531370/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:11.395 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:11.395 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:11.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 04:32:11.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 04:32:11.401 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_9_1574051531370/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.AbstractClassifier;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.misc.InputMappedClassifier;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_9_tmp__ESTest extends NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.253297930766516
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       double[] doubleArray0 = new double[2];
29:       doubleArray0[0] = 2.0;
30:       doubleArray0[1] = 2.0;
31:       int[] intArray0 = new int[6];
32:       intArray0[0] = 0;
33:       String[] stringArray0 = new String[8];
34:       stringArray0[0] = "";
35:       stringArray0[1] = "";
36:       stringArray0[2] = "ku<$Z4? 7T";
37:       stringArray0[3] = "e>O28Z)E72{`yF^r&";
38:       stringArray0[4] = "ku<$Z4? 7T";
39:       stringArray0[5] = "ku<$Z4? 7T";
40:       stringArray0[6] = "ku<$Z4? 7T";
41:       stringArray0[7] = "ku<$Z4? 7T";
42:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
43:       naiveBayesMultinomialText0.normTipText();
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       naiveBayesMultinomialText0.minWordFrequencyTipText();
46:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
47:       naiveBayesMultinomialText0.useStopListTipText();
48:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
49:       assertEquals("Don't output a report of model-to-input mappings.", inputMappedClassifier0.suppressMappingReportTipText());
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_9_1574051531370/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:11.402 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[2];
doubleArray0[0] = 2.0;
doubleArray0[1] = 2.0;
int[] intArray0 = new int[6];
intArray0[0] = 0;
String[] stringArray0 = new String[8];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "ku<$Z4? 7T";
stringArray0[3] = "e>O28Z)E72{`yF^r&";
stringArray0[4] = "ku<$Z4? 7T";
stringArray0[5] = "ku<$Z4? 7T";
stringArray0[6] = "ku<$Z4? 7T";
stringArray0[7] = "ku<$Z4? 7T";
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
naiveBayesMultinomialText0.normTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.useStopListTipText();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
assertEquals("Don't output a report of model-to-input mappings.", inputMappedClassifier0.suppressMappingReportTipText());


[MASTER] 04:32:12.054 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1574051532032/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1574051532032/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 04:32:12.055 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 04:32:12.056 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1574051532032/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.evosuite.runtime.util.SystemInUtil;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_27_tmp__ESTest extends NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.6868977693384446
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       String[] stringArray0 = new String[9];
33:       stringArray0[0] = "";
34:       stringArray0[1] = "";
35:       stringArray0[2] = "";
36:       SystemInUtil.addInputLine("");
37:       naiveBayesMultinomialText0.setPeriodicPruning(1569);
38:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       SystemInUtil.addInputLine("'");
40:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
41:       Object object0 = new Object();
42:       linkedHashMap0.remove(object0, (Object) "");
43:       Integer integer0 = new Integer(98);
44:       Integer integer1 = new Integer(1569);
45:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       Integer.toUnsignedLong(2104);
48:       linkedHashMap0.replace(integer1, linkedHashMap1, linkedHashMap1);
49:       Integer integer2 = new Integer((-3194));
50:       linkedHashMap0.put(integer2, linkedHashMap1);
51:       Integer integer3 = Integer.getInteger("", integer0);
52:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
53:       linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
54:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
55:       try { 
56:         naiveBayesMultinomialText0.classifyInstance((Instance) null);
57:         fail("Expecting exception: NullPointerException");
58:       
59:       } catch(NullPointerException e) {
60:          //
61:          // no message in exception (getMessage() returned null)
62:          //
63:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_27_1574051532032/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.057 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[9];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "";
SystemInUtil.addInputLine("");
naiveBayesMultinomialText0.setPeriodicPruning(1569);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
SystemInUtil.addInputLine("'");
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Object object0 = new Object();
linkedHashMap0.remove(object0, (Object) "");
Integer integer0 = new Integer(98);
Integer integer1 = new Integer(1569);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer.toUnsignedLong(2104);
linkedHashMap0.replace(integer1, linkedHashMap1, linkedHashMap1);
Integer integer2 = new Integer((-3194));
linkedHashMap0.put(integer2, linkedHashMap1);
Integer integer3 = Integer.getInteger("", integer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.classifyInstance((Instance) null);

[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1574051532057/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1574051532057/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 04:32:12.079 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1574051532057/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.SparseInstance;
19: import weka.core.stemmers.IteratedLovinsStemmer;
20: import weka.core.stemmers.LovinsStemmer;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.7017814074872013
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
32:       IteratedLovinsStemmer iteratedLovinsStemmer1 = new IteratedLovinsStemmer();
33:       IteratedLovinsStemmer iteratedLovinsStemmer2 = new IteratedLovinsStemmer();
34:       IteratedLovinsStemmer iteratedLovinsStemmer3 = new IteratedLovinsStemmer();
35:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       Integer integer0 = new Integer(68);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
40:       Integer integer1 = new Integer(0);
41:       linkedHashMap1.put(integer1, linkedHashMap0);
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
43:       Integer integer2 = new Integer(59);
44:       Integer.sum(59, 0);
45:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
46:       Integer integer3 = new Integer(108);
47:       linkedHashMap1.put(integer3, linkedHashMap0);
48:       naiveBayesMultinomialText0.pruneDictionary();
49:       System.setCurrentTimeMillis(0L);
50:       String[] stringArray0 = new String[6];
51:       stringArray0[0] = " );a$1}piE\"";
52:       stringArray0[1] = " );a$1}piE\"";
53:       stringArray0[2] = " );a$1}piE\"";
54:       stringArray0[3] = " );a$1}piE\"";
55:       stringArray0[4] = " );a$1}piE\"";
56:       stringArray0[5] = " );a$1}piE\"";
57:       naiveBayesMultinomialText0.setOptions(stringArray0);
58:       naiveBayesMultinomialText0.getTokenizer();
59:       double[] doubleArray0 = new double[1];
60:       doubleArray0[0] = (double) 68;
61:       int[] intArray0 = new int[2];
62:       intArray0[0] = 59;
63:       intArray0[1] = 0;
64:       SparseInstance sparseInstance0 = new SparseInstance(108, doubleArray0, intArray0, (-3552));
65:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
66:       // Undeclared exception!
67:       try { 
68:         naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);
69:         fail("Expecting exception: RuntimeException");
70:       
71:       } catch(RuntimeException e) {
72:          //
73:          // DenseInstance doesn't have access to a dataset!
74:          //
75:          verifyException("weka.core.AbstractInstance", e);
76:       }
77:   }
78: }
RegularFileObject[/tmp/EvoSuite_28_1574051532057/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.080 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
IteratedLovinsStemmer iteratedLovinsStemmer1 = new IteratedLovinsStemmer();
IteratedLovinsStemmer iteratedLovinsStemmer2 = new IteratedLovinsStemmer();
IteratedLovinsStemmer iteratedLovinsStemmer3 = new IteratedLovinsStemmer();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Integer integer0 = new Integer(68);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer(0);
linkedHashMap1.put(integer1, linkedHashMap0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
Integer integer2 = new Integer(59);
Integer.sum(59, 0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer3 = new Integer(108);
linkedHashMap1.put(integer3, linkedHashMap0);
naiveBayesMultinomialText0.pruneDictionary();
System.setCurrentTimeMillis(0L);
String[] stringArray0 = new String[6];
stringArray0[0] = " );a$1}piE\"";
stringArray0[1] = " );a$1}piE\"";
stringArray0[2] = " );a$1}piE\"";
stringArray0[3] = " );a$1}piE\"";
stringArray0[4] = " );a$1}piE\"";
stringArray0[5] = " );a$1}piE\"";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getTokenizer();
double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) 68;
int[] intArray0 = new int[2];
intArray0[0] = 59;
intArray0[1] = 0;
SparseInstance sparseInstance0 = new SparseInstance(108, doubleArray0, intArray0, (-3552));
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);

[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_38_1574051532316/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_38_1574051532316/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_38_1574051532316/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.AbstractClassifier;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.meta.MultiClassClassifierUpdateable;
18: import weka.core.Instance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_38_tmp__ESTest extends NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.41257681572198
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.m_periodicP = 0;
31:       naiveBayesMultinomialText0.toString();
32:       naiveBayesMultinomialText0.m_useStopList = false;
33:       naiveBayesMultinomialText0.periodicPruningTipText();
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       naiveBayesMultinomialText0.setLowercaseTokens(false);
36:       MultiClassClassifierUpdateable multiClassClassifierUpdateable0 = new MultiClassClassifierUpdateable();
37:       String[] stringArray0 = new String[7];
38:       stringArray0[0] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
39:       stringArray0[1] = "e>O28Z)E72{`yF^r&";
40:       stringArray0[2] = "e>O28Z)E72{`yF^r&";
41:       stringArray0[3] = "NaiveBayesMultinomialText: No model built yet.\n";
42:       stringArray0[4] = "NaiveBayesMultinomialText: No model built yet.\n";
43:       stringArray0[5] = "ku<$Z4? 7T";
44:       AbstractClassifier.runClassifier(multiClassClassifierUpdateable0, stringArray0);
45:       naiveBayesMultinomialText0.normTipText();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       Instance instance0 = null;
48:       try { 
49:         naiveBayesMultinomialText0.updateClassifier((Instance) null, false);
50:         fail("Expecting exception: NullPointerException");
51:       
52:       } catch(NullPointerException e) {
53:          //
54:          // no message in exception (getMessage() returned null)
55:          //
56:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
57:       }
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_38_1574051532316/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.335 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 0;
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setLowercaseTokens(false);
MultiClassClassifierUpdateable multiClassClassifierUpdateable0 = new MultiClassClassifierUpdateable();
String[] stringArray0 = new String[7];
stringArray0[0] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
stringArray0[1] = "e>O28Z)E72{`yF^r&";
stringArray0[2] = "e>O28Z)E72{`yF^r&";
stringArray0[3] = "NaiveBayesMultinomialText: No model built yet.\n";
stringArray0[4] = "NaiveBayesMultinomialText: No model built yet.\n";
stringArray0[5] = "ku<$Z4? 7T";
AbstractClassifier.runClassifier(multiClassClassifierUpdateable0, stringArray0);
naiveBayesMultinomialText0.normTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Instance instance0 = null;
naiveBayesMultinomialText0.updateClassifier((Instance) null, false);

[MASTER] 04:32:12.381 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1574051532361/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1574051532361/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 04:32:12.382 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 55
[MASTER] 04:32:12.383 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1574051532361/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.evosuite.runtime.util.SystemInUtil;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.2961346570528898
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       String[] stringArray0 = new String[9];
32:       stringArray0[0] = "";
33:       stringArray0[1] = "";
34:       stringArray0[2] = "";
35:       SystemInUtil.addInputLine("");
36:       naiveBayesMultinomialText0.setPeriodicPruning(1575);
37:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
38:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       SystemInUtil.addInputLine("'");
40:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
41:       Object object0 = new Object();
42:       linkedHashMap0.remove(object0, (Object) "");
43:       Integer integer0 = new Integer(108);
44:       Integer integer1 = new Integer(1575);
45:       FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       Integer.toUnsignedLong(2104);
48:       linkedHashMap0.replace(integer1, linkedHashMap1, linkedHashMap1);
49:       Integer integer2 = new Integer((-3194));
50:       linkedHashMap0.put(integer2, linkedHashMap1);
51:       Integer integer3 = Integer.getInteger("", integer0);
52:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
53:       linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
54:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
55:       linkedHashMap0.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
56:       // Undeclared exception!
57:       try { 
58:         naiveBayesMultinomialText0.pruneDictionary();
59:         fail("Expecting exception: NullPointerException");
60:       
61:       } catch(NullPointerException e) {
62:          //
63:          // no message in exception (getMessage() returned null)
64:          //
65:       }
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_40_1574051532361/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.383 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[9];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "";
SystemInUtil.addInputLine("");
naiveBayesMultinomialText0.setPeriodicPruning(1575);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
SystemInUtil.addInputLine("'");
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Object object0 = new Object();
linkedHashMap0.remove(object0, (Object) "");
Integer integer0 = new Integer(108);
Integer integer1 = new Integer(1575);
FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer.toUnsignedLong(2104);
linkedHashMap0.replace(integer1, linkedHashMap1, linkedHashMap1);
Integer integer2 = new Integer((-3194));
linkedHashMap0.put(integer2, linkedHashMap1);
Integer integer3 = Integer.getInteger("", integer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1574051532407/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1574051532407/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 04:32:12.431 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 04:32:12.432 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 04:32:12.432 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 04:32:12.432 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 55
[MASTER] 04:32:12.432 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 57
[MASTER] 04:32:12.432 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 57
[MASTER] 04:32:12.432 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1574051532407/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.evosuite.runtime.util.SystemInUtil;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.5271837172395382
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       Capabilities capabilities0 = new Capabilities(naiveBayesMultinomialText0);
32:       TestInstances testInstances0 = new TestInstances();
33:       Instances instances0 = testInstances0.generate();
34:       Capabilities.forInstances(instances0);
35:       Capabilities capabilities1 = Capabilities.forInstances(instances0);
36:       SystemInUtil.addInputLine("weka/core/Capabilities.props");
37:       naiveBayesMultinomialText0.setPeriodicPruning((-294));
38:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
39:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
40:       SystemInUtil.addInputLine("");
41:       Object object0 = new Object();
42:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
43:       Object object1 = new Object();
44:       linkedHashMap1.remove((Object) capabilities1, object1);
45:       Integer integer0 = new Integer(1575);
46:       Integer integer1 = new Integer((-9));
47:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       Integer.toUnsignedLong(0);
50:       Integer integer2 = new Integer(1939);
51:       linkedHashMap1.put(integer2, linkedHashMap2);
52:       Integer.getInteger("weka/core/Capabilities.props", integer0);
53:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
54:       linkedHashMap1.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
55:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = naiveBayesMultinomialText0.m_inputVector;
56:       Integer integer3 = new Integer(1575);
57:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap5 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
58:       linkedHashMap1.put(integer3, linkedHashMap5);
59:       naiveBayesMultinomialText0.pruneDictionary();
60:       assertEquals((-294), naiveBayesMultinomialText0.getPeriodicPruning());
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_42_1574051532407/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.433 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Capabilities capabilities0 = new Capabilities(naiveBayesMultinomialText0);
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
Capabilities.forInstances(instances0);
Capabilities capabilities1 = Capabilities.forInstances(instances0);
SystemInUtil.addInputLine("weka/core/Capabilities.props");
naiveBayesMultinomialText0.setPeriodicPruning((-294));
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
SystemInUtil.addInputLine("");
Object object0 = new Object();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Object object1 = new Object();
linkedHashMap1.remove((Object) capabilities1, object1);
Integer integer0 = new Integer(1575);
Integer integer1 = new Integer((-9));
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer.toUnsignedLong(0);
Integer integer2 = new Integer(1939);
linkedHashMap1.put(integer2, linkedHashMap2);
Integer.getInteger("weka/core/Capabilities.props", integer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap1.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = naiveBayesMultinomialText0.m_inputVector;
Integer integer3 = new Integer(1575);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap5 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap1.put(integer3, linkedHashMap5);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals((-294), naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 04:32:12.450 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_43_1574051532433/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_43_1574051532433/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.450 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.450 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.450 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 04:32:12.450 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 04:32:12.451 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_43_1574051532433/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.AbstractClassifier;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_43_tmp__ESTest extends NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.110331863414256
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
29:       naiveBayesMultinomialText0.setLowercaseTokens(false);
30:       naiveBayesMultinomialText0.setLNorm((-770.98458392261));
31:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, (String[]) null);
32:       naiveBayesMultinomialText0.setNorm((-770.98458392261));
33:       naiveBayesMultinomialText0.getOptions();
34:       naiveBayesMultinomialText0.setNorm((-225.9612617));
35:       naiveBayesMultinomialText0.getLowercaseTokens();
36:       naiveBayesMultinomialText0.pruneDictionary();
37:       naiveBayesMultinomialText0.getNormalizeDocLength();
38:       naiveBayesMultinomialText0.setLNorm((-225.9612617));
39:       naiveBayesMultinomialText0.setNorm((-225.9612617));
40:       naiveBayesMultinomialText0.getNormalizeDocLength();
41:       naiveBayesMultinomialText0.getLNorm();
42:       naiveBayesMultinomialText0.minWordFrequencyTipText();
43:       naiveBayesMultinomialText0.minWordFrequencyTipText();
44:       assertEquals((-225.9612617), naiveBayesMultinomialText0.getLNorm(), 0.01);
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_43_1574051532433/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.451 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.setLNorm((-770.98458392261));
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, (String[]) null);
naiveBayesMultinomialText0.setNorm((-770.98458392261));
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setNorm((-225.9612617));
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.setLNorm((-225.9612617));
naiveBayesMultinomialText0.setNorm((-225.9612617));
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals((-225.9612617), naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 04:32:12.640 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1574051532622/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1574051532622/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.640 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.640 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.640 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 04:32:12.640 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 04:32:12.640 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 04:32:12.641 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 04:32:12.641 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 04:32:12.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 04:32:12.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 04:32:12.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 04:32:12.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 56
[MASTER] 04:32:12.643 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1574051532622/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.evosuite.runtime.util.SystemInUtil;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.830738805564335
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
30:       FileSystemHandling.createFolder(evoSuiteFile0);
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       FileSystemHandling.createFolder(evoSuiteFile0);
33:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       String[] stringArray0 = new String[9];
36:       stringArray0[0] = "";
37:       stringArray0[1] = "";
38:       stringArray0[2] = "";
39:       SystemInUtil.addInputLine("");
40:       naiveBayesMultinomialText0.setPeriodicPruning(1575);
41:       FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
42:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
43:       SystemInUtil.addInputLine("'");
44:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
45:       Integer integer0 = new Integer(108);
46:       Integer integer1 = new Integer(1575);
47:       FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       Integer.toUnsignedLong(108);
50:       linkedHashMap0.put((Integer) null, linkedHashMap1);
51:       Integer integer2 = new Integer(108);
52:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
53:       linkedHashMap0.put(integer2, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
54:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
55:       Integer integer3 = new Integer((-3373));
56:       linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
57:       naiveBayesMultinomialText0.getPeriodicPruning();
58:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
59:       assertEquals(1575, naiveBayesMultinomialText0.getPeriodicPruning());
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_51_1574051532622/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.643 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.createFolder(evoSuiteFile0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.createFolder(evoSuiteFile0);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[9];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "";
SystemInUtil.addInputLine("");
naiveBayesMultinomialText0.setPeriodicPruning(1575);
FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
SystemInUtil.addInputLine("'");
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(108);
Integer integer1 = new Integer(1575);
FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer.toUnsignedLong(108);
linkedHashMap0.put((Integer) null, linkedHashMap1);
Integer integer2 = new Integer(108);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer2, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = naiveBayesMultinomialText0.m_inputVector;
Integer integer3 = new Integer((-3373));
linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
assertEquals(1575, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 04:32:12.792 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1574051532775/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1574051532775/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.792 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.792 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 04:32:12.793 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1574051532775/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.evosuite.runtime.util.SystemInUtil;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.2248830687452417
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       SystemInUtil.addInputLine("");
31:       naiveBayesMultinomialText0.setPeriodicPruning(1575);
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       SystemInUtil.addInputLine("'");
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
35:       Object object0 = new Object();
36:       linkedHashMap0.remove(object0, (Object) "");
37:       Integer integer0 = new Integer(108);
38:       Integer integer1 = new Integer(1575);
39:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       Integer.toUnsignedLong(2104);
42:       linkedHashMap0.replace(integer1, linkedHashMap1, linkedHashMap1);
43:       Integer integer2 = new Integer((-3194));
44:       linkedHashMap0.put(integer2, linkedHashMap1);
45:       Integer.getInteger("", integer0);
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
47:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = naiveBayesMultinomialText0.m_inputVector;
49:       linkedHashMap0.put(integer1, linkedHashMap3);
50:       naiveBayesMultinomialText0.pruneDictionary();
51:       assertEquals(1575, naiveBayesMultinomialText0.getPeriodicPruning());
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_56_1574051532775/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.794 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SystemInUtil.addInputLine("");
naiveBayesMultinomialText0.setPeriodicPruning(1575);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
SystemInUtil.addInputLine("'");
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Object object0 = new Object();
linkedHashMap0.remove(object0, (Object) "");
Integer integer0 = new Integer(108);
Integer integer1 = new Integer(1575);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer.toUnsignedLong(2104);
linkedHashMap0.replace(integer1, linkedHashMap1, linkedHashMap1);
Integer integer2 = new Integer((-3194));
linkedHashMap0.put(integer2, linkedHashMap1);
Integer.getInteger("", integer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer1, linkedHashMap3);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1575, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1574051532815/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1574051532815/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.java]]
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 04:32:12.844 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 04:32:12.845 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 04:32:12.845 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 04:32:12.845 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1574051532815/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 04:32:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.Random;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.IteratedLovinsStemmer;
18: import weka.core.stemmers.LovinsStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_58_tmp__ESTest extends NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.847832822658352
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
30:       IteratedLovinsStemmer iteratedLovinsStemmer1 = new IteratedLovinsStemmer();
31:       IteratedLovinsStemmer iteratedLovinsStemmer2 = new IteratedLovinsStemmer();
32:       IteratedLovinsStemmer iteratedLovinsStemmer3 = new IteratedLovinsStemmer();
33:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
36:       naiveBayesMultinomialText1.setMinWordFrequency((-1833.88329791873));
37:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
38:       Integer integer0 = new Integer((-1645));
39:       Integer integer1 = new Integer((-1578));
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       linkedHashMap0.put((Integer) null, linkedHashMap1);
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
43:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
44:       Integer integer2 = new Integer((-1578));
45:       Integer integer3 = Integer.getInteger("-tokenizer <spec>", integer2);
46:       linkedHashMap3.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
47:       naiveBayesMultinomialText1.pruneDictionary();
48:       naiveBayesMultinomialText1.pruneDictionary();
49:       System.setCurrentTimeMillis(108);
50:       System.setCurrentTimeMillis((-1645));
51:       naiveBayesMultinomialText1.getMinWordFrequency();
52:       Random.setNextRandom((-1099));
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_58_1574051532815/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 04:32:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.CheckGOE",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.filters.unsupervised.instance.RemoveWithValues",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.Optimization",
137:       "weka.core.Check",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.meta.AdditiveRegression",
146:       "weka.core.Version",
147:       "weka.classifiers.meta.MultiClassClassifier$Code",
148:       "weka.filters.unsupervised.attribute.RemoveUseless",
149:       "weka.core.Tag",
150:       "weka.core.TechnicalInformationHandlerJavadoc",
151:       "weka.classifiers.IteratedSingleClassifierEnhancer",
152:       "weka.core.ManhattanDistance",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
157:       "weka.filters.StreamableFilter",
158:       "weka.core.Range",
159:       "weka.core.Attribute$1",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.WekaEnumeration",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.lazy.LWL",
176:       "weka.core.neighboursearch.LinearNNSearch",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.tokenizers.NGramTokenizer",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.AttributeStats",
195:       "weka.core.WeightedInstancesHandler",
196:       "weka.core.neighboursearch.NearestNeighbourSearch",
197:       "weka.classifiers.trees.DecisionStump",
198:       "weka.core.Randomizable",
199:       "weka.core.Javadoc",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.classifiers.functions.Logistic$OptEngCG",
209:       "weka.classifiers.functions.Logistic$OptEng",
210:       "weka.core.RevisionHandler",
211:       "weka.classifiers.evaluation.output.prediction.PlainText",
212:       "weka.core.neighboursearch.TreePerformanceStats",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.filters.unsupervised.attribute.MakeIndicator",
215:       "weka.classifiers.xml.XMLClassifier",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.Filter"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.classifiers.Evaluation",
235:       "weka.core.Option",
236:       "weka.core.RevisionUtils",
237:       "weka.filters.Filter",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.Range",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.tokenizers.NGramTokenizer",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.classifiers.SingleClassifierEnhancer",
258:       "weka.classifiers.misc.InputMappedClassifier",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.core.AbstractInstance",
261:       "weka.core.SparseInstance",
262:       "weka.core.BinarySparseInstance",
263:       "weka.core.Instances",
264:       "weka.core.converters.ArffLoader$ArffReader",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.classifiers.misc.SerializedClassifier",
269:       "weka.core.Stopwords",
270:       "weka.attributeSelection.ASEvaluation",
271:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
272:       "weka.attributeSelection.PrincipalComponents",
273:       "weka.attributeSelection.AttributeSelection",
274:       "weka.core.TestInstances",
275:       "weka.core.DenseInstance",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.classifiers.CostMatrix",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.neighboursearch.BallTree",
281:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.core.stemmers.LovinsStemmer",
290:       "weka.core.stemmers.Stemming",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.SelectedTag",
294:       "weka.core.UnassignedClassException",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.classifiers.meta.MultiClassClassifier",
297:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
298:       "weka.classifiers.functions.Logistic",
299:       "weka.core.stemmers.IteratedLovinsStemmer",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.classifiers.bayes.BayesNet",
304:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
305:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
306:       "weka.classifiers.bayes.net.search.local.K2",
307:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
308:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
309:       "weka.classifiers.functions.SimpleLinearRegression",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.WekaException",
313:       "weka.classifiers.meta.FilteredClassifier",
314:       "weka.filters.supervised.attribute.AttributeSelection",
315:       "weka.attributeSelection.CfsSubsetEval",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.GreedyStepwise",
318:       "weka.attributeSelection.BestFirst",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.Stacking",
324:       "weka.classifiers.IteratedSingleClassifierEnhancer",
325:       "weka.classifiers.meta.AdditiveRegression",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.core.Javadoc",
328:       "weka.core.TechnicalInformationHandlerJavadoc",
329:       "weka.classifiers.bayes.net.BIFReader",
330:       "weka.classifiers.functions.SMOreg",
331:       "weka.classifiers.functions.supportVector.RegOptimizer",
332:       "weka.classifiers.functions.supportVector.RegSMO",
333:       "weka.classifiers.functions.supportVector.RegSMOImproved",
334:       "weka.classifiers.functions.supportVector.CachedKernel",
335:       "weka.classifiers.functions.supportVector.PolyKernel",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.core.WekaEnumeration",
341:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
342:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.Bagging",
344:       "weka.classifiers.trees.REPTree",
345:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
346:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
347:       "weka.classifiers.functions.SGD",
348:       "weka.core.TechnicalInformation",
349:       "weka.core.TechnicalInformation$Type",
350:       "weka.core.TechnicalInformation$Field",
351:       "weka.classifiers.rules.PART",
352:       "weka.estimators.Estimator",
353:       "weka.estimators.DiscreteEstimator",
354:       "weka.classifiers.meta.RandomCommittee",
355:       "weka.classifiers.trees.RandomTree",
356:       "weka.core.ClassDiscovery",
357:       "weka.core.ClassCache",
358:       "weka.core.AllJavadoc",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.Vote",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.attributeSelection.GainRatioAttributeEval",
363:       "weka.classifiers.trees.LMT",
364:       "weka.attributeSelection.ReliefFAttributeEval",
365:       "weka.core.OptionHandlerJavadoc",
366:       "weka.classifiers.meta.AttributeSelectedClassifier",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.MinkowskiDistance",
369:       "weka.core.Check",
370:       "weka.core.CheckGOE",
371:       "weka.classifiers.trees.j48.ClassifierTree",
372:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.estimators.KernelEstimator",
379:       "weka.core.matrix.Matrix",
380:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.functions.GaussianProcesses",
384:       "weka.filters.SimpleFilter",
385:       "weka.filters.SimpleStreamFilter",
386:       "weka.filters.MultiFilter",
387:       "weka.filters.AllFilter",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.bayes.NaiveBayesUpdateable",
390:       "weka.classifiers.meta.CVParameterSelection",
391:       "weka.classifiers.lazy.KStar",
392:       "weka.classifiers.rules.OneR",
393:       "weka.classifiers.functions.VotedPerceptron",
394:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.core.Attribute$1",
398:       "weka.core.ManhattanDistance",
399:       "weka.classifiers.functions.supportVector.StringKernel",
400:       "weka.classifiers.meta.RegressionByDiscretization",
401:       "weka.filters.unsupervised.attribute.Discretize",
402:       "weka.classifiers.lazy.LWL",
403:       "weka.estimators.NormalEstimator",
404:       "weka.classifiers.meta.ClassificationViaRegression",
405:       "weka.classifiers.trees.M5P",
406:       "weka.classifiers.functions.SMO",
407:       "weka.core.AttributeStats",
408:       "weka.experiment.Stats",
409:       "weka.attributeSelection.OneRAttributeEval",
410:       "weka.core.GlobalInfoJavadoc",
411:       "weka.core.CheckOptionHandler",
412:       "weka.core.ChebyshevDistance",
413:       "weka.core.ListOptions"
414:     );
415:   }
416: }

[MASTER] 04:32:12.845 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
IteratedLovinsStemmer iteratedLovinsStemmer1 = new IteratedLovinsStemmer();
IteratedLovinsStemmer iteratedLovinsStemmer2 = new IteratedLovinsStemmer();
IteratedLovinsStemmer iteratedLovinsStemmer3 = new IteratedLovinsStemmer();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setMinWordFrequency((-1833.88329791873));
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((-1645));
Integer integer1 = new Integer((-1578));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer2 = new Integer((-1578));
Integer integer3 = Integer.getInteger("-tokenizer <spec>", integer2);
linkedHashMap3.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText1.pruneDictionary();
naiveBayesMultinomialText1.pruneDictionary();
System.setCurrentTimeMillis(108);
System.setCurrentTimeMillis((-1645));
naiveBayesMultinomialText1.getMinWordFrequency();
Random.setNextRandom((-1099));

[MASTER] 04:32:14.666 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 04:32:14.743 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7485
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1014
* Starting evolution
* Search finished after 843s and 84 generations, 112773 statements, best individual has fitness: 2856.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 57 tests with total length 1140
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7485
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:41:04.116 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:41:04.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:41:04.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:41:05.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:41:06.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:41:06.178 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1014
* Starting evolution
[MASTER] 05:41:24.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: Line 491
[MASTER] 05:41:24.643 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch
[MASTER] 05:41:24.645 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 194: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:491 - ReplaceConstant - The minimum total weight of the instances in a rule. -> 
[MASTER] 05:41:24.647 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 05:41:24.649 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 05:41:24.651 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 05:41:24.653 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:minNoTipText()Ljava/lang/String;
[MASTER] 05:42:33.685 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 05:44:10.131 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 05:46:14.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.toString(Lweka/core/Attribute;)Ljava/lang/String;: Line 1424
[MASTER] 05:46:14.671 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.grow(Lweka/core/Instances;)V
[MASTER] 05:46:14.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.toString(Lweka/core/Attribute;)Ljava/lang/String;
[MASTER] 05:46:37.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.setConsequent(D)V
[MASTER] 05:46:37.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.setConsequent(D)V
[MASTER] 05:46:37.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: root-Branch in context: weka.classifiers.rules.JRip$RipperRule:setConsequent(D)V
* Search finished after 841s and 258 generations, 228200 statements, best individual has fitness: 12368.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 705
* Number of covered goals: 265
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 115
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 563
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 114
* Generated 65 tests with total length 1563
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 05:56:09.039 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:56:09.631 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
