* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18042
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:28:19.780 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:28:19.782 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:28:19.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:28:19.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:28:19.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:28:19.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 16:31:41.240 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 842s and 221 generations, 207694 statements, best individual has fitness: 4072.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 370
* Number of covered goals: 270
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 145
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 534
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 145
* Generated 77 tests with total length 1496
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 16:44:43.494 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 16:44:43.799 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 16:44:58.775 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 16:44:58.776 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Attribute attribute0 = new Attribute("NOMINAL_ATTRIBUTES");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
LinkedList<String> linkedList0 = new LinkedList<String>();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("string", arrayList0, 2);
Attribute attribute1 = new Attribute("/j:L^`3*/n", instances0);
arrayList0.add(attribute1);
Instances instances1 = new Instances("Rh F]Jot6I9]x)hl|E#", arrayList0, 1);
MockRandom mockRandom0 = new MockRandom();
instances1.resampleWithWeights((Random) mockRandom0, (boolean[]) null);
instances1.lastIndexOf("NOMINAL_ATTRIBUTES");
FileSystemHandling.appendLineToFile(evoSuiteFile0, ".arff");
Discretize discretize0 = new Discretize();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
discretize0.setInputFormat(instances0);

[MASTER] 16:44:59.970 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 16:44:59.971 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Attribute attribute0 = new Attribute("NOMINAL_ATTRIBUTES");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
LinkedList<String> linkedList0 = new LinkedList<String>();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("string", arrayList0, 2);
Attribute attribute1 = new Attribute("/j:L^`3*/n", instances0);
arrayList0.add(attribute1);
Instances instances1 = new Instances("Rh F]Jot6I9]x)hl|E#", arrayList0, 1);
MockRandom mockRandom0 = new MockRandom();
instances1.resampleWithWeights((Random) mockRandom0, (boolean[]) null);
instances1.lastIndexOf("NOMINAL_ATTRIBUTES");
FileSystemHandling.appendLineToFile(evoSuiteFile0, ".arff");
Discretize discretize0 = new Discretize();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
discretize0.setInputFormat(instances0);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18041
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:45:09.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:45:09.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:45:09.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:45:09.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:45:09.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:45:09.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 208
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 209
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 212
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 213
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 214
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 215
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 216
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 218
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 219
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 222
[MASTER] 16:45:14.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 224
[MASTER] 16:45:14.640 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch
[MASTER] 16:45:14.647 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:222 - ReplaceConstant - 0 -> 1
[MASTER] 16:45:14.648 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:hasDependencies()Z:False
[MASTER] 16:45:14.648 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:getMinimumNumberInstances()I:Zero
[MASTER] 16:45:14.661 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 16:45:14.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 16:45:14.668 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getCapabilities()Lweka/core/Capabilities;
[MASTER] 16:47:23.645 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 16:47:23.645 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 16:53:18.821 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 841s and 92 generations, 84154 statements, best individual has fitness: 2120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 338
* Number of covered goals: 289
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 194
* Number of covered goals: 145
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 421
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 112
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 194
* Number of covered goals: 142
* Generated 62 tests with total length 1219
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 17:02:46.298 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1574182966272/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1574182966272/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.java]]
[MASTER] 17:02:46.298 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:02:46.298 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:02:46.301 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 17:02:46.301 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 17:02:46.302 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1574182966272/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 17:02:46 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.SnowballStemmer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_15_tmp__ESTest extends NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.253297930766516
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
29:       SnowballStemmer snowballStemmer0 = new SnowballStemmer();
30:       naiveBayesMultinomialText0.setMinWordFrequency(540.0);
31:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
32:       naiveBayesMultinomialText0.normTipText();
33:       naiveBayesMultinomialText0.minWordFrequencyTipText();
34:       double double0 = naiveBayesMultinomialText0.getNorm();
35:       assertEquals(540.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:       assertEquals(1.0, double0, 0.01);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_15_1574182966272/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 17:02:46 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.attributeSelection.AttributeEvaluator",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.estimators.DiscreteEstimator",
140:       "weka.classifiers.misc.InputMappedClassifier",
141:       "weka.core.Version",
142:       "weka.filters.AllFilter",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.classifiers.Classifier",
151:       "weka.attributeSelection.OneRAttributeEval",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.core.WekaEnumeration",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.misc.SerializedClassifier",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.classifiers.MultipleClassifiersCombiner",
176:       "weka.core.tokenizers.NGramTokenizer",
177:       "weka.core.UnassignedDatasetException",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.estimators.Estimator",
183:       "weka.core.ProtectedProperties",
184:       "weka.classifiers.meta.Vote",
185:       "weka.core.StringLocator",
186:       "weka.core.AttributeStats",
187:       "weka.core.WeightedInstancesHandler",
188:       "weka.core.neighboursearch.NearestNeighbourSearch",
189:       "weka.core.TechnicalInformation$Field",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.classifiers.lazy.IBk",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.Attribute",
291:       "weka.core.ProtectedProperties",
292:       "weka.classifiers.lazy.KStar",
293:       "weka.core.DenseInstance",
294:       "weka.core.WekaEnumeration",
295:       "weka.core.Attribute$1",
296:       "weka.core.neighboursearch.CoverTree",
297:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.classifiers.trees.DecisionStump",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
304:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
305:       "weka.classifiers.meta.Bagging",
306:       "weka.classifiers.trees.REPTree",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.functions.GaussianProcesses",
309:       "weka.classifiers.functions.supportVector.Kernel",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
313:       "weka.classifiers.meta.AdaBoostM1",
314:       "weka.attributeSelection.OneRAttributeEval",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.DiscreteEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.core.converters.ArffLoader$ArffReader",
319:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.core.neighboursearch.PerformanceStats",
331:       "weka.core.neighboursearch.TreePerformanceStats",
332:       "weka.classifiers.lazy.LWL",
333:       "weka.attributeSelection.ReliefFAttributeEval",
334:       "weka.classifiers.functions.Logistic",
335:       "weka.classifiers.misc.SerializedClassifier",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.rules.OneR",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.filters.unsupervised.attribute.Remove",
340:       "weka.attributeSelection.GainRatioAttributeEval",
341:       "weka.attributeSelection.WrapperSubsetEval",
342:       "weka.filters.AllFilter",
343:       "weka.classifiers.MultipleClassifiersCombiner",
344:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
345:       "weka.classifiers.meta.Vote",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.classifiers.trees.j48.ClassifierTree",
348:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
349:       "weka.core.tokenizers.NGramTokenizer",
350:       "weka.classifiers.functions.SMO",
351:       "weka.core.AttributeStats",
352:       "weka.classifiers.rules.JRip",
353:       "weka.classifiers.meta.MultiClassClassifier",
354:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
355:       "weka.classifiers.functions.supportVector.Puk",
356:       "weka.core.matrix.Matrix",
357:       "weka.estimators.MahalanobisEstimator",
358:       "weka.estimators.NormalEstimator",
359:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
360:       "weka.classifiers.bayes.NaiveBayesUpdateable",
361:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
363:       "weka.classifiers.meta.Stacking",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.rules.PART",
368:       "weka.classifiers.trees.m5.M5Base",
369:       "weka.classifiers.rules.M5Rules",
370:       "weka.classifiers.functions.LinearRegression",
371:       "weka.core.Check",
372:       "weka.core.CheckGOE",
373:       "weka.classifiers.trees.RandomTree",
374:       "weka.core.Javadoc",
375:       "weka.core.TechnicalInformationHandlerJavadoc",
376:       "weka.classifiers.functions.SimpleLinearRegression",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.classifiers.trees.LMT",
380:       "weka.classifiers.rules.part.MakeDecList",
381:       "weka.core.FindWithCapabilities",
382:       "weka.core.SingleIndex",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor"
384:     );
385:   }
386: }

[MASTER] 17:02:46.302 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
SnowballStemmer snowballStemmer0 = new SnowballStemmer();
naiveBayesMultinomialText0.setMinWordFrequency(540.0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals(540.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, double0, 0.01);


[MASTER] 17:02:47.261 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_53_1574182967241/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_53_1574182967241/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.java]]
[MASTER] 17:02:47.261 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:02:47.261 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:02:47.261 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 17:02:47.261 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_53_1574182967241/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 17:02:47 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.StringReader;
12: import java.nio.CharBuffer;
13: import java.util.LinkedHashMap;
14: import java.util.Map;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_53_tmp__ESTest extends NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.3552731859488665
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
32:       naiveBayesMultinomialText0.m_stemmer = null;
33:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
34:       naiveBayesMultinomialText0.setOptions(stringArray0);
35:       StringReader stringReader0 = new StringReader("Headers match");
36:       StringReader stringReader1 = new StringReader("Headers match");
37:       CharBuffer.wrap((CharSequence) "Headers match");
38:       char[] charArray0 = new char[9];
39:       charArray0[0] = 'x';
40:       charArray0[1] = 'x';
41:       charArray0[2] = '&';
42:       stringReader1.read(charArray0);
43:       charArray0[3] = '\"';
44:       charArray0[4] = '<';
45:       charArray0[5] = 'q';
46:       charArray0[6] = 'o';
47:       charArray0[7] = 'R';
48:       charArray0[8] = ']';
49:       // Undeclared exception!
50:       try { 
51:         stringReader1.read(charArray0, 104, 1294);
52:         fail("Expecting exception: IndexOutOfBoundsException");
53:       
54:       } catch(IndexOutOfBoundsException e) {
55:          //
56:          // no message in exception (getMessage() returned null)
57:          //
58:          verifyException("java.io.StringReader", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_53_1574182967241/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 17:02:47 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.attributeSelection.AttributeEvaluator",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.estimators.DiscreteEstimator",
140:       "weka.classifiers.misc.InputMappedClassifier",
141:       "weka.core.Version",
142:       "weka.filters.AllFilter",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.classifiers.Classifier",
151:       "weka.attributeSelection.OneRAttributeEval",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.core.WekaEnumeration",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.misc.SerializedClassifier",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.classifiers.MultipleClassifiersCombiner",
176:       "weka.core.tokenizers.NGramTokenizer",
177:       "weka.core.UnassignedDatasetException",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.estimators.Estimator",
183:       "weka.core.ProtectedProperties",
184:       "weka.classifiers.meta.Vote",
185:       "weka.core.StringLocator",
186:       "weka.core.AttributeStats",
187:       "weka.core.WeightedInstancesHandler",
188:       "weka.core.neighboursearch.NearestNeighbourSearch",
189:       "weka.core.TechnicalInformation$Field",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.classifiers.lazy.IBk",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.Attribute",
291:       "weka.core.ProtectedProperties",
292:       "weka.classifiers.lazy.KStar",
293:       "weka.core.DenseInstance",
294:       "weka.core.WekaEnumeration",
295:       "weka.core.Attribute$1",
296:       "weka.core.neighboursearch.CoverTree",
297:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.classifiers.trees.DecisionStump",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
304:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
305:       "weka.classifiers.meta.Bagging",
306:       "weka.classifiers.trees.REPTree",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.functions.GaussianProcesses",
309:       "weka.classifiers.functions.supportVector.Kernel",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
313:       "weka.classifiers.meta.AdaBoostM1",
314:       "weka.attributeSelection.OneRAttributeEval",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.DiscreteEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.core.converters.ArffLoader$ArffReader",
319:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.core.neighboursearch.PerformanceStats",
331:       "weka.core.neighboursearch.TreePerformanceStats",
332:       "weka.classifiers.lazy.LWL",
333:       "weka.attributeSelection.ReliefFAttributeEval",
334:       "weka.classifiers.functions.Logistic",
335:       "weka.classifiers.misc.SerializedClassifier",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.rules.OneR",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.filters.unsupervised.attribute.Remove",
340:       "weka.attributeSelection.GainRatioAttributeEval",
341:       "weka.attributeSelection.WrapperSubsetEval",
342:       "weka.filters.AllFilter",
343:       "weka.classifiers.MultipleClassifiersCombiner",
344:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
345:       "weka.classifiers.meta.Vote",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.classifiers.trees.j48.ClassifierTree",
348:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
349:       "weka.core.tokenizers.NGramTokenizer",
350:       "weka.classifiers.functions.SMO",
351:       "weka.core.AttributeStats",
352:       "weka.classifiers.rules.JRip",
353:       "weka.classifiers.meta.MultiClassClassifier",
354:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
355:       "weka.classifiers.functions.supportVector.Puk",
356:       "weka.core.matrix.Matrix",
357:       "weka.estimators.MahalanobisEstimator",
358:       "weka.estimators.NormalEstimator",
359:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
360:       "weka.classifiers.bayes.NaiveBayesUpdateable",
361:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
363:       "weka.classifiers.meta.Stacking",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.rules.PART",
368:       "weka.classifiers.trees.m5.M5Base",
369:       "weka.classifiers.rules.M5Rules",
370:       "weka.classifiers.functions.LinearRegression",
371:       "weka.core.Check",
372:       "weka.core.CheckGOE",
373:       "weka.classifiers.trees.RandomTree",
374:       "weka.core.Javadoc",
375:       "weka.core.TechnicalInformationHandlerJavadoc",
376:       "weka.classifiers.functions.SimpleLinearRegression",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.classifiers.trees.LMT",
380:       "weka.classifiers.rules.part.MakeDecList",
381:       "weka.core.FindWithCapabilities",
382:       "weka.core.SingleIndex",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor"
384:     );
385:   }
386: }

[MASTER] 17:02:47.262 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.m_stemmer = null;
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
StringReader stringReader0 = new StringReader("Headers match");
StringReader stringReader1 = new StringReader("Headers match");
CharBuffer.wrap((CharSequence) "Headers match");
char[] charArray0 = new char[9];
charArray0[0] = 'x';
charArray0[1] = 'x';
charArray0[2] = '&';
stringReader1.read(charArray0);
charArray0[3] = '\"';
charArray0[4] = '<';
charArray0[5] = 'q';
charArray0[6] = 'o';
charArray0[7] = 'R';
charArray0[8] = ']';
stringReader1.read(charArray0, 104, 1294);

[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_60_1574182967391/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_60_1574182967391/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.java]]
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 17:02:47.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 17:02:47.411 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_60_1574182967391/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 17:02:47 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_60_tmp__ESTest extends NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.42212525194659
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tokenizer");
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       naiveBayesMultinomialText0.setPeriodicPruning(12);
35:       naiveBayesMultinomialText0.getStopwords();
36:       Integer integer0 = new Integer(2083);
37:       byte[] byteArray0 = new byte[4];
38:       byteArray0[0] = (byte) (-69);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
40:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
41:       byteArray0[1] = (byte) (-76);
42:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
43:       Integer.compare(3160, 13);
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       hashMap0.put(integer0, linkedHashMap1);
46:       naiveBayesMultinomialText0.setMinWordFrequency(85.0);
47:       naiveBayesMultinomialText0.pruneDictionary();
48:       naiveBayesMultinomialText0.getLNorm();
49:       naiveBayesMultinomialText0.toString();
50:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
51:       String[] stringArray0 = new String[4];
52:       stringArray0[0] = "NaiveBayesMultinomialText: No model built yet.\n";
53:       stringArray0[3] = "tokenizer";
54:       stringArray0[2] = "NaiveBayesMultinomialText: No model built yet.\n";
55:       stringArray0[3] = "tokenizer";
56:       try { 
57:         naiveBayesMultinomialText0.setOptions(stringArray0);
58:         fail("Expecting exception: NullPointerException");
59:       
60:       } catch(NullPointerException e) {
61:          //
62:          // no message in exception (getMessage() returned null)
63:          //
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_60_1574182967391/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 17:02:47 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.attributeSelection.AttributeEvaluator",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.estimators.DiscreteEstimator",
140:       "weka.classifiers.misc.InputMappedClassifier",
141:       "weka.core.Version",
142:       "weka.filters.AllFilter",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.classifiers.Classifier",
151:       "weka.attributeSelection.OneRAttributeEval",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.core.WekaEnumeration",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.misc.SerializedClassifier",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.classifiers.MultipleClassifiersCombiner",
176:       "weka.core.tokenizers.NGramTokenizer",
177:       "weka.core.UnassignedDatasetException",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.estimators.Estimator",
183:       "weka.core.ProtectedProperties",
184:       "weka.classifiers.meta.Vote",
185:       "weka.core.StringLocator",
186:       "weka.core.AttributeStats",
187:       "weka.core.WeightedInstancesHandler",
188:       "weka.core.neighboursearch.NearestNeighbourSearch",
189:       "weka.core.TechnicalInformation$Field",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.classifiers.lazy.IBk",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.Attribute",
291:       "weka.core.ProtectedProperties",
292:       "weka.classifiers.lazy.KStar",
293:       "weka.core.DenseInstance",
294:       "weka.core.WekaEnumeration",
295:       "weka.core.Attribute$1",
296:       "weka.core.neighboursearch.CoverTree",
297:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.classifiers.trees.DecisionStump",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
304:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
305:       "weka.classifiers.meta.Bagging",
306:       "weka.classifiers.trees.REPTree",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.functions.GaussianProcesses",
309:       "weka.classifiers.functions.supportVector.Kernel",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
313:       "weka.classifiers.meta.AdaBoostM1",
314:       "weka.attributeSelection.OneRAttributeEval",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.DiscreteEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.core.converters.ArffLoader$ArffReader",
319:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.core.neighboursearch.PerformanceStats",
331:       "weka.core.neighboursearch.TreePerformanceStats",
332:       "weka.classifiers.lazy.LWL",
333:       "weka.attributeSelection.ReliefFAttributeEval",
334:       "weka.classifiers.functions.Logistic",
335:       "weka.classifiers.misc.SerializedClassifier",
336:       "weka.classifiers.rules.DecisionTable",
337:       "weka.classifiers.rules.OneR",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.filters.unsupervised.attribute.Remove",
340:       "weka.attributeSelection.GainRatioAttributeEval",
341:       "weka.attributeSelection.WrapperSubsetEval",
342:       "weka.filters.AllFilter",
343:       "weka.classifiers.MultipleClassifiersCombiner",
344:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
345:       "weka.classifiers.meta.Vote",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.classifiers.trees.j48.ClassifierTree",
348:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
349:       "weka.core.tokenizers.NGramTokenizer",
350:       "weka.classifiers.functions.SMO",
351:       "weka.core.AttributeStats",
352:       "weka.classifiers.rules.JRip",
353:       "weka.classifiers.meta.MultiClassClassifier",
354:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
355:       "weka.classifiers.functions.supportVector.Puk",
356:       "weka.core.matrix.Matrix",
357:       "weka.estimators.MahalanobisEstimator",
358:       "weka.estimators.NormalEstimator",
359:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
360:       "weka.classifiers.bayes.NaiveBayesUpdateable",
361:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
362:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
363:       "weka.classifiers.meta.Stacking",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.rules.PART",
368:       "weka.classifiers.trees.m5.M5Base",
369:       "weka.classifiers.rules.M5Rules",
370:       "weka.classifiers.functions.LinearRegression",
371:       "weka.core.Check",
372:       "weka.core.CheckGOE",
373:       "weka.classifiers.trees.RandomTree",
374:       "weka.core.Javadoc",
375:       "weka.core.TechnicalInformationHandlerJavadoc",
376:       "weka.classifiers.functions.SimpleLinearRegression",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.classifiers.trees.LMT",
380:       "weka.classifiers.rules.part.MakeDecList",
381:       "weka.core.FindWithCapabilities",
382:       "weka.core.SingleIndex",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor"
384:     );
385:   }
386: }

[MASTER] 17:02:47.411 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tokenizer");
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(12);
naiveBayesMultinomialText0.getStopwords();
Integer integer0 = new Integer(2083);
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte) (-69);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
byteArray0[1] = (byte) (-76);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
Integer.compare(3160, 13);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.setMinWordFrequency(85.0);
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.toString();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[4];
stringArray0[0] = "NaiveBayesMultinomialText: No model built yet.\n";
stringArray0[3] = "tokenizer";
stringArray0[2] = "NaiveBayesMultinomialText: No model built yet.\n";
stringArray0[3] = "tokenizer";
naiveBayesMultinomialText0.setOptions(stringArray0);

* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18043
* Connecting to master process on port 18045
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:19:27.309 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:19:27.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:19:27.315 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:19:27.321 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:19:30.933 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 17:19:33.221 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:19:33.223 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:19:33.225 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:19:33.676 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:19:34.404 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:19:34.405 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:19:36.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:19:36.514 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:19:36.514 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:19:36.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:19:36.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:19:36.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:19:36.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:19:36.516 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:19:36.516 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:19:36.584 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:19:36.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 17:19:40.737 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 259s and 128 generations, 127277 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 15 tests with total length 256
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:26:03.856 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 844s and 102 generations, 92220 statements, best individual has fitness: 16120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 1378
* Number of covered goals: 755
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 320
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 55
* Number of covered goals: 55
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 250
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 319
* Generated 137 tests with total length 2922
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
[MASTER] 17:41:49.349 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 17:41:55.237 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:41:55.326 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:41:55.446 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:41:55.446 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18041
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18045
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
[MASTER] 17:42:56.388 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:42:56.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:42:56.399 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:42:56.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Using seed 1026
* Starting evolution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Search finished after 843s and 88 generations, 115951 statements, best individual has fitness: 2800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Generated 61 tests with total length 1254
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 854s and 36 generations, 32333 statements, best individual has fitness: 2528.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 619
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 411
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 612
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 106
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 392
* Generated 185 tests with total length 3236
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 18:02:47.678 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6686% of time used, but only 48/185 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
[MASTER] 18:04:13.872 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18046
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:19:56.243 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:19:56.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:19:56.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:19:57.334 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:19:57.627 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:19:57.628 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 18:20:23.606 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;: Line 1061
[MASTER] 18:20:23.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 18:20:23.629 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 992: weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;:1061 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 18:20:23.632 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.getRevision()Ljava/lang/String;
[MASTER] 18:20:23.649 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.getRevision()Ljava/lang/String;
[MASTER] 18:20:23.651 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
[MASTER] 18:20:28.654 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 842s and 223 generations, 234874 statements, best individual has fitness: 12512.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 115
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 548
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Generated 77 tests with total length 1799
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 18:36:12.232 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:36:13.196 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
