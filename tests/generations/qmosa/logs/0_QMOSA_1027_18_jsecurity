* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.authc.UsernamePasswordToken
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 18440
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jsecurity.authc.UsernamePasswordToken
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/authc/UsernamePasswordToken.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Search finished after 840s and 2101 generations, 1984863 statements, best individual has fitness: 72.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 78%
* Total number of goals: 36
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 32 tests with total length 422
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'UsernamePasswordToken_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/18_jsecurity/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.web.DefaultWebSecurityManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 18442
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:35:00.202 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:35:00.227 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:35:00.227 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:35:00.522 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jsecurity.web.DefaultWebSecurityManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/web/DefaultWebSecurityManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 20:35:02.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:35:02.376 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 308s and 141 generations, 133789 statements, best individual has fitness: 912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 97
* Number of covered goals: 76
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 67
* Number of covered goals: 48
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 162
* Number of covered goals: 129
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 29
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 70%
* Total number of goals: 67
* Number of covered goals: 47
* Generated 38 tests with total length 841
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 35%
* Compiling and checking tests
[MASTER] 20:40:24.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 20:40:24.920 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte) (-1);
byteArray0[2] = (byte)29;
byteArray0[3] = (byte)48;
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getProtocol();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper0);
servletRequestWrapper4.getProtocol();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper0);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper3);
DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper1, servletResponseWrapper0);
Boolean boolean0 = new Boolean("http mode - enabling ServletContainerSessionManager (Http Sessions)");
ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper3);
LinkedHashSet<Realm> linkedHashSet0 = new LinkedHashSet<Realm>();

[MASTER] 20:40:32.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 20:40:32.755 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getProtocol();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper4);
servletRequestWrapper2.getProtocol();
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper1);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper2);
DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper6, servletResponseWrapper1);
boolean boolean0 = new Boolean("org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper5);
LinkedHashSet<Realm> linkedHashSet0 = new LinkedHashSet<Realm>();
assertTrue(linkedHashSet0.isEmpty());


[MASTER] 20:40:33.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 20:40:33.839 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getProtocol();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper4);
servletRequestWrapper2.getProtocol();
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper1);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper2);
DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper6, servletResponseWrapper1);
Boolean boolean0 = new Boolean("org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper5);
LinkedHashSet<Realm> linkedHashSet0 = new LinkedHashSet<Realm>();
defaultWebSecurityManager1.createSubject((ServletRequest) servletRequestWrapper5, (ServletResponse) servletResponseWrapper3);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'DefaultWebSecurityManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/18_jsecurity/evosuite-tests
* Done!

* Computation finished
