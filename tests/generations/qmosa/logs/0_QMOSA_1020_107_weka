* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21263
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:43:59.908 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:43:59.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:43:59.914 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:44:00.837 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:44:01.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:44:01.073 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 136
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 158
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 161
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 164
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 167
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 170
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 173
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 176
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 179
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 182
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 185
[MASTER] 21:44:03.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 1075
[MASTER] 21:44:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: root-Branch
[MASTER] 21:44:03.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.<init>()V
[MASTER] 21:44:03.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.<init>()V
[MASTER] 21:44:03.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.<init>()V: root-Branch in context: weka.classifiers.rules.JRip:<init>()V
[MASTER] 21:44:20.350 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: Line 491
[MASTER] 21:44:20.359 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch
[MASTER] 21:44:20.389 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 194: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:491 - ReplaceConstant - The minimum total weight of the instances in a rule. -> 
[MASTER] 21:44:20.408 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 21:44:20.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 21:44:20.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 21:44:20.423 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:minNoTipText()Ljava/lang/String;
[MASTER] 21:46:30.775 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 21:48:58.763 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 842s and 234 generations, 252423 statements, best individual has fitness: 12528.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 254
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 563
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 68 tests with total length 1627
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 22:01:23.820 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:01:23.937 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:01:24.036 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:01:24.036 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21267
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:17:13.438 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:17:13.459 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:17:13.459 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:17:13.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 22:17:15.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 22:17:32.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:17:32.809 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 295s and 128 generations, 120302 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 502
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21265
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:39:04.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:39:04.998 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:39:05.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:39:05.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:39:05.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:39:05.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 22:42:01.072 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 22:47:44.740 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 841s and 151 generations, 162049 statements, best individual has fitness: 5256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 370
* Number of covered goals: 259
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 713
* Number of covered goals: 425
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Generated 79 tests with total length 1818
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 22:57:00.817 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:57:01.218 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:57:05.173 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 22:57:05.175 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
FileSystemHandling.shouldAllThrowIOExceptions();
Instances instances0 = new Instances("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", arrayList0, 9);
Instances instances1 = new Instances("@relation", arrayList0, 62);
Attribute attribute0 = new Attribute("@relation", instances0);
ArrayList<String> arrayList1 = new ArrayList<String>();
arrayList1.add("numeric");
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1);
String[] stringArray0 = new String[4];
stringArray0[0] = "@data";
stringArray0[1] = "@attribute";
stringArray0[2] = "@relation";
stringArray0[3] = "@attribute";
Instances.test(stringArray0);
instances1.add((Instance) binarySparseInstance0);
FileSystemHandling.shouldAllThrowIOExceptions();
Comparator<Attribute> comparator0 = (Comparator<Attribute>) mock(Comparator.class, new ViolatedAssumptionAnswer());
instances1.add((Instance) binarySparseInstance0);
AbstractInstance.s_numericAfterDecimalPoint = 44;
arrayList1.remove((Object) attribute0);
attribute0.copy("@relation");
arrayList0.add(attribute0);
instances1.retainAll(arrayList0);
instances0.enumerateAttributes();
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances1);

[MASTER] 22:57:14.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 22:57:14.446 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
discretize0.setFindNumBins(false);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("SU$M<P1o", arrayList0, 62);
Attribute attribute0 = new Attribute("SU$M<P1o", instances0, 62);
ArrayList<String> arrayList1 = new ArrayList<String>();
arrayList1.add("TtHJ3PP~}GBg");
Attribute attribute1 = new Attribute("Y:^[.<h99Kt", arrayList1);
arrayList0.add(attribute0);
Instances instances1 = new Instances(instances0, (-1908874351));
instances1.retainAll(arrayList1);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21263
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21267
* Connecting to master process on port 21266
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21264
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
[MASTER] 22:57:36.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:57:36.885 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:57:36.886 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:57:36.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
[MASTER] 22:57:37.480 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:57:37.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:57:37.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:57:37.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:57:37.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:57:37.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:57:45.004 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:57:45.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:57:45.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:57:45.525 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:57:46.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:57:46.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:57:47.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:57:47.704 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:57:47.704 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:57:47.704 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:57:47.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:57:47.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:57:47.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:57:47.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:57:47.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 22:57:47.751 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 22:57:47.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 22:57:52.223 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 22:59:30.704 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 22:59:32.935 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:59:32.938 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 22:59:33.669 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 843s and 86 generations, 118220 statements, best individual has fitness: 2792.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Search finished after 841s and 142 generations, 141779 statements, best individual has fitness: 2824.0
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Generated 58 tests with total length 1300
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 338
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 194
* Number of covered goals: 123
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 476
* Number of covered goals: 406
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 194
* Number of covered goals: 122
* Generated 66 tests with total length 1366
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 852s and 23 generations, 28311 statements, best individual has fitness: 3632.0
* Search finished after 843s and 69 generations, 65346 statements, best individual has fitness: 14824.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 821
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 361
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 266
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 358
* Generated 112 tests with total length 2723
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 647
* Number of covered goals: 597
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 389
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 678
* Number of covered goals: 579
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 244
* Number of covered goals: 98
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 124
* Number of covered goals: 114
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 124
* Number of covered goals: 114
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 441
* Number of covered goals: 356
* Generated 158 tests with total length 3641
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
[MASTER] 23:14:44.288 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1574118884254/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1574118884254/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:44.288 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.288 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.291 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:14:44.291 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1574118884254/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.0931471805599453
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
29:       naiveBayesMultinomialText0.getUseStopList();
30:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
31:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
32:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
33:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
34:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_8_1574118884254/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:44.291 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.getUseStopList();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1574118884481/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1574118884481/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:14:44.508 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:14:44.509 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:14:44.509 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1574118884481/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.stemmers.NullStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_13_tmp__ESTest extends NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.557702411245053
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
33:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
34:       naiveBayesMultinomialText0.reset();
35:       naiveBayesMultinomialText0.m_lnorm = 1.0;
36:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
37:       naiveBayesMultinomialText0.useStopListTipText();
38:       NullStemmer nullStemmer0 = new NullStemmer();
39:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
40:       naiveBayesMultinomialText0.tokenizerTipText();
41:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
42:       naiveBayesMultinomialText0.normTipText();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
44:       String[] stringArray0 = new String[1];
45:       try { 
46:         naiveBayesMultinomialText0.setOptions(stringArray0);
47:         fail("Expecting exception: NullPointerException");
48:       
49:       } catch(NullPointerException e) {
50:          //
51:          // no message in exception (getMessage() returned null)
52:          //
53:       }
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_13_1574118884481/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:44.510 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText0.m_lnorm = 1.0;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.useStopListTipText();
NullStemmer nullStemmer0 = new NullStemmer();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.tokenizerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[1];
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1574118884728/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1574118884728/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 23:14:44.751 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 23:14:44.752 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 23:14:44.752 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 23:14:44.752 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 23:14:44.752 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 23:14:44.752 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1574118884728/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Stopwords;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_22_tmp__ESTest extends NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.75239799529378
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       Stopwords stopwords0 = new Stopwords();
34:       naiveBayesMultinomialText0.setPeriodicPruning(4);
35:       Integer integer0 = new Integer(31);
36:       Integer.sum(4, 31);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       linkedHashMap0.put((Integer) null, linkedHashMap2);
39:       linkedHashMap0.put(integer0, linkedHashMap2);
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       linkedHashMap0.putAll(naiveBayesMultinomialText0.m_probOfWordGivenClass);
44:       naiveBayesMultinomialText0.stemmerTipText();
45:       naiveBayesMultinomialText0.stemmerTipText();
46:       naiveBayesMultinomialText0.periodicPruningTipText();
47:       naiveBayesMultinomialText0.useStopListTipText();
48:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
49:       naiveBayesMultinomialText0.lowercaseTokensTipText();
50:       naiveBayesMultinomialText1.m_lowercaseTokens = false;
51:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
52:       naiveBayesMultinomialText1.tokenizerTipText();
53:       naiveBayesMultinomialText0.stopwordsTipText();
54:       System.setCurrentTimeMillis(35);
55:       naiveBayesMultinomialText0.LNormTipText();
56:       assertEquals(4, naiveBayesMultinomialText0.getPeriodicPruning());
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_22_1574118884728/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:44.753 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Stopwords stopwords0 = new Stopwords();
naiveBayesMultinomialText0.setPeriodicPruning(4);
Integer integer0 = new Integer(31);
Integer.sum(4, 31);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap2);
linkedHashMap0.put(integer0, linkedHashMap2);
naiveBayesMultinomialText0.pruneDictionary();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.putAll(naiveBayesMultinomialText0.m_probOfWordGivenClass);
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.useStopListTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText1.m_lowercaseTokens = false;
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.stopwordsTipText();
System.setCurrentTimeMillis(35);
naiveBayesMultinomialText0.LNormTipText();
assertEquals(4, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1574118884801/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1574118884801/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 23:14:44.821 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 23:14:44.822 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1574118884801/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Stopwords;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.7766234846545668
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       Stopwords stopwords0 = new Stopwords();
33:       int int0 = 1;
34:       naiveBayesMultinomialText0.setPeriodicPruning(1);
35:       Integer integer0 = new Integer(31);
36:       Integer.sum(1, 31);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       linkedHashMap0.put((Integer) null, linkedHashMap2);
39:       linkedHashMap0.put(integer0, linkedHashMap2);
40:       // Undeclared exception!
41:       try { 
42:         naiveBayesMultinomialText0.pruneDictionary();
43:         fail("Expecting exception: NullPointerException");
44:       
45:       } catch(NullPointerException e) {
46:          //
47:          // no message in exception (getMessage() returned null)
48:          //
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_25_1574118884801/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:44.822 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Stopwords stopwords0 = new Stopwords();
int int0 = 1;
naiveBayesMultinomialText0.setPeriodicPruning(1);
Integer integer0 = new Integer(31);
Integer.sum(1, 31);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap2);
linkedHashMap0.put(integer0, linkedHashMap2);
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1574118885236/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1574118885236/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 23:14:45.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 23:14:45.259 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 23:14:45.259 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 23:14:45.259 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 23:14:45.259 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1574118885236/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.rules.PART;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.Stopwords;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.8488892796682075
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
36:       Stopwords stopwords0 = new Stopwords();
37:       naiveBayesMultinomialText0.setPeriodicPruning(4);
38:       Integer integer0 = new Integer(31);
39:       Integer.sum(4, 31);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       linkedHashMap0.put((Integer) null, linkedHashMap2);
42:       linkedHashMap0.put(integer0, linkedHashMap2);
43:       naiveBayesMultinomialText0.pruneDictionary();
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
46:       linkedHashMap0.putAll(naiveBayesMultinomialText0.m_probOfWordGivenClass);
47:       naiveBayesMultinomialText0.stemmerTipText();
48:       naiveBayesMultinomialText0.stemmerTipText();
49:       naiveBayesMultinomialText0.periodicPruningTipText();
50:       naiveBayesMultinomialText0.useStopListTipText();
51:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
52:       naiveBayesMultinomialText0.lowercaseTokensTipText();
53:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
54:       naiveBayesMultinomialText1.tokenizerTipText();
55:       PART pART0 = new PART();
56:       Capabilities capabilities0 = pART0.getCapabilities();
57:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
58:       Instances instances0 = testInstances0.generate();
59:       naiveBayesMultinomialText0.buildClassifier(instances0);
60:       naiveBayesMultinomialText0.toString();
61:       assertEquals(4, naiveBayesMultinomialText0.getPeriodicPruning());
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_40_1574118885236/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:45.260 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Stopwords stopwords0 = new Stopwords();
naiveBayesMultinomialText0.setPeriodicPruning(4);
Integer integer0 = new Integer(31);
Integer.sum(4, 31);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap2);
linkedHashMap0.put(integer0, linkedHashMap2);
naiveBayesMultinomialText0.pruneDictionary();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.putAll(naiveBayesMultinomialText0.m_probOfWordGivenClass);
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.useStopListTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText1.tokenizerTipText();
PART pART0 = new PART();
Capabilities capabilities0 = pART0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.toString();
assertEquals(4, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 23:14:45.798 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_61_1574118885768/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_61_1574118885768/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:45.798 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.798 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.799 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 23:14:45.799 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 23:14:45.800 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_61_1574118885768/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.Instances;
22: import weka.core.SparseInstance;
23: import weka.core.TestInstances;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_61_tmp__ESTest extends NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=3.5011247753865944
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
36:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
37:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
38:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
39:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
40:       naiveBayesMultinomialText1.setLNorm(4);
41:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
42:       naiveBayesMultinomialText1.setOptions((String[]) null);
43:       Random.setNextRandom((-850));
44:       TestInstances testInstances0 = new TestInstances();
45:       Instances instances0 = testInstances0.generate();
46:       naiveBayesMultinomialText1.buildClassifier(instances0);
47:       naiveBayesMultinomialText0.stopwordsTipText();
48:       naiveBayesMultinomialText1.getOptions();
49:       double[] doubleArray0 = new double[1];
50:       int[] intArray0 = new int[3];
51:       testInstances0.setNoClass(false);
52:       intArray0[0] = (-6);
53:       intArray0[1] = 4;
54:       File file0 = naiveBayesMultinomialText0.getStopwords();
55:       EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles");
56:       FileSystemHandling.appendLineToFile(evoSuiteFile1, "weka.classifiers.rules.M5Rules");
57:       MockFile mockFile0 = new MockFile(file0, " ");
58:       naiveBayesMultinomialText1.setStopwords(mockFile0);
59:       FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
60:       intArray0[2] = (-850);
61:       SparseInstance sparseInstance0 = new SparseInstance(8.0, doubleArray0, intArray0, (-1));
62:       try { 
63:         naiveBayesMultinomialText1.classifyInstance(sparseInstance0);
64:         fail("Expecting exception: RuntimeException");
65:       
66:       } catch(RuntimeException e) {
67:          //
68:          // DenseInstance doesn't have access to a dataset!
69:          //
70:          verifyException("weka.core.AbstractInstance", e);
71:       }
72:   }
73: }
RegularFileObject[/tmp/EvoSuite_61_1574118885768/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:45.801 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setLNorm(4);
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
naiveBayesMultinomialText1.setOptions((String[]) null);
Random.setNextRandom((-850));
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText1.buildClassifier(instances0);
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText1.getOptions();
double[] doubleArray0 = new double[1];
int[] intArray0 = new int[3];
testInstances0.setNoClass(false);
intArray0[0] = (-6);
intArray0[1] = 4;
File file0 = naiveBayesMultinomialText0.getStopwords();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles");
FileSystemHandling.appendLineToFile(evoSuiteFile1, "weka.classifiers.rules.M5Rules");
MockFile mockFile0 = new MockFile(file0, " ");
naiveBayesMultinomialText1.setStopwords(mockFile0);
FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
intArray0[2] = (-850);
SparseInstance sparseInstance0 = new SparseInstance(8.0, doubleArray0, intArray0, (-1));
naiveBayesMultinomialText1.classifyInstance(sparseInstance0);

[MASTER] 23:14:45.861 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_63_1574118885828/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_63_1574118885828/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:45.861 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.861 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.862 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 23:14:45.862 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 23:14:45.862 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_63_1574118885828/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.LinkedHashMap;
13: import java.util.Locale;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.Random;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
22: import weka.core.Instances;
23: import weka.core.TestInstances;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_63_tmp__ESTest extends NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=3.5021827451289664
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
37:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
38:       naiveBayesMultinomialText0.getMinWordFrequency();
39:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
40:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
41:       naiveBayesMultinomialText2.setPeriodicPruning(4);
42:       naiveBayesMultinomialText2.setLNorm(2663.6994);
43:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
44:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
45:       naiveBayesMultinomialText2.setOptions((String[]) null);
46:       naiveBayesMultinomialText1.m_stopwordsFile = null;
47:       byte[] byteArray0 = new byte[4];
48:       byteArray0[0] = (byte) (-103);
49:       byteArray0[1] = (byte)93;
50:       byteArray0[2] = (byte)72;
51:       byteArray0[3] = (byte)24;
52:       FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
53:       Random.setNextRandom((-850));
54:       TestInstances testInstances0 = new TestInstances();
55:       Instances instances0 = testInstances0.generate();
56:       naiveBayesMultinomialText2.buildClassifier(instances0);
57:       naiveBayesMultinomialText1.stopwordsTipText();
58:       naiveBayesMultinomialText2.getOptions();
59:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
60:       // Undeclared exception!
61:       try { 
62:         naiveBayesMultinomialText1.getOptions();
63:         fail("Expecting exception: NullPointerException");
64:       
65:       } catch(NullPointerException e) {
66:          //
67:          // no message in exception (getMessage() returned null)
68:          //
69:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
70:       }
71:   }
72: }
RegularFileObject[/tmp/EvoSuite_63_1574118885828/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:45.862 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
naiveBayesMultinomialText0.getMinWordFrequency();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.setPeriodicPruning(4);
naiveBayesMultinomialText2.setLNorm(2663.6994);
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
naiveBayesMultinomialText2.setOptions((String[]) null);
naiveBayesMultinomialText1.m_stopwordsFile = null;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte) (-103);
byteArray0[1] = (byte)93;
byteArray0[2] = (byte)72;
byteArray0[3] = (byte)24;
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
Random.setNextRandom((-850));
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText2.buildClassifier(instances0);
naiveBayesMultinomialText1.stopwordsTipText();
naiveBayesMultinomialText2.getOptions();
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
naiveBayesMultinomialText1.getOptions();

[MASTER] 23:14:45.887 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_64_1574118885863/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_64_1574118885863/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:45.887 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.887 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.887 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 71
[MASTER] 23:14:45.888 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 71
[MASTER] 23:14:45.888 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 72
[MASTER] 23:14:45.888 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_64_1574118885863/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.LinkedHashMap;
14: import java.util.LinkedList;
15: import java.util.List;
16: import java.util.Locale;
17: import java.util.Map;
18: import java.util.Vector;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.evosuite.runtime.Random;
22: import org.junit.runner.RunWith;
23: import weka.classifiers.bayes.NaiveBayesMultinomialText;
24: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
25: import weka.core.FindWithCapabilities;
26: import weka.core.Instances;
27: import weka.core.TestInstances;
28: import weka.core.tokenizers.AlphabeticTokenizer;
29: import weka.core.tokenizers.Tokenizer;
30: 
31: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
32: public class NaiveBayesMultinomialText_64_tmp__ESTest extends NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
33: 
34:   /**
35:   //Test case number: 0
36:   /*Coverage entropy=3.4216604737735565
37:   */
38:   @Test(timeout = 4000)
39:   public void test0()  throws Throwable  {
40:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
41:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
42:       String[] stringArray0 = TestInstances.DEFAULT_WORDS;
43:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel1 = new PrecomputedKernelMatrixKernel();
44:       AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
45:       naiveBayesMultinomialText0.m_tokenizer = (Tokenizer) alphabeticTokenizer0;
46:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel2 = new PrecomputedKernelMatrixKernel();
47:       String[] stringArray1 = naiveBayesMultinomialText0.getOptions();
48:       naiveBayesMultinomialText0.setOptions(stringArray1);
49:       AlphabeticTokenizer.main(stringArray1);
50:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
51:       naiveBayesMultinomialText1.setPeriodicPruning(4);
52:       naiveBayesMultinomialText0.setLNorm(2663.6994);
53:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
54:       naiveBayesMultinomialText0.setOptions((String[]) null);
55:       Random.setNextRandom(4);
56:       arrayList0.add((Locale.LanguageRange) null);
57:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
58:       FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
59:       Vector<String> vector0 = findWithCapabilities0.find();
60:       Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) vector0, locale_FilteringMode0);
61:       ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
62:       Locale.lookupTag(arrayList0, vector0);
63:       Locale locale0 = Locale.KOREA;
64:       Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) vector0);
65:       locale0.getUnicodeLocaleKeys();
66:       LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
67:       ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
68:       TestInstances testInstances0 = new TestInstances();
69:       Instances instances0 = testInstances0.generate();
70:       naiveBayesMultinomialText1.buildClassifier(instances0);
71:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
72:       naiveBayesMultinomialText1.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
73:       // Undeclared exception!
74:       try { 
75:         naiveBayesMultinomialText1.toString();
76:         fail("Expecting exception: NullPointerException");
77:       
78:       } catch(NullPointerException e) {
79:          //
80:          // no message in exception (getMessage() returned null)
81:          //
82:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
83:       }
84:   }
85: }
RegularFileObject[/tmp/EvoSuite_64_1574118885863/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:45.889 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = TestInstances.DEFAULT_WORDS;
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel1 = new PrecomputedKernelMatrixKernel();
AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
naiveBayesMultinomialText0.m_tokenizer = (Tokenizer) alphabeticTokenizer0;
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel2 = new PrecomputedKernelMatrixKernel();
String[] stringArray1 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray1);
AlphabeticTokenizer.main(stringArray1);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setPeriodicPruning(4);
naiveBayesMultinomialText0.setLNorm(2663.6994);
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
naiveBayesMultinomialText0.setOptions((String[]) null);
Random.setNextRandom(4);
arrayList0.add((Locale.LanguageRange) null);
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
Vector<String> vector0 = findWithCapabilities0.find();
Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) vector0, locale_FilteringMode0);
ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
Locale.lookupTag(arrayList0, vector0);
Locale locale0 = Locale.KOREA;
Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) vector0);
locale0.getUnicodeLocaleKeys();
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText1.buildClassifier(instances0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText1.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText1.toString();

[MASTER] 23:14:45.904 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_65_1574118885889/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_65_1574118885889/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.java]]
[MASTER] 23:14:45.904 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.904 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:14:45.904 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:45.904 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:14:45.905 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_65_1574118885889/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 23:14:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.Random;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_65_tmp__ESTest extends NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.3423686403508746
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
32:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
33:       EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
34:       FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
35:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
36:       naiveBayesMultinomialText1.setLNorm((-7));
37:       FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
38:       naiveBayesMultinomialText1.setOptions((String[]) null);
39:       Random.setNextRandom((-850));
40:       naiveBayesMultinomialText0.stopwordsTipText();
41:       naiveBayesMultinomialText1.getOptions();
42:       double[] doubleArray0 = new double[1];
43:       int[] intArray0 = new int[3];
44:       intArray0[0] = (-6);
45:       intArray0[1] = (-7);
46:       naiveBayesMultinomialText0.getStopwords();
47:       EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/wekafiles");
48:       FileSystemHandling.appendLineToFile(evoSuiteFile2, "weka.classifiers.rules.M5Rules");
49:       FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
50:       intArray0[2] = (-850);
51:       double double0 = naiveBayesMultinomialText1.getLNorm();
52:       assertEquals((-7.0), double0, 0.01);
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_65_1574118885889/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 23:14:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.classifiers.rules.part.C45PruneableDecList",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.trees.j48.C45ModelSelection",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.classifiers.trees.m5.RuleNode",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.classifiers.rules.part.ClassifierDecList",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.filters.unsupervised.attribute.RemoveUseless",
144:       "weka.core.Tag",
145:       "weka.classifiers.trees.j48.BinC45ModelSelection",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.ClassDiscovery",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.classifiers.rules.part.MakeDecList",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.rules.M5Rules",
187:       "weka.core.Instances",
188:       "weka.classifiers.rules.part.PruneableDecList",
189:       "weka.core.UnassignedClassException",
190:       "weka.classifiers.rules.ZeroR",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.AbstractInstance",
216:       "weka.core.SparseInstance",
217:       "weka.core.BinarySparseInstance",
218:       "weka.core.Attribute",
219:       "weka.core.ProtectedProperties",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.RevisionUtils",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Option",
225:       "weka.core.Instances",
226:       "weka.classifiers.bayes.NaiveBayes",
227:       "weka.classifiers.CostMatrix",
228:       "weka.core.Capabilities",
229:       "org.pentaho.packageManagement.PackageManager",
230:       "org.pentaho.packageManagement.DefaultPackageManager",
231:       "weka.core.Version",
232:       "weka.core.Environment",
233:       "weka.core.WekaPackageManager",
234:       "weka.core.SerializedObject",
235:       "weka.core.DenseInstance",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.core.Stopwords",
242:       "weka.core.neighboursearch.BallTree",
243:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
244:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
245:       "weka.core.neighboursearch.balltrees.BallSplitter",
246:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
248:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
249:       "weka.core.TestInstances",
250:       "weka.attributeSelection.ASEvaluation",
251:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
252:       "weka.attributeSelection.PrincipalComponents",
253:       "weka.filters.Filter",
254:       "weka.filters.SimpleFilter",
255:       "weka.filters.SimpleStreamFilter",
256:       "weka.filters.MultiFilter",
257:       "weka.filters.AllFilter",
258:       "weka.core.tokenizers.NGramTokenizer",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.stemmers.LovinsStemmer",
261:       "weka.classifiers.trees.J48",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.neighboursearch.LinearNNSearch",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.core.Tag",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.functions.supportVector.Kernel",
278:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.SimpleLinearRegression",
282:       "weka.core.stemmers.SnowballStemmer",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.net.BIFReader",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.core.ClassDiscovery",
296:       "weka.attributeSelection.CorrelationAttributeEval",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.trees.m5.M5Base",
302:       "weka.classifiers.rules.M5Rules",
303:       "weka.classifiers.meta.MultiClassClassifier",
304:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
305:       "weka.classifiers.functions.Logistic",
306:       "weka.classifiers.functions.MultilayerPerceptron",
307:       "weka.core.FastVector",
308:       "weka.filters.unsupervised.attribute.NominalToBinary",
309:       "weka.classifiers.functions.neural.SigmoidUnit",
310:       "weka.classifiers.functions.neural.LinearUnit",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.lazy.LWL",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.functions.SMO",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.functions.VotedPerceptron",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
324:       "weka.classifiers.rules.DecisionTable",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.attributeSelection.GainRatioAttributeEval",
328:       "weka.classifiers.IteratedSingleClassifierEnhancer",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.Check",
336:       "weka.core.CheckOptionHandler",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.trees.REPTree",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.core.CheckGOE",
347:       "weka.classifiers.bayes.NaiveBayesUpdateable",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.core.ChebyshevDistance",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.core.stemmers.Stemming",
353:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.AdaBoostM1",
355:       "weka.attributeSelection.WrapperSubsetEval"
356:     );
357:   }
358: }

[MASTER] 23:14:45.905 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setLNorm((-7));
FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
naiveBayesMultinomialText1.setOptions((String[]) null);
Random.setNextRandom((-850));
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText1.getOptions();
double[] doubleArray0 = new double[1];
int[] intArray0 = new int[3];
intArray0[0] = (-6);
intArray0[1] = (-7);
naiveBayesMultinomialText0.getStopwords();
EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/wekafiles");
FileSystemHandling.appendLineToFile(evoSuiteFile2, "weka.classifiers.rules.M5Rules");
FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
intArray0[2] = (-850);
double double0 = naiveBayesMultinomialText1.getLNorm();
assertEquals((-7.0), double0, 0.01);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 23:17:43.203 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.69284375% of time used, but only 41/158 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
[MASTER] 23:19:16.711 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 23:19:59.097 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 23:20:05.316 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:20:05.435 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:20:05.601 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:20:05.601 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 23:20:06.418 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 23:20:06.744 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
