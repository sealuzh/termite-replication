* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.authc.UsernamePasswordToken
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 2866
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jsecurity.authc.UsernamePasswordToken
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/authc/UsernamePasswordToken.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Search finished after 840s and 2061 generations, 1453544 statements, best individual has fitness: 72.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 78%
* Total number of goals: 36
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 31 tests with total length 248
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'UsernamePasswordToken_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/18_jsecurity/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.web.DefaultWebSecurityManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 2866
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:21:24.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:21:24.064 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:21:24.067 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:21:24.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jsecurity.web.DefaultWebSecurityManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/web/DefaultWebSecurityManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 23:24:12.179 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:24:12.179 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 314s and 141 generations, 108444 statements, best individual has fitness: 888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 97
* Number of covered goals: 77
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 67
* Number of covered goals: 49
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 162
* Number of covered goals: 129
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 29
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 67
* Number of covered goals: 48
* Generated 36 tests with total length 556
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
[MASTER] 23:26:51.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:51.356 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteAddr();
doReturn(0).when(servletRequest0).getServerPort();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper4.getRemoteAddr();
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
servletRequestWrapper3.getServerPort();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
servletResponseWrapper3.setContentLength((-1105));
servletRequestWrapper5.setCharacterEncoding("rYap ");
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper7);
System.setCurrentTimeMillis(2576L);
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper5, servletResponseWrapper3);

[MASTER] 23:26:51.705 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:51.706 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteAddr();
doReturn(0).when(servletRequest0).getServerPort();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper4.getRemoteAddr();
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
servletRequestWrapper3.getServerPort();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
servletResponseWrapper3.setContentLength((-1105));
servletRequestWrapper5.setCharacterEncoding("rYap ");
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper7);
System.setCurrentTimeMillis(1L);
ServletRequestWrapper servletRequestWrapper11 = new ServletRequestWrapper(servletRequestWrapper8);
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper11, servletResponseWrapper1);

[MASTER] 23:26:53.308 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:53.308 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("jsecurity");
simpleAccountRealm0.getCacheManager();
defaultWebSecurityManager0.setCacheManager((CacheManager) null);
defaultWebSecurityManager0.setRememberMeCookiePath("^T9=");
defaultWebSecurityManager0.getSubject();
SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm("org.jsecurity.web.DefaultWebSecurityManager_PRINCIPALS_SESSION_KEY");
SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm();
DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager(simpleAccountRealm2);
defaultWebSecurityManager1.setSessionIdCookiePath("Element for [");

[MASTER] 23:26:53.834 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:53.834 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
defaultWebSecurityManager0.getSubject();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteAddr();
doReturn(0).when(servletRequest0).getServerPort();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper4.getRemoteAddr();
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper3.getServerPort();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jsecurity");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
Boolean boolean0 = Boolean.FALSE;
DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
boolean boolean1 = defaultWebSecurityManager1.isHttpSessionMode();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
boolean boolean2 = defaultWebSecurityManager0.isAuthenticated((Session) null, servletRequestWrapper0, servletResponseWrapper0);
assertFalse(boolean2 == boolean1);
assertFalse(boolean2);


[MASTER] 23:26:54.567 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:54.571 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteAddr();
doReturn(0).when(servletRequest0).getServerPort();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper4.getRemoteAddr();
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
servletRequestWrapper3.getServerPort();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
servletResponseWrapper2.setContentLength((-1105));
servletRequestWrapper5.setCharacterEncoding("rYap ");
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper7);
System.setCurrentTimeMillis(2576L);
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper5, servletResponseWrapper2);
assertTrue(defaultWebSecurityManager0.isHttpSessionMode());


[MASTER] 23:26:54.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:54.839 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
defaultWebSecurityManager0.getSubject();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteAddr();
doReturn(0).when(servletRequest0).getServerPort();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper4.getRemoteAddr();
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
servletRequestWrapper3.getServerPort();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
servletResponseWrapper3.setContentLength((-1105));
servletRequestWrapper5.setCharacterEncoding("rYap ");
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper7);
AllPermission allPermission0 = new AllPermission();
AllPermission allPermission1 = new AllPermission();
boolean boolean0 = defaultWebSecurityManager0.isAuthenticated((Session) null);
assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
assertFalse(boolean0);


[MASTER] 23:26:57.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 23:26:57.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
Subject subject0 = defaultWebSecurityManager0.getSubject();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteAddr();
doReturn(0).when(servletRequest0).getServerPort();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
servletRequestWrapper4.getRemoteAddr();
ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper5);
servletRequestWrapper3.getServerPort();
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
servletResponseWrapper2.setContentLength((-1105));
servletRequestWrapper5.setCharacterEncoding("rYap ");
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper7);
System.setCurrentTimeMillis(2576L);
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper5, servletResponseWrapper2);
assertTrue(defaultWebSecurityManager0.isHttpSessionMode());


* Writing JUnit test case 'DefaultWebSecurityManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/18_jsecurity/evosuite-tests
* Done!

* Computation finished
