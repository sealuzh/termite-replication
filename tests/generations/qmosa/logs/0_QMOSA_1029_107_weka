* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14425
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14422
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14423
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
[MASTER] 00:46:34.876 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:46:34.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:46:34.890 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:46:34.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:46:35.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:46:35.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
* Using seed 1029
* Starting evolution
[MASTER] 00:46:36.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:46:36.294 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:46:36.295 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 00:46:37.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:46:38.006 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:46:38.007 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 00:46:42.664 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 00:52:19.996 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 00:53:20.266 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 842s and 202 generations, 187778 statements, best individual has fitness: 4160.0
* Search finished after 843s and 99 generations, 126182 statements, best individual has fitness: 2752.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 242
* Number of covered goals: 143
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 531
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 242
* Number of covered goals: 143
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Generated 87 tests with total length 1748
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Generated 66 tests with total length 1216
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 843s and 231 generations, 230238 statements, best individual has fitness: 12616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 260
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 993
* Number of covered goals: 541
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 68 tests with total length 1639
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 82%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 01:04:10.959 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:04:11.295 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:04:20.333 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:04:20.335 [logback-1] WARN  JUnitAnalyzer - Failing test:
 AllFilter allFilter0 = new AllFilter();
AllFilter allFilter1 = new AllFilter();
String[] stringArray0 = new String[9];
stringArray0[0] = "\nGeneral options:\n\n-h\n\tGet help on available options.\n\t(se -b -h for help on batch mode.)\n-i <file>\n\tThe name of the file containing input instances.\n\tIf not supplied then instances will be read from stdin.\n-o <file>\n\tThe name of the file output instances will be written to.\n\tIf not supplied then instances will be written to stdout.\n-c <class index>\n\tThe number of the attribute to use as the class.\n\t\"first\" and \"last\" abe also valid entries.\n\tIf not supplied then no class is assigned.\n";
stringArray0[1] = "uW";
stringArray0[2] = "MISSING_VALUES";
stringArray0[3] = "MISSING_VALUES";
stringArray0[4] = "uW";
stringArray0[5] = ")79Uu7 ,w8";
Filter.runFilter(allFilter1, stringArray0);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MISSING_VALUES");
Discretize discretize0 = new Discretize("?m&b'L");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MISSING_VALUES");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("N%'IFzAe", arrayList0, 966);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute0 = new Attribute("\nGeneral options:\n\n-h\n\tGet help on available options.\n\t(se -b -h for help on batch mode.)\n-i <file>\n\tThe name of the file containing input instances.\n\tIf not supplied then instances will be read from stdin.\n-o <file>\n\tThe name of the file output instances will be written to.\n\tIf not supplied then instances will be written to stdout.\n-c <class index>\n\tThe number of the attribute to use as the class.\n\t\"first\" and \"last\" abe also valid entries.\n\tIf not supplied then no class is assigned.\n", instances0, protectedProperties0);
arrayList0.add(attribute0);
Instances instances1 = new Instances("&)@A 5wEi", arrayList0, 966);
discretize0.setInputFormat(instances1);

[MASTER] 01:04:27.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:04:27.616 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SystemInUtil.addInputLine("#~{0M_WD&");
ArrayList<String> arrayList0 = new ArrayList<String>();
arrayList0.add("#~{0M_WD&");
arrayList0.add("d{q7zQp<OXVsh");
Attribute attribute0 = new Attribute("\tSpecifies list of columns to Discretize. First and last are valid indexes.\n\t(default: first-last)", 594);
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
arrayList1.add(attribute0);
Instances instances0 = new Instances("General options:\n\n-h\n\tGet help on available options.\n\t(se -b -h for help on batch mode.)\n-i <file>\n\tThe name of the file containing input instances.\n\tIf not supplied then instances will be read from stdin.\n-o <file>\n\tThe name of the file output instances will be written to.\n\tIf not supplied then instances will be written to stdout.\n-c <class index>\n\tThe number of the attribute to use as the class.\n\t\"first\" and \"last\" are also valid entries.\n\tIf not supplied then no class is assigned.", arrayList1, 6);
MockRandom mockRandom0 = new MockRandom();
Attribute attribute1 = new Attribute("@end");
attribute1.copy("6|^+d#-qz22Sdr}D5");
Attribute attribute2 = new Attribute("_oANBzI3p<<?Zu.U`", instances0, 2159);
arrayList1.add(attribute2);
FileSystemHandling.shouldAllThrowIOExceptions();
Instances instances1 = new Instances("6|^+d#-qz22Sdr}D5", arrayList1, 1418);
Discretize discretize0 = new Discretize();
Discretize discretize1 = new Discretize();
discretize1.setInputFormat(instances1);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14423
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:04:43.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:04:43.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:04:43.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:04:43.575 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:04:43.872 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:04:43.873 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:04:45.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:04:45.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:04:45.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:04:45.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:04:45.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:04:45.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:04:45.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:04:45.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:04:45.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:04:45.305 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:04:45.316 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3618
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3620
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3621
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3622
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3625
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3626
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3627
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3628
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3629
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3630
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3631
[MASTER] 01:04:48.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3635
[MASTER] 01:04:48.507 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I39 Branch 355 IF_ICMPGE L3625 - false
[MASTER] 01:04:48.507 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - true
[MASTER] 01:04:48.507 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - false
[MASTER] 01:04:48.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10436: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3625 - ReplaceComparisonOperator >= -> -1
[MASTER] 01:04:48.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10449: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3628 - ReplaceComparisonOperator <= -> -1
[MASTER] 01:04:48.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10450: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3628 - ReplaceComparisonOperator <= -> ==
[MASTER] 01:04:48.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:NonEmptyString
[MASTER] 01:04:48.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;
[MASTER] 01:04:48.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;
[MASTER] 01:04:48.522 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I39 Branch 355 IF_ICMPGE L3625 - false in context: 
[MASTER] 01:04:48.523 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - true in context: 
[MASTER] 01:04:48.523 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - false in context: 
[MASTER] 01:04:48.845 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 01:05:04.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: Line 3133
[MASTER] 01:05:04.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: Line 3134
[MASTER] 01:05:04.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: Line 3136
[MASTER] 01:05:04.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: Line 3143
[MASTER] 01:05:04.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: Line 3144
[MASTER] 01:05:04.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: Line 3151
[MASTER] 01:05:04.923 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: I18 Branch 302 IF_ICMPGE L3136 - true
[MASTER] 01:05:04.923 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: I70 Branch 304 IF_ICMPGE L3144 - true
[MASTER] 01:05:04.924 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8190: weka.classifiers.Evaluation.weightedMatthewsCorrelation()D:3136 - ReplaceComparisonOperator >= -> >
[MASTER] 01:05:04.924 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8302: weka.classifiers.Evaluation.weightedMatthewsCorrelation()D:3144 - ReplaceComparisonOperator >= -> >
[MASTER] 01:05:04.926 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.weightedMatthewsCorrelation()D
[MASTER] 01:05:04.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.weightedMatthewsCorrelation()D
[MASTER] 01:05:04.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: I70 Branch 304 IF_ICMPGE L3144 - true in context: weka.classifiers.Evaluation:weightedMatthewsCorrelation()D
[MASTER] 01:05:04.931 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.weightedMatthewsCorrelation()D: I18 Branch 302 IF_ICMPGE L3136 - true in context: weka.classifiers.Evaluation:weightedMatthewsCorrelation()D
[MASTER] 01:08:40.221 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 01:11:50.653 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 01:11:50.655 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 01:11:50.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
* Search finished after 846s and 94 generations, 90817 statements, best individual has fitness: 15624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 1378
* Number of covered goals: 780
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 339
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 60
* Number of covered goals: 60
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 251
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 332
* Generated 133 tests with total length 3267
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
[MASTER] 01:26:58.829 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 01:27:04.663 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:27:04.874 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:27:04.874 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 01:27:05.699 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14425
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:33:24.503 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:33:24.505 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:33:24.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:33:24.536 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:33:24.538 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:33:24.539 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 02:33:45.518 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 02:33:45.518 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 842s and 76 generations, 66718 statements, best individual has fitness: 1976.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 296
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 154
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 418
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 112
* Number of covered goals: 50
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Generated 60 tests with total length 1217
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 47%
* Compiling and checking tests
[MASTER] 02:52:04.870 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1574218324414/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1574218324414/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:04.870 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:04.870 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:04.873 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:04.873 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:04.874 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1574218324414/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:04 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.DenseInstance;
18: import weka.core.Instances;
19: import weka.core.MinkowskiDistance;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_0_tmp__ESTest extends NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.237262663958189
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.m_useStopList = true;
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       TestInstances testInstances0 = new TestInstances();
36:       Instances instances0 = testInstances0.generate();
37:       naiveBayesMultinomialText0.buildClassifier(instances0);
38:       MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
39:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
40:       double[][] doubleArray0 = new double[7][0];
41:       double[] doubleArray1 = new double[3];
42:       doubleArray1[0] = (double) 0;
43:       doubleArray1[1] = (double) 1;
44:       doubleArray1[2] = (double) (-1);
45:       doubleArray0[0] = doubleArray1;
46:       double[] doubleArray2 = new double[5];
47:       doubleArray2[0] = (double) (-1);
48:       doubleArray2[1] = (double) 0;
49:       doubleArray2[2] = (double) 1;
50:       doubleArray2[3] = (double) 1;
51:       doubleArray2[4] = (double) 1;
52:       doubleArray0[1] = doubleArray2;
53:       double[] doubleArray3 = new double[5];
54:       doubleArray3[0] = (double) 2;
55:       doubleArray3[1] = (double) 0;
56:       doubleArray3[2] = (double) 1;
57:       doubleArray3[3] = (double) 0;
58:       doubleArray3[4] = (double) 0;
59:       doubleArray0[2] = doubleArray3;
60:       double[] doubleArray4 = new double[6];
61:       doubleArray4[0] = (double) 2;
62:       doubleArray4[1] = 1.0;
63:       doubleArray4[2] = (double) 2;
64:       doubleArray4[3] = (double) 1;
65:       doubleArray4[4] = (double) 0;
66:       doubleArray4[5] = (double) 1;
67:       doubleArray0[3] = doubleArray4;
68:       double[] doubleArray5 = new double[9];
69:       doubleArray5[0] = (double) 0;
70:       doubleArray5[1] = (double) (-2);
71:       doubleArray5[2] = (double) 0;
72:       doubleArray5[3] = (double) 1;
73:       doubleArray5[4] = (double) 0;
74:       doubleArray5[5] = (-1393.4556916619547);
75:       doubleArray5[6] = 1.0;
76:       doubleArray5[7] = (double) 0;
77:       doubleArray5[8] = (double) (-2);
78:       doubleArray0[4] = doubleArray5;
79:       double[] doubleArray6 = new double[5];
80:       doubleArray6[0] = (double) 2;
81:       doubleArray6[1] = (double) 1;
82:       doubleArray6[2] = 1.0;
83:       doubleArray6[3] = 1.0;
84:       doubleArray6[4] = 1697.9242;
85:       doubleArray0[5] = doubleArray6;
86:       double[] doubleArray7 = new double[3];
87:       doubleArray7[0] = 1.0;
88:       doubleArray7[1] = (double) 1;
89:       doubleArray7[2] = (double) (-2);
90:       doubleArray0[6] = doubleArray7;
91:       minkowskiDistance0.updateRangesFirst(binarySparseInstance0, (-1), doubleArray0);
92:       DenseInstance denseInstance0 = new DenseInstance(0);
93:       try { 
94:         naiveBayesMultinomialText0.classifyInstance(denseInstance0);
95:         fail("Expecting exception: RuntimeException");
96:       
97:       } catch(RuntimeException e) {
98:          //
99:          // DenseInstance doesn't have access to a dataset!
100:          //
101:          verifyException("weka.core.AbstractInstance", e);
102:       }
103:   }
104: }
RegularFileObject[/tmp/EvoSuite_0_1574218324414/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:04 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:04.875 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
double[][] doubleArray0 = new double[7][0];
double[] doubleArray1 = new double[3];
doubleArray1[0] = (double) 0;
doubleArray1[1] = (double) 1;
doubleArray1[2] = (double) (-1);
doubleArray0[0] = doubleArray1;
double[] doubleArray2 = new double[5];
doubleArray2[0] = (double) (-1);
doubleArray2[1] = (double) 0;
doubleArray2[2] = (double) 1;
doubleArray2[3] = (double) 1;
doubleArray2[4] = (double) 1;
doubleArray0[1] = doubleArray2;
double[] doubleArray3 = new double[5];
doubleArray3[0] = (double) 2;
doubleArray3[1] = (double) 0;
doubleArray3[2] = (double) 1;
doubleArray3[3] = (double) 0;
doubleArray3[4] = (double) 0;
doubleArray0[2] = doubleArray3;
double[] doubleArray4 = new double[6];
doubleArray4[0] = (double) 2;
doubleArray4[1] = 1.0;
doubleArray4[2] = (double) 2;
doubleArray4[3] = (double) 1;
doubleArray4[4] = (double) 0;
doubleArray4[5] = (double) 1;
doubleArray0[3] = doubleArray4;
double[] doubleArray5 = new double[9];
doubleArray5[0] = (double) 0;
doubleArray5[1] = (double) (-2);
doubleArray5[2] = (double) 0;
doubleArray5[3] = (double) 1;
doubleArray5[4] = (double) 0;
doubleArray5[5] = (-1393.4556916619547);
doubleArray5[6] = 1.0;
doubleArray5[7] = (double) 0;
doubleArray5[8] = (double) (-2);
doubleArray0[4] = doubleArray5;
double[] doubleArray6 = new double[5];
doubleArray6[0] = (double) 2;
doubleArray6[1] = (double) 1;
doubleArray6[2] = 1.0;
doubleArray6[3] = 1.0;
doubleArray6[4] = 1697.9242;
doubleArray0[5] = doubleArray6;
double[] doubleArray7 = new double[3];
doubleArray7[0] = 1.0;
doubleArray7[1] = (double) 1;
doubleArray7[2] = (double) (-2);
doubleArray0[6] = doubleArray7;
minkowskiDistance0.updateRangesFirst(binarySparseInstance0, (-1), doubleArray0);
DenseInstance denseInstance0 = new DenseInstance(0);
naiveBayesMultinomialText0.classifyInstance(denseInstance0);

[MASTER] 02:52:05.077 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1574218324985/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1574218324985/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:05.077 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.077 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 02:52:05.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 02:52:05.077 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1574218324985/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:04 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.DenseInstance;
18: import weka.core.Instance;
19: import weka.core.Instances;
20: import weka.core.SparseInstance;
21: import weka.core.TestInstances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_2_tmp__ESTest extends NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.054767028125893
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.m_useStopList = true;
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       TestInstances testInstances0 = new TestInstances();
36:       Instances instances0 = testInstances0.generate();
37:       naiveBayesMultinomialText0.buildClassifier(instances0);
38:       SparseInstance sparseInstance0 = null;
39:       SparseInstance sparseInstance1 = null;
40:       try {
41:         sparseInstance1 = new SparseInstance((SparseInstance) null);
42:         fail("Expecting exception: NullPointerException");
43:       
44:       } catch(NullPointerException e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:          verifyException("weka.core.SparseInstance", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_2_1574218324985/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:04 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:05.078 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
SparseInstance sparseInstance0 = null;
SparseInstance sparseInstance1 = new SparseInstance((SparseInstance) null);

[MASTER] 02:52:05.462 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1574218325437/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1574218325437/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:05.462 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.462 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.462 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 02:52:05.462 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 02:52:05.463 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1574218325437/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Instance;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: import weka.core.neighboursearch.balltrees.BallNode;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=1.830738805564335
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       FileSystemHandling.shouldAllThrowIOExceptions();
33:       Random.setNextRandom((-237));
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.minWordFrequencyTipText();
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
38:       naiveBayesMultinomialText0.m_periodicP = 102;
39:       naiveBayesMultinomialText0.LNormTipText();
40:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
41:       int int0 = 68;
42:       int int1 = (-1803);
43:       int[] intArray0 = new int[3];
44:       intArray0[0] = 102;
45:       intArray0[1] = (-1803);
46:       intArray0[2] = (-1803);
47:       TestInstances testInstances0 = new TestInstances();
48:       // Undeclared exception!
49:       try { 
50:         testInstances0.getRelationalFormat((-1405));
51:         fail("Expecting exception: ArrayIndexOutOfBoundsException");
52:       
53:       } catch(ArrayIndexOutOfBoundsException e) {
54:          //
55:          // -1405
56:          //
57:          verifyException("weka.core.TestInstances", e);
58:       }
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_11_1574218325437/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:05.463 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldAllThrowIOExceptions();
Random.setNextRandom((-237));
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = 102;
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
int int0 = 68;
int int1 = (-1803);
int[] intArray0 = new int[3];
intArray0[0] = 102;
intArray0[1] = (-1803);
intArray0[2] = (-1803);
TestInstances testInstances0 = new TestInstances();
testInstances0.getRelationalFormat((-1405));

[MASTER] 02:52:05.566 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1574218325543/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1574218325543/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:05.566 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.566 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.567 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 02:52:05.567 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 02:52:05.567 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1574218325543/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.Random;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.TestInstances;
17: import weka.core.stemmers.IteratedLovinsStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_15_tmp__ESTest extends NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.195315165445874
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       TestInstances testInstances0 = new TestInstances();
31:       testInstances0.generate();
32:       Random.setNextRandom(0);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.setOptions(testInstances0.DEFAULT_WORDS);
35:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
36:       boolean boolean0 = naiveBayesMultinomialText1.getNormalizeDocLength();
37:       assertFalse(boolean0);
38:       
39:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
40:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
41:       assertEquals(12, stringArray0.length);
42:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
43:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
44:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
45:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_15_1574218325543/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:05.567 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
TestInstances testInstances0 = new TestInstances();
testInstances0.generate();
Random.setNextRandom(0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setOptions(testInstances0.DEFAULT_WORDS);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
boolean boolean0 = naiveBayesMultinomialText1.getNormalizeDocLength();
assertFalse(boolean0);

String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(12, stringArray0.length);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 02:52:05.590 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1574218325568/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1574218325568/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:05.590 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.590 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.591 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:05.591 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:05.591 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1574218325568/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.BayesNet;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.AbstractInstance;
17: import weka.core.BinarySparseInstance;
18: import weka.core.MinkowskiDistance;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_16_tmp__ESTest extends NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.253297930766516
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
32:       naiveBayesMultinomialText0.m_useStopList = false;
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       TestInstances testInstances0 = new TestInstances();
36:       testInstances0.generate();
37:       MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
38:       double[] doubleArray0 = new double[7];
39:       doubleArray0[0] = (double) 0;
40:       BayesNet bayesNet0 = new BayesNet();
41:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0, doubleArray0);
42:       assertEquals(6, AbstractInstance.s_numericAfterDecimalPoint);
43:       
44:       AbstractInstance.s_numericAfterDecimalPoint = 0;
45:       naiveBayesMultinomialText0.getLNorm();
46:       naiveBayesMultinomialText0.getNormalizeDocLength();
47:       naiveBayesMultinomialText0.setNorm(0);
48:       double double0 = naiveBayesMultinomialText0.getNorm();
49:       assertEquals(0.0, double0, 0.01);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_16_1574218325568/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:05.592 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = false;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
testInstances0.generate();
MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0;
BayesNet bayesNet0 = new BayesNet();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0, doubleArray0);
assertEquals(6, AbstractInstance.s_numericAfterDecimalPoint);

AbstractInstance.s_numericAfterDecimalPoint = 0;
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.setNorm(0);
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals(0.0, double0, 0.01);


[MASTER] 02:52:05.677 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_19_1574218325647/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_19_1574218325647/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:05.677 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.677 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:05.678 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 02:52:05.679 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 02:52:05.679 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_19_1574218325647/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.attributeSelection.WrapperSubsetEval;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Capabilities;
20: import weka.core.Instances;
21: import weka.core.MinkowskiDistance;
22: import weka.core.TestInstances;
23: import weka.core.neighboursearch.balltrees.BallNode;
24: import weka.core.stemmers.IteratedLovinsStemmer;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_19_tmp__ESTest extends NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=2.376425042899871
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
37:       naiveBayesMultinomialText0.m_useStopList = true;
38:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
39:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
42:       naiveBayesMultinomialText0.m_norm = 1.0E10;
43:       TestInstances testInstances0 = new TestInstances();
44:       Instances instances0 = testInstances0.generate();
45:       naiveBayesMultinomialText0.buildClassifier(instances0);
46:       MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
47:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
48:       FileSystemHandling.appendStringToFile(evoSuiteFile0, "M}");
49:       minkowskiDistance0.listOptions();
50:       naiveBayesMultinomialText0.toString();
51:       TestInstances testInstances1 = new TestInstances();
52:       WrapperSubsetEval wrapperSubsetEval0 = new WrapperSubsetEval();
53:       Capabilities capabilities0 = wrapperSubsetEval0.getCapabilities();
54:       TestInstances.forCapabilities(capabilities0);
55:       // Undeclared exception!
56:       try { 
57:         Instances.mergeInstances(instances0, instances0);
58:         fail("Expecting exception: IllegalArgumentException");
59:       
60:       } catch(IllegalArgumentException e) {
61:          //
62:          // Attribute names are not unique! Causes: 'Nominal1' 'Class' 
63:          //
64:          verifyException("weka.core.Instances", e);
65:       }
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_19_1574218325647/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:05.680 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_norm = 1.0E10;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
FileSystemHandling.appendStringToFile(evoSuiteFile0, "M}");
minkowskiDistance0.listOptions();
naiveBayesMultinomialText0.toString();
TestInstances testInstances1 = new TestInstances();
WrapperSubsetEval wrapperSubsetEval0 = new WrapperSubsetEval();
Capabilities capabilities0 = wrapperSubsetEval0.getCapabilities();
TestInstances.forCapabilities(capabilities0);
Instances.mergeInstances(instances0, instances0);

[MASTER] 02:52:06.132 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1574218326114/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1574218326114/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.132 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.132 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.132 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:06.132 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:06.133 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1574218326114/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.DenseInstance;
18: import weka.core.Instance;
19: import weka.core.Instances;
20: import weka.core.SparseInstance;
21: import weka.core.TestInstances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=1.830738805564335
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       TestInstances testInstances0 = new TestInstances();
35:       testInstances0.getData();
36:       try { 
37:         naiveBayesMultinomialText0.buildClassifier((Instances) null);
38:         fail("Expecting exception: NullPointerException");
39:       
40:       } catch(NullPointerException e) {
41:          //
42:          // no message in exception (getMessage() returned null)
43:          //
44:          verifyException("weka.core.Capabilities", e);
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_34_1574218326114/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.133 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
TestInstances testInstances0 = new TestInstances();
testInstances0.getData();
naiveBayesMultinomialText0.buildClassifier((Instances) null);

[MASTER] 02:52:06.153 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1574218326133/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1574218326133/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.153 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.153 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.153 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:06.153 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 02:52:06.154 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1574218326133/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.AbstractClassifier;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.lazy.LWL;
17: import weka.core.stemmers.IteratedLovinsStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.7787755691845217
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
30:       naiveBayesMultinomialText0.m_useStopList = true;
31:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
32:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       String[] stringArray0 = new String[1];
36:       stringArray0[0] = "?~S";
37:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
38:       LWL lWL0 = new LWL();
39:       AbstractClassifier.makeCopies(lWL0, 5);
40:       naiveBayesMultinomialText0.getUseStopList();
41:       naiveBayesMultinomialText0.getLowercaseTokens();
42:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
43:       naiveBayesMultinomialText0.getUseWordFrequencies();
44:       naiveBayesMultinomialText0.lowercaseTokensTipText();
45:       naiveBayesMultinomialText0.minWordFrequencyTipText();
46:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_35_1574218326133/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.154 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
String[] stringArray0 = new String[1];
stringArray0[0] = "?~S";
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
LWL lWL0 = new LWL();
AbstractClassifier.makeCopies(lWL0, 5);
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 02:52:06.269 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1574218326248/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1574218326248/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.269 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.269 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.270 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 02:52:06.270 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 02:52:06.270 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1574218326248/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.BinarySparseInstance;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: import weka.core.stemmers.IteratedLovinsStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.815446612391971
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
31:       naiveBayesMultinomialText0.m_useStopList = true;
32:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
33:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       naiveBayesMultinomialText0.m_norm = 403.2859;
36:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
37:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
38:       TestInstances testInstances0 = new TestInstances();
39:       linkedHashMap0.keySet();
40:       Instances instances0 = testInstances0.generate();
41:       naiveBayesMultinomialText0.buildClassifier(instances0);
42:       naiveBayesMultinomialText0.getTokenizer();
43:       double[] doubleArray0 = new double[5];
44:       naiveBayesMultinomialText0.getTokenizer();
45:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1), doubleArray0);
46:       naiveBayesMultinomialText0.getLowercaseTokens();
47:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
48:       naiveBayesMultinomialText0.getUseWordFrequencies();
49:       naiveBayesMultinomialText0.lowercaseTokensTipText();
50:       naiveBayesMultinomialText0.minWordFrequencyTipText();
51:       assertTrue(naiveBayesMultinomialText0.getUseWordFrequencies());
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_40_1574218326248/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.271 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_norm = 403.2859;
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setUseWordFrequencies(true);
TestInstances testInstances0 = new TestInstances();
linkedHashMap0.keySet();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.getTokenizer();
double[] doubleArray0 = new double[5];
naiveBayesMultinomialText0.getTokenizer();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1), doubleArray0);
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
assertTrue(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 02:52:06.388 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1574218326363/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1574218326363/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.388 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.388 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.389 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 02:52:06.389 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 02:52:06.389 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1574218326363/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.BayesNet;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.DenseInstance;
19: import weka.core.Instances;
20: import weka.core.MinkowskiDistance;
21: import weka.core.SparseInstance;
22: import weka.core.TestInstances;
23: import weka.core.stemmers.IteratedLovinsStemmer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.4383557982263993
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
36:       naiveBayesMultinomialText0.m_useStopList = true;
37:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
38:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
41:       naiveBayesMultinomialText0.m_norm = 1.0E10;
42:       TestInstances testInstances0 = new TestInstances();
43:       Instances instances0 = testInstances0.generate();
44:       naiveBayesMultinomialText0.buildClassifier(instances0);
45:       naiveBayesMultinomialText0.getTokenizer();
46:       MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
47:       double[] doubleArray0 = new double[1];
48:       doubleArray0[0] = (double) 0;
49:       DenseInstance denseInstance0 = new DenseInstance(0);
50:       denseInstance0.toStringNoWeight((-2));
51:       BayesNet bayesNet0 = new BayesNet();
52:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(denseInstance0);
53:       BinarySparseInstance binarySparseInstance1 = (BinarySparseInstance)binarySparseInstance0.mergeInstance(denseInstance0);
54:       binarySparseInstance1.deleteAttributeAt(2052);
55:       BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(0, doubleArray0);
56:       binarySparseInstance1.mergeInstance(binarySparseInstance2);
57:       SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance1);
58:       try { 
59:         naiveBayesMultinomialText0.classifyInstance(binarySparseInstance1);
60:         fail("Expecting exception: RuntimeException");
61:       
62:       } catch(RuntimeException e) {
63:          //
64:          // DenseInstance doesn't have access to a dataset!
65:          //
66:          verifyException("weka.core.AbstractInstance", e);
67:       }
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_44_1574218326363/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.390 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_norm = 1.0E10;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.getTokenizer();
MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) 0;
DenseInstance denseInstance0 = new DenseInstance(0);
denseInstance0.toStringNoWeight((-2));
BayesNet bayesNet0 = new BayesNet();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(denseInstance0);
BinarySparseInstance binarySparseInstance1 = (BinarySparseInstance)binarySparseInstance0.mergeInstance(denseInstance0);
binarySparseInstance1.deleteAttributeAt(2052);
BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(0, doubleArray0);
binarySparseInstance1.mergeInstance(binarySparseInstance2);
SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance1);
naiveBayesMultinomialText0.classifyInstance(binarySparseInstance1);

[MASTER] 02:52:06.420 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1574218326390/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1574218326390/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.420 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.420 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.420 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 02:52:06.420 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 02:52:06.421 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1574218326390/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.BayesNet;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Attribute;
20: import weka.core.BinarySparseInstance;
21: import weka.core.DenseInstance;
22: import weka.core.Instance;
23: import weka.core.Instances;
24: import weka.core.MinkowskiDistance;
25: import weka.core.TestInstances;
26: import weka.core.stemmers.IteratedLovinsStemmer;
27: 
28: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
29: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
30: 
31:   /**
32:   //Test case number: 0
33:   /*Coverage entropy=2.253297930766516
34:   */
35:   @Test(timeout = 4000)
36:   public void test0()  throws Throwable  {
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
39:       naiveBayesMultinomialText0.m_useStopList = true;
40:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
41:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
44:       TestInstances testInstances0 = new TestInstances();
45:       testInstances0.generate();
46:       ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
47:       int int0 = 725;
48:       Instances instances0 = new Instances(".arff", arrayList0, 725);
49:       try { 
50:         naiveBayesMultinomialText0.buildClassifier(instances0);
51:         fail("Expecting exception: Exception");
52:       
53:       } catch(Exception e) {
54:          //
55:          // weka.classifiers.bayes.NaiveBayesMultinomialText: No attributes!
56:          //
57:          verifyException("weka.core.Capabilities", e);
58:       }
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_45_1574218326390/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.421 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
testInstances0.generate();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
int int0 = 725;
Instances instances0 = new Instances(".arff", arrayList0, 725);
naiveBayesMultinomialText0.buildClassifier(instances0);

[MASTER] 02:52:06.445 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_46_1574218326423/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_46_1574218326423/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.445 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.445 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.445 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 02:52:06.445 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 02:52:06.446 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_46_1574218326423/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.BayesNet;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.DenseInstance;
19: import weka.core.Instance;
20: import weka.core.Instances;
21: import weka.core.MinkowskiDistance;
22: import weka.core.SparseInstance;
23: import weka.core.TestInstances;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_46_tmp__ESTest extends NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.2268974827716517
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
36:       boolean boolean0 = false;
37:       naiveBayesMultinomialText0.m_useStopList = false;
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
40:       TestInstances testInstances0 = new TestInstances();
41:       Instances instances0 = testInstances0.generate();
42:       double[] doubleArray0 = new double[3];
43:       doubleArray0[0] = (double) (-2);
44:       doubleArray0[1] = (double) (-2);
45:       doubleArray0[2] = (-186.2328);
46:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-186.2328), doubleArray0);
47:       instances0.add((Instance) binarySparseInstance0);
48:       try { 
49:         naiveBayesMultinomialText0.buildClassifier(instances0);
50:         fail("Expecting exception: IndexOutOfBoundsException");
51:       
52:       } catch(IndexOutOfBoundsException e) {
53:          //
54:          // Index: 2, Size: 2
55:          //
56:          verifyException("java.util.ArrayList", e);
57:       }
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_46_1574218326423/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.446 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
boolean boolean0 = false;
naiveBayesMultinomialText0.m_useStopList = false;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
double[] doubleArray0 = new double[3];
doubleArray0[0] = (double) (-2);
doubleArray0[1] = (double) (-2);
doubleArray0[2] = (-186.2328);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-186.2328), doubleArray0);
instances0.add((Instance) binarySparseInstance0);
naiveBayesMultinomialText0.buildClassifier(instances0);

[MASTER] 02:52:06.532 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1574218326511/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1574218326511/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.532 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.532 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.533 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 02:52:06.533 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 02:52:06.533 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1574218326511/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.net.URI;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.mock.java.net.MockURI;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.BayesNet;
22: import weka.classifiers.bayes.NaiveBayesMultinomialText;
23: import weka.core.BinarySparseInstance;
24: import weka.core.DenseInstance;
25: import weka.core.Instances;
26: import weka.core.MinkowskiDistance;
27: import weka.core.TestInstances;
28: 
29: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
30: public class NaiveBayesMultinomialText_49_tmp__ESTest extends NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
31: 
32:   /**
33:   //Test case number: 0
34:   /*Coverage entropy=2.2873169983383104
35:   */
36:   @Test(timeout = 4000)
37:   public void test0()  throws Throwable  {
38:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText0.m_useStopList = true;
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
42:       URI uRI0 = MockURI.aFileURI;
43:       MockFile mockFile0 = new MockFile(uRI0);
44:       File file0 = mockFile0.getAbsoluteFile();
45:       naiveBayesMultinomialText0.setStopwords(file0);
46:       boolean boolean0 = naiveBayesMultinomialText0.m_lowercaseTokens;
47:       TestInstances testInstances0 = new TestInstances();
48:       TestInstances testInstances1 = new TestInstances();
49:       Instances instances0 = testInstances0.generate();
50:       naiveBayesMultinomialText0.buildClassifier(instances0);
51:       MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
52:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
53:       FileSystemHandling.appendStringToFile(evoSuiteFile0, " ");
54:       DenseInstance denseInstance0 = new DenseInstance(1805);
55:       denseInstance0.toStringNoWeight(5002);
56:       BayesNet bayesNet0 = new BayesNet();
57:       BinarySparseInstance binarySparseInstance0 = null;
58:       try {
59:         binarySparseInstance0 = new BinarySparseInstance((-1));
60:         fail("Expecting exception: NegativeArraySizeException");
61:       
62:       } catch(NegativeArraySizeException e) {
63:          //
64:          // no message in exception (getMessage() returned null)
65:          //
66:          verifyException("weka.core.BinarySparseInstance", e);
67:       }
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_49_1574218326511/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.533 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
URI uRI0 = MockURI.aFileURI;
MockFile mockFile0 = new MockFile(uRI0);
File file0 = mockFile0.getAbsoluteFile();
naiveBayesMultinomialText0.setStopwords(file0);
boolean boolean0 = naiveBayesMultinomialText0.m_lowercaseTokens;
TestInstances testInstances0 = new TestInstances();
TestInstances testInstances1 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
FileSystemHandling.appendStringToFile(evoSuiteFile0, " ");
DenseInstance denseInstance0 = new DenseInstance(1805);
denseInstance0.toStringNoWeight(5002);
BayesNet bayesNet0 = new BayesNet();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1));

[MASTER] 02:52:06.581 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1574218326562/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1574218326562/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.581 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.581 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.582 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 02:52:06.582 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 02:52:06.582 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1574218326562/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.AbstractClassifier;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.0279017942068247
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
29:       
30:       naiveBayesMultinomialText0.m_norm = 1588.16344679773;
31:       naiveBayesMultinomialText0.setLNorm(0.0);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       naiveBayesMultinomialText0.globalInfo();
36:       naiveBayesMultinomialText0.lowercaseTokensTipText();
37:       naiveBayesMultinomialText0.normTipText();
38:       naiveBayesMultinomialText0.stopwordsTipText();
39:       System.setCurrentTimeMillis((-1277L));
40:       naiveBayesMultinomialText0.m_useStopList = false;
41:       naiveBayesMultinomialText0.getLNorm();
42:       naiveBayesMultinomialText0.tokenizerTipText();
43:       String[] stringArray0 = new String[9];
44:       stringArray0[0] = "The file containing the stopwords (if this is a directory then the default ones are used).";
45:       stringArray0[1] = "Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification";
46:       stringArray0[2] = "Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification";
47:       stringArray0[3] = "Whether to convert all tokens to lowercase";
48:       stringArray0[4] = "Whether to convert all tokens to lowercase";
49:       stringArray0[5] = "The file containing the stopwords (if this is a directory then the default ones are used).";
50:       stringArray0[6] = "The norm of the instances after normalization.";
51:       stringArray0[7] = "The tokenizing algorithm to use on the strings.";
52:       stringArray0[8] = "The tokenizing algorithm to use on the strings.";
53:       naiveBayesMultinomialText0.setOptions(stringArray0);
54:       assertEquals(0.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_51_1574218326562/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.582 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);

naiveBayesMultinomialText0.m_norm = 1588.16344679773;
naiveBayesMultinomialText0.setLNorm(0.0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.stopwordsTipText();
System.setCurrentTimeMillis((-1277L));
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.tokenizerTipText();
String[] stringArray0 = new String[9];
stringArray0[0] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[1] = "Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification";
stringArray0[2] = "Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification";
stringArray0[3] = "Whether to convert all tokens to lowercase";
stringArray0[4] = "Whether to convert all tokens to lowercase";
stringArray0[5] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[6] = "The norm of the instances after normalization.";
stringArray0[7] = "The tokenizing algorithm to use on the strings.";
stringArray0[8] = "The tokenizing algorithm to use on the strings.";
naiveBayesMultinomialText0.setOptions(stringArray0);
assertEquals(0.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 02:52:06.687 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_55_1574218326665/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_55_1574218326665/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.java]]
[MASTER] 02:52:06.687 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.687 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:52:06.687 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 02:52:06.687 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 02:52:06.688 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_55_1574218326665/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 20 02:52:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.BayesNet;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
22: import weka.core.AbstractInstance;
23: import weka.core.DenseInstance;
24: import weka.core.Instances;
25: import weka.core.MinkowskiDistance;
26: import weka.core.TestInstances;
27: 
28: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
29: public class NaiveBayesMultinomialText_55_tmp__ESTest extends NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
30: 
31:   /**
32:   //Test case number: 0
33:   /*Coverage entropy=2.4487143204140382
34:   */
35:   @Test(timeout = 4000)
36:   public void test0()  throws Throwable  {
37:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("kernelMatrix.matrix/.arff0@relation");
38:       FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
39:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
40:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
41:       naiveBayesMultinomialText0.m_useStopList = false;
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
44:       TestInstances testInstances0 = new TestInstances();
45:       Instances instances0 = testInstances0.generate();
46:       testInstances0.setRelationalClassFormat(instances0);
47:       naiveBayesMultinomialText0.buildClassifier(instances0);
48:       MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
49:       DenseInstance denseInstance0 = new DenseInstance(0);
50:       denseInstance0.toStringNoWeight((-2));
51:       testInstances0.generate("");
52:       BayesNet bayesNet0 = new BayesNet();
53:       AbstractInstance.s_numericAfterDecimalPoint = 0;
54:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
55:       naiveBayesMultinomialText1.buildClassifier(instances0);
56:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
57:       File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
58:       precomputedKernelMatrixKernel0.listOptions();
59:       File file1 = MockFile.createTempFile(".arff", "@relation", file0);
60:       naiveBayesMultinomialText1.setStopwords(file1);
61:       try { 
62:         naiveBayesMultinomialText1.classifyInstance(denseInstance0);
63:         fail("Expecting exception: RuntimeException");
64:       
65:       } catch(RuntimeException e) {
66:          //
67:          // DenseInstance doesn't have access to a dataset!
68:          //
69:          verifyException("weka.core.AbstractInstance", e);
70:       }
71:   }
72: }
RegularFileObject[/tmp/EvoSuite_55_1574218326665/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 20 02:52:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.functions.supportVector.CachedKernel",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.attributeSelection.ASEvaluation",
139:       "weka.core.AbstractInstance",
140:       "weka.core.scripting.JythonObject",
141:       "weka.core.SelectedTag",
142:       "weka.classifiers.functions.supportVector.RegOptimizer",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.estimators.DiscreteEstimator",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.core.Version",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.StreamableFilter",
155:       "weka.core.Range",
156:       "weka.attributeSelection.WrapperSubsetEval",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.misc.SerializedClassifier",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.classifiers.lazy.LWL",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.FastVector",
183:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.functions.supportVector.RegSMOImproved",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.RegSMO",
192:       "weka.classifiers.functions.supportVector.PolyKernel",
193:       "weka.core.ProtectedProperties",
194:       "weka.estimators.Estimator",
195:       "weka.core.StringLocator",
196:       "weka.classifiers.bayes.net.ADNode",
197:       "weka.core.AttributeStats",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.filters.unsupervised.attribute.Remove",
203:       "weka.core.Randomizable",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.bayes.net.BIFReader",
209:       "weka.classifiers.bayes.net.ParentSet",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.core.stemmers.Stemming",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.classifiers.Sourcable",
217:       "weka.core.RevisionHandler",
218:       "weka.classifiers.evaluation.output.prediction.PlainText",
219:       "weka.core.neighboursearch.TreePerformanceStats",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Option",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.core.Utils",
243:       "weka.core.UnassignedDatasetException",
244:       "weka.core.TestInstances",
245:       "weka.core.Attribute",
246:       "weka.core.ProtectedProperties",
247:       "weka.core.Instances",
248:       "weka.core.DenseInstance",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
251:       "weka.core.Tag",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.balltrees.BallNode",
257:       "weka.classifiers.RandomizableClassifier",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.classifiers.Evaluation",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.Capabilities",
262:       "org.pentaho.packageManagement.PackageManager",
263:       "org.pentaho.packageManagement.DefaultPackageManager",
264:       "weka.core.Version",
265:       "weka.core.Environment",
266:       "weka.core.WekaPackageManager",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.SerializedObject",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.tokenizers.AlphabeticTokenizer",
273:       "weka.classifiers.misc.SerializedClassifier",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.core.Stopwords",
283:       "weka.core.RevisionUtils",
284:       "weka.core.neighboursearch.NearestNeighbourSearch",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.NormalizableDistance",
287:       "weka.core.EuclideanDistance",
288:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
289:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.lazy.IBk",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.classifiers.bayes.net.BIFReader",
296:       "weka.core.SelectedTag",
297:       "weka.core.MinkowskiDistance",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.classifiers.SingleClassifierEnhancer",
304:       "weka.classifiers.lazy.LWL",
305:       "weka.classifiers.rules.ZeroR",
306:       "weka.classifiers.trees.DecisionStump",
307:       "weka.filters.AllFilter",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.attributeSelection.WrapperSubsetEval",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.InfoGainAttributeEval",
317:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
318:       "weka.core.tokenizers.NGramTokenizer",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
323:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
324:       "weka.estimators.Estimator",
325:       "weka.estimators.KernelEstimator",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.RandomSubSpace",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.functions.SGD",
335:       "weka.classifiers.functions.supportVector.Kernel",
336:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.TechnicalInformation",
340:       "weka.core.TechnicalInformation$Type",
341:       "weka.core.TechnicalInformation$Field",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.core.WekaException",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.attributeSelection.CfsSubsetEval",
346:       "weka.attributeSelection.ASSearch",
347:       "weka.attributeSelection.BestFirst",
348:       "weka.classifiers.trees.J48",
349:       "weka.classifiers.functions.supportVector.CachedKernel",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.core.matrix.Matrix",
352:       "weka.core.UnassignedClassException",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.core.UnsupportedAttributeTypeException",
357:       "weka.classifiers.rules.JRip",
358:       "weka.classifiers.lazy.KStar",
359:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
360:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
361:       "weka.classifiers.meta.Stacking",
362:       "weka.classifiers.functions.supportVector.PolyKernel",
363:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.core.Javadoc",
374:       "weka.core.ClassCache",
375:       "weka.core.AllJavadoc",
376:       "weka.classifiers.functions.SMO",
377:       "weka.classifiers.functions.GaussianProcesses",
378:       "weka.classifiers.meta.RegressionByDiscretization",
379:       "weka.filters.unsupervised.attribute.Discretize",
380:       "weka.classifiers.trees.j48.ClassifierTree",
381:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
382:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.classifiers.trees.LMT",
385:       "weka.classifiers.functions.supportVector.StringKernel",
386:       "weka.core.neighboursearch.PerformanceStats",
387:       "weka.classifiers.functions.SimpleLogistic",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.meta.ClassificationViaRegression",
390:       "weka.classifiers.trees.m5.M5Base",
391:       "weka.classifiers.trees.M5P",
392:       "weka.classifiers.functions.LinearRegression",
393:       "weka.filters.SimpleFilter",
394:       "weka.filters.SimpleStreamFilter",
395:       "weka.filters.MultiFilter",
396:       "weka.estimators.DiscreteEstimator",
397:       "weka.classifiers.rules.OneR",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit"
404:     );
405:   }
406: }

[MASTER] 02:52:06.688 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("kernelMatrix.matrix/.arff0@relation");
FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = false;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
testInstances0.setRelationalClassFormat(instances0);
naiveBayesMultinomialText0.buildClassifier(instances0);
MinkowskiDistance minkowskiDistance0 = new MinkowskiDistance();
DenseInstance denseInstance0 = new DenseInstance(0);
denseInstance0.toStringNoWeight((-2));
testInstances0.generate("");
BayesNet bayesNet0 = new BayesNet();
AbstractInstance.s_numericAfterDecimalPoint = 0;
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.buildClassifier(instances0);
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
precomputedKernelMatrixKernel0.listOptions();
File file1 = MockFile.createTempFile(".arff", "@relation", file0);
naiveBayesMultinomialText1.setStopwords(file1);
naiveBayesMultinomialText1.classifyInstance(denseInstance0);

[MASTER] 02:52:08.383 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 02:52:08.452 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 02:52:32.883 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14424
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:52:41.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:52:41.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:52:41.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:52:41.438 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Search finished after 855s and 32 generations, 32792 statements, best individual has fitness: 2744.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 616
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 408
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 611
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 244
* Number of covered goals: 102
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 124
* Number of covered goals: 118
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 124
* Number of covered goals: 118
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 385
* Generated 174 tests with total length 3122
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:12:32.788 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6733916666666667% of time used, but only 61/174 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 03:13:53.592 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14421
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:14:23.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:14:23.690 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:14:23.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:14:23.701 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 03:14:26.927 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 03:15:47.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:15:47.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 295s and 128 generations, 121923 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 15 tests with total length 400
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
