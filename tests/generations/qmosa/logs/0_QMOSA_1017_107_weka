* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10118
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:05:18.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:05:18.446 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:05:18.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:05:18.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 13:05:21.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 239s and 128 generations, 119199 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 490
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10115
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
* Search finished after 843s and 93 generations, 129363 statements, best individual has fitness: 2920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 277
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 277
* Generated 57 tests with total length 1205
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 78%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10119
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:04:18.818 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:04:18.819 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:04:18.820 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:04:18.837 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:04:18.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:04:18.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 14:04:21.910 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:04:21.910 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:04:23.642 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 841s and 109 generations, 101917 statements, best individual has fitness: 2704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 76%
* Total number of goals: 338
* Number of covered goals: 256
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 194
* Number of covered goals: 128
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 476
* Number of covered goals: 408
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 194
* Number of covered goals: 126
* Generated 70 tests with total length 1424
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 14:23:01.398 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1574086980942/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1574086980942/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:01.398 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.398 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.401 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:23:01.401 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:23:01.401 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 14:23:01.401 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 14:23:01.401 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 14:23:01.401 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1574086980942/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.functions.SGDText;
19: import weka.core.stemmers.Stemmer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_0_tmp__ESTest extends NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.292201394610299
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_periodicP = 2445;
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
34:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
36:       naiveBayesMultinomialText0.LNormTipText();
37:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
38:       Integer integer0 = new Integer(26);
39:       Integer.getInteger("a?", (Integer) null);
40:       hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
41:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
42:       naiveBayesMultinomialText0.pruneDictionary();
43:       naiveBayesMultinomialText0.normTipText();
44:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
45:       naiveBayesMultinomialText1.minWordFrequencyTipText();
46:       SGDText sGDText0 = new SGDText();
47:       Stemmer stemmer0 = sGDText0.getStemmer();
48:       naiveBayesMultinomialText0.setStemmer(stemmer0);
49:       naiveBayesMultinomialText1.tokenizerTipText();
50:       naiveBayesMultinomialText0.stemmerTipText();
51:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
52:       naiveBayesMultinomialText0.useStopListTipText();
53:       assertEquals(2445, naiveBayesMultinomialText0.getPeriodicPruning());
54:       
55:       naiveBayesMultinomialText1.stopwordsTipText();
56:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
57:       naiveBayesMultinomialText3.getOptions();
58:       assertEquals(3.0, naiveBayesMultinomialText3.getMinWordFrequency(), 0.01);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_0_1574086980942/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:01.402 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 2445;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.LNormTipText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
Integer integer0 = new Integer(26);
Integer.getInteger("a?", (Integer) null);
hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.minWordFrequencyTipText();
SGDText sGDText0 = new SGDText();
Stemmer stemmer0 = sGDText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useStopListTipText();
assertEquals(2445, naiveBayesMultinomialText0.getPeriodicPruning());

naiveBayesMultinomialText1.stopwordsTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.getOptions();
assertEquals(3.0, naiveBayesMultinomialText3.getMinWordFrequency(), 0.01);


[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1574086981733/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1574086981733/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 14:23:01.765 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 14:23:01.766 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1574086981733/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_6_tmp__ESTest extends NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.881766240540306
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
27:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.getLowercaseTokens();
30:       String string0 = naiveBayesMultinomialText0.LNormTipText();
31:       assertEquals("The LNorm to use for document length normalization.", string0);
32:       
33:       Integer integer0 = new Integer(0);
34:       hashMap0.put(integer0, linkedHashMap0);
35:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
36:       String string1 = naiveBayesMultinomialText1.normalizeDocLengthTipText();
37:       assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
38:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);
39:       
40:       naiveBayesMultinomialText1.pruneDictionary();
41:       String string2 = naiveBayesMultinomialText1.normTipText();
42:       assertEquals("The norm of the instances after normalization.", string2);
43:       
44:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
45:       double double0 = naiveBayesMultinomialText0.getNorm();
46:       assertEquals(1.0, double0, 0.01);
47:       
48:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
49:       String string3 = naiveBayesMultinomialText0.minWordFrequencyTipText();
50:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string3);
51:       
52:       String string4 = naiveBayesMultinomialText3.tokenizerTipText();
53:       assertEquals("The tokenizing algorithm to use on the strings.", string4);
54:       
55:       String string5 = naiveBayesMultinomialText0.stemmerTipText();
56:       assertEquals("The stemming algorithm to use on the words.", string5);
57:       
58:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
59:       String string6 = naiveBayesMultinomialText4.useStopListTipText();
60:       assertFalse(naiveBayesMultinomialText4.getUseWordFrequencies());
61:       assertEquals(3.0, naiveBayesMultinomialText4.getMinWordFrequency(), 0.01);
62:       assertEquals("If true, ignores all words that are on the stoplist.", string6);
63:       assertEquals(2.0, naiveBayesMultinomialText4.getLNorm(), 0.01);
64:       assertFalse(naiveBayesMultinomialText4.getNormalizeDocLength());
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_6_1574086981733/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:01.766 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getLowercaseTokens();
String string0 = naiveBayesMultinomialText0.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string0);

Integer integer0 = new Integer(0);
hashMap0.put(integer0, linkedHashMap0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String string1 = naiveBayesMultinomialText1.normalizeDocLengthTipText();
assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);

naiveBayesMultinomialText1.pruneDictionary();
String string2 = naiveBayesMultinomialText1.normTipText();
assertEquals("The norm of the instances after normalization.", string2);

NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals(1.0, double0, 0.01);

NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
String string3 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string3);

String string4 = naiveBayesMultinomialText3.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string4);

String string5 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string5);

NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
String string6 = naiveBayesMultinomialText4.useStopListTipText();
assertFalse(naiveBayesMultinomialText4.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText4.getMinWordFrequency(), 0.01);
assertEquals("If true, ignores all words that are on the stoplist.", string6);
assertEquals(2.0, naiveBayesMultinomialText4.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText4.getNormalizeDocLength());


[MASTER] 14:23:01.851 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1574086981823/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1574086981823/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:01.851 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.851 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.852 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:01.852 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:01.852 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 14:23:01.852 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 14:23:01.852 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1574086981823/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.SparseInstance;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.2242578247365654
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.m_normalize = true;
30:       naiveBayesMultinomialText0.m_useStopList = true;
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
33:       boolean boolean0 = naiveBayesMultinomialText1.m_lowercaseTokens;
34:       naiveBayesMultinomialText1.LNormTipText();
35:       Integer integer0 = new Integer(26);
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       hashMap0.put((Integer) null, linkedHashMap0);
38:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
39:       naiveBayesMultinomialText0.pruneDictionary();
40:       naiveBayesMultinomialText1.normTipText();
41:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
42:       naiveBayesMultinomialText1.getNorm();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
44:       double[] doubleArray0 = new double[1];
45:       doubleArray0[0] = 1.0;
46:       int[] intArray0 = new int[9];
47:       intArray0[0] = 26;
48:       intArray0[1] = 26;
49:       intArray0[2] = 2184;
50:       intArray0[3] = 250007;
51:       intArray0[4] = 26;
52:       intArray0[5] = 26;
53:       intArray0[6] = 26;
54:       intArray0[7] = 26;
55:       intArray0[8] = 26;
56:       SparseInstance sparseInstance0 = new SparseInstance(1.0, doubleArray0, intArray0, 26);
57:       // Undeclared exception!
58:       try { 
59:         naiveBayesMultinomialText1.tokenizeInstance(sparseInstance0, true);
60:         fail("Expecting exception: RuntimeException");
61:       
62:       } catch(RuntimeException e) {
63:          //
64:          // DenseInstance doesn't have access to a dataset!
65:          //
66:          verifyException("weka.core.AbstractInstance", e);
67:       }
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_8_1574086981823/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:01.853 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_normalize = true;
naiveBayesMultinomialText0.m_useStopList = true;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
boolean boolean0 = naiveBayesMultinomialText1.m_lowercaseTokens;
naiveBayesMultinomialText1.LNormTipText();
Integer integer0 = new Integer(26);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put((Integer) null, linkedHashMap0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText1.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.getNorm();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[1];
doubleArray0[0] = 1.0;
int[] intArray0 = new int[9];
intArray0[0] = 26;
intArray0[1] = 26;
intArray0[2] = 2184;
intArray0[3] = 250007;
intArray0[4] = 26;
intArray0[5] = 26;
intArray0[6] = 26;
intArray0[7] = 26;
intArray0[8] = 26;
SparseInstance sparseInstance0 = new SparseInstance(1.0, doubleArray0, intArray0, 26);
naiveBayesMultinomialText1.tokenizeInstance(sparseInstance0, true);

[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_9_1574086981853/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_9_1574086981853/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:23:01.878 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 14:23:01.879 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_9_1574086981853/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_9_tmp__ESTest extends NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.6530523784389914
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.m_periodicP = 2445;
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       naiveBayesMultinomialText0.LNormTipText();
36:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
37:       Integer integer0 = new Integer(26);
38:       Integer.getInteger("a?", (Integer) null);
39:       hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
40:       Integer integer1 = new Integer(26);
41:       hashMap0.put(integer1, linkedHashMap0);
42:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
43:       naiveBayesMultinomialText0.pruneDictionary();
44:       naiveBayesMultinomialText0.normTipText();
45:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
46:       naiveBayesMultinomialText0.reset();
47:       naiveBayesMultinomialText1.minWordFrequencyTipText();
48:       naiveBayesMultinomialText1.tokenizerTipText();
49:       naiveBayesMultinomialText0.stemmerTipText();
50:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
51:       naiveBayesMultinomialText0.useStopListTipText();
52:       naiveBayesMultinomialText1.stopwordsTipText();
53:       Random.setNextRandom(30);
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_9_1574086981853/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:01.879 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 2445;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.LNormTipText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
Integer integer0 = new Integer(26);
Integer.getInteger("a?", (Integer) null);
hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
Integer integer1 = new Integer(26);
hashMap0.put(integer1, linkedHashMap0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText1.minWordFrequencyTipText();
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.stopwordsTipText();
Random.setNextRandom(30);

[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1574086981907/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1574086981907/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:23:01.936 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 14:23:01.937 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1574086981907/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.7535103423460603
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.m_periodicP = 2445;
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       naiveBayesMultinomialText0.LNormTipText();
36:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
37:       Integer integer0 = new Integer(26);
38:       Integer.getInteger("a?", (Integer) null);
39:       hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
40:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
41:       naiveBayesMultinomialText0.pruneDictionary();
42:       naiveBayesMultinomialText0.normTipText();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
44:       FileSystemHandling.shouldAllThrowIOExceptions();
45:       naiveBayesMultinomialText1.minWordFrequencyTipText();
46:       naiveBayesMultinomialText1.tokenizerTipText();
47:       naiveBayesMultinomialText0.stemmerTipText();
48:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
49:       NaiveBayesMultinomialText.main((String[]) null);
50:       naiveBayesMultinomialText0.useStopListTipText();
51:       naiveBayesMultinomialText1.stopwordsTipText();
52:       Random.setNextRandom((-1613));
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_11_1574086981907/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:01.937 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 2445;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.LNormTipText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
Integer integer0 = new Integer(26);
Integer.getInteger("a?", (Integer) null);
hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText1.minWordFrequencyTipText();
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText.main((String[]) null);
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.stopwordsTipText();
Random.setNextRandom((-1613));

[MASTER] 14:23:02.233 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1574086982210/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1574086982210/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:02.233 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:02.233 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:02.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 14:23:02.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 14:23:02.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:23:02.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:23:02.234 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1574086982210/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_22_tmp__ESTest extends NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.970620935502287
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.LNormTipText();
30:       Integer integer0 = new Integer(26);
31:       Integer.getInteger("across");
32:       hashMap0.put((Integer) null, linkedHashMap0);
33:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       naiveBayesMultinomialText0.normTipText();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText2.getNorm();
39:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
40:       naiveBayesMultinomialText2.setPeriodicPruning(26);
41:       naiveBayesMultinomialText2.minWordFrequencyTipText();
42:       naiveBayesMultinomialText2.tokenizerTipText();
43:       assertEquals(26, naiveBayesMultinomialText2.getPeriodicPruning());
44:       
45:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
46:       naiveBayesMultinomialText4.stemmerTipText();
47:       NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
48:       naiveBayesMultinomialText4.useStopListTipText();
49:       String string0 = naiveBayesMultinomialText0.stopwordsTipText();
50:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string0);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_22_1574086982210/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:02.235 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.LNormTipText();
Integer integer0 = new Integer(26);
Integer.getInteger("across");
hashMap0.put((Integer) null, linkedHashMap0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.getNorm();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.setPeriodicPruning(26);
naiveBayesMultinomialText2.minWordFrequencyTipText();
naiveBayesMultinomialText2.tokenizerTipText();
assertEquals(26, naiveBayesMultinomialText2.getPeriodicPruning());

NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText4.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText4.useStopListTipText();
String string0 = naiveBayesMultinomialText0.stopwordsTipText();
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string0);


[MASTER] 14:23:02.631 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1574086982612/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1574086982612/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:02.631 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:02.631 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:02.632 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:23:02.632 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:23:02.632 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 14:23:02.632 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 14:23:02.632 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 14:23:02.632 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1574086982612/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.Random;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.6474579768215314
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_periodicP = 2445;
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
34:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
36:       String string0 = naiveBayesMultinomialText0.LNormTipText();
37:       assertEquals("The LNorm to use for document length normalization.", string0);
38:       
39:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
40:       Integer integer0 = new Integer(26);
41:       Integer.getInteger("a?", (Integer) null);
42:       hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
43:       String string1 = naiveBayesMultinomialText0.normalizeDocLengthTipText();
44:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);
45:       
46:       naiveBayesMultinomialText0.pruneDictionary();
47:       String string2 = naiveBayesMultinomialText0.normTipText();
48:       assertEquals("The norm of the instances after normalization.", string2);
49:       
50:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
51:       String string3 = naiveBayesMultinomialText1.useWordFrequenciesTipText();
52:       assertEquals("Use word frequencies rather than binary bag of words representation", string3);
53:       
54:       String string4 = naiveBayesMultinomialText1.tokenizerTipText();
55:       assertEquals("The tokenizing algorithm to use on the strings.", string4);
56:       
57:       String string5 = naiveBayesMultinomialText0.stemmerTipText();
58:       assertEquals("The stemming algorithm to use on the words.", string5);
59:       
60:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
61:       String string6 = naiveBayesMultinomialText0.useStopListTipText();
62:       assertEquals("If true, ignores all words that are on the stoplist.", string6);
63:       
64:       String string7 = naiveBayesMultinomialText1.stopwordsTipText();
65:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string7);
66:       
67:       Random.setNextRandom(30);
68:       naiveBayesMultinomialText0.setStopwords((File) null);
69:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
70:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
71:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
72:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
73:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
74:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
75:   }
76: }
RegularFileObject[/tmp/EvoSuite_39_1574086982612/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:02.633 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 2445;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
String string0 = naiveBayesMultinomialText0.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string0);

FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
Integer integer0 = new Integer(26);
Integer.getInteger("a?", (Integer) null);
hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
String string1 = naiveBayesMultinomialText0.normalizeDocLengthTipText();
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);

naiveBayesMultinomialText0.pruneDictionary();
String string2 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string2);

NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String string3 = naiveBayesMultinomialText1.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string3);

String string4 = naiveBayesMultinomialText1.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string4);

String string5 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string5);

NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
String string6 = naiveBayesMultinomialText0.useStopListTipText();
assertEquals("If true, ignores all words that are on the stoplist.", string6);

String string7 = naiveBayesMultinomialText1.stopwordsTipText();
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string7);

Random.setNextRandom(30);
naiveBayesMultinomialText0.setStopwords((File) null);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_46_1574086982776/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_46_1574086982776/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:02.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:23:02.794 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_46_1574086982776/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_46_tmp__ESTest extends NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.7766234846545668
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_periodicP = 2445;
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.LNormTipText();
33:       Integer integer0 = new Integer(34);
34:       Integer.getInteger("a?", (Integer) null);
35:       Integer.remainderUnsigned(34, 2445);
36:       hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
37:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
38:       // Undeclared exception!
39:       try { 
40:         naiveBayesMultinomialText0.pruneDictionary();
41:         fail("Expecting exception: NullPointerException");
42:       
43:       } catch(NullPointerException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_46_1574086982776/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:02.794 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 2445;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.LNormTipText();
Integer integer0 = new Integer(34);
Integer.getInteger("a?", (Integer) null);
Integer.remainderUnsigned(34, 2445);
hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 14:23:03.161 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_60_1574086983143/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_60_1574086983143/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.java]]
[MASTER] 14:23:03.161 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:03.161 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:23:03.162 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:23:03.162 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:23:03.162 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:23:03.162 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:23:03.162 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:23:03.162 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_60_1574086983143/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 14:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_60_tmp__ESTest extends NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.230141847473029
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.m_periodicP = (-3515);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       naiveBayesMultinomialText0.LNormTipText();
35:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
36:       Integer integer0 = new Integer(26);
37:       Integer.remainderUnsigned(26, (-3515));
38:       hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
39:       naiveBayesMultinomialText0.tokenizerTipText();
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       naiveBayesMultinomialText0.normTipText();
42:       naiveBayesMultinomialText0.getNorm();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
44:       naiveBayesMultinomialText1.m_inputVector = naiveBayesMultinomialText0.m_inputVector;
45:       naiveBayesMultinomialText0.minWordFrequencyTipText();
46:       naiveBayesMultinomialText1.tokenizerTipText();
47:       naiveBayesMultinomialText0.stemmerTipText();
48:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
49:       naiveBayesMultinomialText1.useStopListTipText();
50:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
51:       naiveBayesMultinomialText3.setLowercaseTokens(true);
52:       assertTrue(naiveBayesMultinomialText3.getLowercaseTokens());
53:       
54:       naiveBayesMultinomialText1.getOptions();
55:       String string0 = naiveBayesMultinomialText1.useStopListTipText();
56:       assertEquals("If true, ignores all words that are on the stoplist.", string0);
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_60_1574086983143/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 14:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.core.logging.Logger$Level",
95:       "weka.core.neighboursearch.CoverTree$DistanceNode",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.stemmers.Stemmer",
99:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.core.ChebyshevDistance",
103:       "weka.core.neighboursearch.CoverTree$MyHeap",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.BinarySparseInstance",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.estimators.DiscreteEstimator",
135:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.core.neighboursearch.CoverTree",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.core.Range",
144:       "weka.core.PartitionGenerator",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.core.stemmers.LovinsStemmer",
155:       "weka.classifiers.Evaluation",
156:       "weka.classifiers.functions.supportVector.Kernel",
157:       "weka.core.WekaPackageManager",
158:       "weka.filters.SupervisedFilter",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.core.neighboursearch.PerformanceStats",
164:       "weka.estimators.KernelEstimator",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.core.tokenizers.NGramTokenizer",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.trees.RandomTree",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.classifiers.meta.RandomCommittee",
177:       "weka.core.ProtectedProperties",
178:       "weka.estimators.Estimator",
179:       "weka.core.StringLocator",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.core.neighboursearch.covertrees.Stack",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.Stemming",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.classifiers.lazy.IBk",
200:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
201:       "weka.filters.Filter",
202:       "weka.filters.supervised.attribute.Discretize"
203:     );
204:   } 
205: 
206:   private static void resetClasses() {
207:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader()); 
208: 
209:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
210:       "weka.classifiers.AbstractClassifier",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
213:       "weka.core.Capabilities$Capability",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
216:       "weka.core.tokenizers.WordTokenizer",
217:       "weka.core.stemmers.NullStemmer",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.Utils",
220:       "weka.core.Option",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.core.Range",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.stemmers.SnowballStemmer",
232:       "weka.core.stemmers.Stemming",
233:       "weka.core.RevisionUtils",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.DenseInstance",
236:       "weka.classifiers.trees.RandomForest",
237:       "weka.classifiers.SingleClassifierEnhancer",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.classifiers.bayes.NaiveBayesMultinomial",
241:       "weka.core.Instances",
242:       "weka.core.Stopwords",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.converters.ArffLoader$ArffReader",
255:       "weka.core.tokenizers.NGramTokenizer",
256:       "weka.classifiers.RandomizableClassifier",
257:       "weka.core.Tag",
258:       "weka.classifiers.functions.SGDText",
259:       "weka.core.SelectedTag",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.misc.SerializedClassifier",
270:       "weka.core.TestInstances",
271:       "weka.classifiers.IteratedSingleClassifierEnhancer",
272:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
273:       "weka.classifiers.meta.LogitBoost",
274:       "weka.classifiers.trees.DecisionStump",
275:       "weka.core.FindWithCapabilities",
276:       "weka.core.SingleIndex",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.Attribute",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
286:       "weka.classifiers.meta.CostSensitiveClassifier",
287:       "weka.classifiers.CostMatrix",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.classifiers.meta.FilteredClassifier",
290:       "weka.filters.supervised.attribute.AttributeSelection",
291:       "weka.attributeSelection.AttributeSelection",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.attributeSelection.GreedyStepwise",
294:       "weka.classifiers.trees.J48",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.ClassDiscovery",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
305:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.meta.RandomCommittee",
308:       "weka.classifiers.trees.RandomTree",
309:       "weka.core.SerializedObject",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.rules.JRip",
313:       "weka.filters.AllFilter",
314:       "weka.classifiers.functions.Logistic",
315:       "weka.core.neighboursearch.LinearNNSearch",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.lazy.IBk",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.CachedKernel",
321:       "weka.classifiers.functions.supportVector.RBFKernel",
322:       "weka.core.Queue",
323:       "weka.core.AttributeLocator",
324:       "weka.core.StringLocator",
325:       "weka.core.RelationalLocator",
326:       "weka.core.ContingencyTables",
327:       "weka.core.FastVector",
328:       "weka.core.Queue$QueueNode",
329:       "weka.classifiers.functions.SimpleLinearRegression",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.classifiers.meta.CVParameterSelection",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
336:       "weka.classifiers.meta.MultiScheme",
337:       "weka.attributeSelection.GainRatioAttributeEval",
338:       "weka.core.tokenizers.AlphabeticTokenizer",
339:       "weka.attributeSelection.OneRAttributeEval",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.DiscreteEstimator",
342:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
343:       "weka.classifiers.bayes.net.BIFReader",
344:       "weka.classifiers.meta.Vote",
345:       "weka.estimators.KernelEstimator",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.meta.RegressionByDiscretization",
348:       "weka.filters.unsupervised.attribute.Discretize",
349:       "weka.classifiers.trees.j48.ClassifierTree",
350:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.core.ChebyshevDistance",
356:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
357:       "weka.attributeSelection.BestFirst$LinkedList2",
358:       "weka.classifiers.rules.DecisionTableHashKey",
359:       "weka.attributeSelection.BestFirst$Link2",
360:       "weka.filters.unsupervised.attribute.Remove",
361:       "weka.classifiers.rules.OneR",
362:       "weka.estimators.PoissonEstimator",
363:       "weka.core.AttributeStats",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.meta.RandomSubSpace",
376:       "weka.core.Javadoc",
377:       "weka.core.OptionHandlerJavadoc",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.core.ClassCache",
380:       "weka.core.AllJavadoc",
381:       "weka.classifiers.rules.PART",
382:       "weka.classifiers.rules.part.MakeDecList",
383:       "weka.core.MinkowskiDistance",
384:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
385:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.meta.Stacking",
387:       "weka.classifiers.trees.LMT",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.functions.GaussianProcesses",
390:       "weka.classifiers.bayes.NaiveBayesUpdateable",
391:       "weka.classifiers.meta.Bagging",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.classifiers.functions.VotedPerceptron"
395:     );
396:   }
397: }

[MASTER] 14:23:03.163 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = (-3515);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.LNormTipText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
Integer integer0 = new Integer(26);
Integer.remainderUnsigned(26, (-3515));
hashMap0.put(integer0, naiveBayesMultinomialText0.m_inputVector);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.getNorm();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.m_inputVector = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.useStopListTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.setLowercaseTokens(true);
assertTrue(naiveBayesMultinomialText3.getLowercaseTokens());

naiveBayesMultinomialText1.getOptions();
String string0 = naiveBayesMultinomialText1.useStopListTipText();
assertEquals("If true, ignores all words that are on the stoplist.", string0);


[MASTER] 14:23:04.723 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 14:23:04.785 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 14:23:08.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2529> but was:<6>
[MASTER] 14:23:08.822 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[5];
doubleArray0[0] = (double) 0;
doubleArray0[1] = 2.0;
doubleArray0[2] = (double) 0;
doubleArray0[3] = (double) 0;
doubleArray0[0] = 2.0;
SparseInstance sparseInstance0 = new SparseInstance(2.0, doubleArray0);
assertEquals(2529, AbstractInstance.s_numericAfterDecimalPoint);

AbstractInstance.s_numericAfterDecimalPoint = (-2483);
SparseInstance sparseInstance1 = new SparseInstance(1);
SparseInstance sparseInstance2 = new SparseInstance(sparseInstance1);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((Instance) sparseInstance2);
binarySparseInstance0.deleteAttributeAt((-2483));
BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
binarySparseInstance0.isMissing((-3099));
DenseInstance denseInstance0 = new DenseInstance(sparseInstance2);
FileSystemHandling.shouldAllThrowIOExceptions();
BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(0.0, doubleArray0);
binarySparseInstance2.copy();
DenseInstance denseInstance1 = new DenseInstance(binarySparseInstance2);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
assertFalse(naiveBayesMultinomialText0.getUseStopList());


* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10118
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:23:51.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:23:51.725 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:23:51.726 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:23:52.164 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:23:52.665 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:23:52.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:23:54.087 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:23:54.116 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:23:54.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:23:54.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:23:54.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:23:54.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:23:54.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:23:54.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:23:54.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:23:54.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:23:54.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 14:24:27.864 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 844s and 76 generations, 63457 statements, best individual has fitness: 14856.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 825
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 365
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 64
* Number of covered goals: 64
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 424
* Number of covered goals: 277
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 336
* Generated 140 tests with total length 3140
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 14:46:12.074 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:46:12.437 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:46:12.437 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 14:46:13.072 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10120
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:47:12.648 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:47:12.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:47:12.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:47:12.692 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
* Search finished after 854s and 24 generations, 31719 statements, best individual has fitness: 2808.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 618
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 409
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 613
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 244
* Number of covered goals: 93
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 124
* Number of covered goals: 117
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 124
* Number of covered goals: 117
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 386
* Generated 149 tests with total length 3876
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:07:08.947 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6818354166666667% of time used, but only 45/149 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
[MASTER] 15:08:38.905 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10115
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10116
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:26:48.092 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:26:48.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:26:48.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:26:48.264 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:26:48.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:26:48.295 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
[MASTER] 15:26:49.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:26:49.266 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:26:49.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 15:26:50.355 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:26:50.715 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:26:50.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 262
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 263
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 264
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 265
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 266
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 267
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 268
[MASTER] 15:26:55.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 270
[MASTER] 15:26:55.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 439
[MASTER] 15:26:55.867 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 440
[MASTER] 15:26:55.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 441
[MASTER] 15:26:55.882 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 972
[MASTER] 15:26:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 973
[MASTER] 15:26:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 974
[MASTER] 15:26:55.885 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch
[MASTER] 15:26:55.886 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: root-Branch
[MASTER] 15:26:55.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch
[MASTER] 15:26:55.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:263 - ReplaceConstant - William W. Cohen -> 
[MASTER] 15:26:55.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 9: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:264 - ReplaceConstant - Fast Effective Rule Induction -> 
[MASTER] 15:26:55.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:265 - ReplaceConstant - Twelfth International Conference on Machine Learning -> 
[MASTER] 15:26:55.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 11: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:266 - ReplaceConstant - 1995 -> 
[MASTER] 15:26:55.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 12: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:267 - ReplaceConstant - 115-123 -> 
[MASTER] 15:26:55.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 13: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:268 - ReplaceConstant - Morgan Kaufmann -> 
[MASTER] 15:26:55.906 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 180: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:439 - ReplaceConstant - 1 -> 0
[MASTER] 15:26:55.907 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 181: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:440 - ReplaceConstant - measureNumRules -> 
[MASTER] 15:26:55.918 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 891: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> cover
[MASTER] 15:26:55.919 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 892: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accu
[MASTER] 15:26:55.920 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 893: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accuRate
[MASTER] 15:26:55.920 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 894: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> maxInfoGain
[MASTER] 15:26:55.921 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 895: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - InsertUnaryOp Negation
[MASTER] 15:26:55.922 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:NonNull:weka.core.TechnicalInformation:hasAdditional()Z:False
[MASTER] 15:26:55.922 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:NonNull
[MASTER] 15:26:55.924 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 15:26:55.924 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 15:26:55.925 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 15:26:55.927 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 15:26:55.927 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 15:26:55.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 15:26:55.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch in context: weka.classifiers.rules.JRip:getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 15:26:55.930 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: root-Branch in context: weka.classifiers.rules.JRip:enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 15:26:55.932 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch in context: 
[MASTER] 15:27:26.226 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 15:28:42.894 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 15:28:56.352 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 15:32:09.118 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 842s and 183 generations, 205963 statements, best individual has fitness: 3496.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 370
* Number of covered goals: 292
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 242
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 713
* Number of covered goals: 550
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 242
* Number of covered goals: 163
* Generated 84 tests with total length 2358
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 842s and 217 generations, 210660 statements, best individual has fitness: 11896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 705
* Number of covered goals: 293
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 416
* Number of covered goals: 133
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 993
* Number of covered goals: 571
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 116
* Generated 82 tests with total length 2009
* Resulting test suite's coverage: 47% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 15:42:24.545 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:42:24.641 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:42:24.741 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:42:24.741 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 33%
* Compiling and checking tests
[MASTER] 15:44:14.050 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1574091854009/weka/filters/unsupervised/attribute/Discretize_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1574091854009/weka/filters/unsupervised/attribute/Discretize_41_tmp__ESTest_scaffolding.java]]
[MASTER] 15:44:14.050 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:44:14.050 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:44:14.053 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable boolean2
  location: class weka.filters.unsupervised.attribute.Discretize_41_tmp__ESTest: 57
[MASTER] 15:44:14.053 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1574091854009/weka/filters/unsupervised/attribute/Discretize_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 15:44:14 GMT 2019
4:  */
5: 
6: package weka.filters.unsupervised.attribute;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.LinkedList;
13: import java.util.List;
14: import java.util.Locale;
15: import java.util.function.Predicate;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: import weka.core.Attribute;
20: import weka.core.Instances;
21: import weka.filters.unsupervised.attribute.Discretize;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class Discretize_41_tmp__ESTest extends Discretize_41_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.9506931213966805
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
33:       Locale locale0 = Locale.FRENCH;
34:       LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
35:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
36:       Predicate<Object> predicate0 = Predicate.isEqual((Object) locale_FilteringMode0);
37:       linkedList0.removeIf(predicate0);
38:       List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
39:       Locale.filter((List<Locale.LanguageRange>) arrayList0, (Collection<Locale>) list0);
40:       Locale.getISOCountries();
41:       ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
42:       Instances instances0 = new Instances("s|&%'g/[Q[", arrayList1, 72);
43:       LinkedList<String> linkedList1 = new LinkedList<String>();
44:       Attribute attribute0 = new Attribute("@relation", linkedList1, 82);
45:       arrayList1.add(attribute0);
46:       Attribute attribute1 = new Attribute("-R <col1,col2-col4,...>", linkedList1, 2647);
47:       arrayList1.add(attribute1);
48:       Instances instances1 = new Instances("~M?O~s{,bga1e", arrayList1, 0);
49:       Discretize discretize0 = new Discretize();
50:       assertFalse(discretize0.getMakeBinary());
51:       
52:       boolean boolean0 = discretize0.setInputFormat(instances0);
53:       assertFalse(boolean0);
54:       
55:       discretize0.batchFinished();
56:       boolean boolean1 = discretize0.m_UseBinNumbers;
57:       assertTrue(boolean1 == boolean2);
58:       
59:       discretize0.calculateCutPoints();
60:       assertTrue(discretize0.isNewBatch());
61:       
62:       ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
63:       Discretize discretize1 = new Discretize();
64:       assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
65:       assertEquals(10, discretize1.getBins());
66:       assertFalse(discretize1.getFindNumBins());
67:   }
68: }
RegularFileObject[/tmp/EvoSuite_41_1574091854009/weka/filters/unsupervised/attribute/Discretize_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 15:44:14 GMT 2019
5:  */
6: 
7: package weka.filters.unsupervised.attribute;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Discretize_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.filters.unsupervised.attribute.Discretize"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Discretize_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "org.pentaho.packageManagement.PackageConstraint",
90:       "org.pentaho.packageManagement.Package",
91:       "weka.core.OptionHandler",
92:       "weka.core.WekaException",
93:       "weka.core.Range",
94:       "weka.filters.UnsupervisedFilter",
95:       "weka.core.logging.Logger$Level",
96:       "weka.core.Attribute$1",
97:       "weka.core.scripting.JythonSerializableObject",
98:       "weka.core.Capabilities$Capability",
99:       "weka.core.SparseInstance",
100:       "weka.core.DenseInstance",
101:       "org.pentaho.packageManagement.PackageManager",
102:       "weka.core.WekaEnumeration",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "weka.core.WekaPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.Option",
107:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
108:       "weka.core.RelationalLocator",
109:       "weka.filters.Sourcable",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.Attribute",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.core.FastVector",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.AttributeLocator",
119:       "weka.core.BinarySparseInstance",
120:       "weka.core.UnassignedDatasetException",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Queue$QueueNode",
124:       "weka.core.RevisionUtils",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Instance",
127:       "weka.core.ProtectedProperties",
128:       "weka.core.StringLocator",
129:       "weka.core.AttributeStats",
130:       "weka.core.WeightedInstancesHandler",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.filters.unsupervised.attribute.Discretize",
133:       "weka.core.AbstractInstance",
134:       "weka.core.Instances",
135:       "weka.core.scripting.JythonObject",
136:       "org.pentaho.packageManagement.DefaultPackage",
137:       "weka.core.UnassignedClassException",
138:       "weka.core.Queue",
139:       "weka.core.Version",
140:       "weka.core.UnsupportedAttributeTypeException",
141:       "weka.core.RevisionHandler",
142:       "weka.filters.Filter"
143:     );
144:   } 
145: 
146:   private static void resetClasses() {
147:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Discretize_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
148: 
149:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
150:       "weka.filters.Filter",
151:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
152:       "weka.filters.unsupervised.attribute.Discretize",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.Range",
155:       "weka.core.Option",
156:       "weka.core.Instances",
157:       "weka.core.RevisionUtils",
158:       "weka.core.AbstractInstance",
159:       "weka.core.SparseInstance",
160:       "weka.core.BinarySparseInstance",
161:       "weka.core.DenseInstance",
162:       "weka.core.Utils",
163:       "weka.core.Queue",
164:       "weka.core.SerializedObject",
165:       "weka.core.Capabilities",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "org.pentaho.packageManagement.DefaultPackageManager",
168:       "weka.core.Version",
169:       "weka.core.Environment",
170:       "weka.core.WekaPackageManager",
171:       "weka.core.converters.ConverterUtils$DataSource",
172:       "weka.core.converters.AbstractLoader",
173:       "weka.core.converters.AbstractFileLoader",
174:       "weka.core.converters.ArffLoader",
175:       "weka.core.converters.ArffLoader$ArffReader",
176:       "weka.core.WekaException",
177:       "weka.filters.AllFilter",
178:       "weka.core.FastVector",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.Attribute",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.AttributeLocator",
183:       "weka.core.StringLocator",
184:       "weka.core.RelationalLocator",
185:       "weka.filters.SimpleFilter",
186:       "weka.filters.SimpleStreamFilter",
187:       "weka.filters.MultiFilter",
188:       "weka.core.WekaEnumeration",
189:       "weka.core.Attribute$1",
190:       "weka.core.UnassignedClassException",
191:       "weka.core.Queue$QueueNode",
192:       "weka.core.AttributeStats",
193:       "weka.experiment.Stats"
194:     );
195:   }
196: }

[MASTER] 15:44:14.055 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
Locale locale0 = Locale.FRENCH;
LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
Predicate<Object> predicate0 = Predicate.isEqual((Object) locale_FilteringMode0);
linkedList0.removeIf(predicate0);
List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
Locale.filter((List<Locale.LanguageRange>) arrayList0, (Collection<Locale>) list0);
Locale.getISOCountries();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
Instances instances0 = new Instances("s|&%'g/[Q[", arrayList1, 72);
LinkedList<String> linkedList1 = new LinkedList<String>();
Attribute attribute0 = new Attribute("@relation", linkedList1, 82);
arrayList1.add(attribute0);
Attribute attribute1 = new Attribute("-R <col1,col2-col4,...>", linkedList1, 2647);
arrayList1.add(attribute1);
Instances instances1 = new Instances("~M?O~s{,bga1e", arrayList1, 0);
Discretize discretize0 = new Discretize();
assertFalse(discretize0.getMakeBinary());

boolean boolean0 = discretize0.setInputFormat(instances0);
assertFalse(boolean0);

discretize0.batchFinished();
boolean boolean1 = discretize0.m_UseBinNumbers;
assertTrue(boolean1 == boolean2);

discretize0.calculateCutPoints();
assertTrue(discretize0.isNewBatch());

ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
Discretize discretize1 = new Discretize();
assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
assertEquals(10, discretize1.getBins());
assertFalse(discretize1.getFindNumBins());


[MASTER] 15:44:15.965 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:44:16.237 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:44:24.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 15:44:24.491 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
String string0 = null;
Instances instances0 = new Instances((String) null, arrayList0, 1895);
LinkedList<String> linkedList0 = new LinkedList<String>();
Attribute attribute0 = new Attribute("@data");
attribute0.addRelation(instances0);
arrayList0.add(attribute0);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute1 = new Attribute("@end", linkedList0, protectedProperties0);
Attribute attribute2 = new Attribute("'", linkedList0, 0);
Attribute attribute3 = new Attribute("relational", instances0);
arrayList0.add(attribute3);
Instances instances1 = new Instances("Y", arrayList0, 1);
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
Discretize discretize1 = new Discretize();
discretize0.setInputFormat(instances1);

[MASTER] 15:44:28.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 15:44:28.740 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1962;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances((String) null, arrayList0, 1962);
Attribute attribute0 = new Attribute(".arff", instances0, 1962);
Attribute.typeToString(0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
attribute0.addRelation(instances0);
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)83;
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
arrayList0.add(attribute0);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
Discretize discretize0 = new Discretize();
double double0 = 119.85971640902;
attribute0.isInRange(119.85971640902);
discretize0.setInputFormat(instances0);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
