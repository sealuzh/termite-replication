* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:48:00.905 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:48:00.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:48:00.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:48:00.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:01:32.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setMeanPrec(I)V: Line 599
[MASTER] 07:01:32.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setMeanPrec(I)V: Line 600
[MASTER] 07:01:32.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setMeanPrec(I)V: Line 601
[MASTER] 07:01:32.219 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setShowStdDev(Z)V: Line 903
[MASTER] 07:01:32.220 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setShowStdDev(Z)V: Line 904
[MASTER] 07:01:32.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintColNames(Z)V: Line 1017
[MASTER] 07:01:32.231 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintColNames(Z)V: Line 1018
[MASTER] 07:01:33.513 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintColNames(Z)V: Line 1019
[MASTER] 07:01:33.515 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintColNames(Z)V: Line 1020
[MASTER] 07:01:33.521 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintRowNames(Z)V: Line 1058
[MASTER] 07:01:33.522 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintRowNames(Z)V: Line 1059
[MASTER] 07:01:33.524 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintRowNames(Z)V: Line 1060
[MASTER] 07:01:33.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setPrintRowNames(Z)V: Line 1061
[MASTER] 07:01:33.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1213
[MASTER] 07:01:33.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1214
[MASTER] 07:01:33.555 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1247
[MASTER] 07:01:33.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1249
[MASTER] 07:01:33.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1250
[MASTER] 07:01:33.559 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1251
[MASTER] 07:01:34.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1253
[MASTER] 07:01:34.537 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1255
[MASTER] 07:01:34.538 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1256
[MASTER] 07:01:34.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1260
[MASTER] 07:01:34.541 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1264
[MASTER] 07:01:34.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1294
[MASTER] 07:01:34.543 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1296
[MASTER] 07:01:34.544 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1297
[MASTER] 07:01:34.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1298
[MASTER] 07:01:34.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1300
[MASTER] 07:01:34.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1302
[MASTER] 07:01:34.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1303
[MASTER] 07:01:34.550 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1307
[MASTER] 07:01:34.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;: Line 1311
[MASTER] 07:01:34.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setColHidden(IZ)V: Line 1321
[MASTER] 07:01:34.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setColHidden(IZ)V: Line 1322
[MASTER] 07:01:34.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setColHidden(IZ)V: Line 1323
[MASTER] 07:01:34.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setRowHidden(IZ)V: Line 1346
[MASTER] 07:01:34.559 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setRowHidden(IZ)V: Line 1347
[MASTER] 07:01:34.561 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setRowHidden(IZ)V: Line 1348
[MASTER] 07:01:34.563 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowHidden(I)Z: Line 1359
[MASTER] 07:01:34.564 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getCount(I)D: Line 1382
[MASTER] 07:01:34.565 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getCount(I)D: Line 1383
[MASTER] 07:01:34.566 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setMean(IID)V: Line 1396
[MASTER] 07:01:34.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setMean(IID)V: Line 1398
[MASTER] 07:01:34.568 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setMean(IID)V: Line 1399
[MASTER] 07:01:34.569 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getMean(II)D: Line 1410
[MASTER] 07:01:34.570 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getMean(II)D: Line 1412
[MASTER] 07:01:34.572 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setStdDev(IID)V: Line 1455
[MASTER] 07:01:34.573 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setStdDev(IID)V: Line 1457
[MASTER] 07:01:34.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setStdDev(IID)V: Line 1458
[MASTER] 07:01:34.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getStdDev(II)D: Line 1469
[MASTER] 07:01:34.577 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getStdDev(II)D: Line 1471
[MASTER] 07:01:34.578 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSignificance(III)V: Line 1484
[MASTER] 07:01:34.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSignificance(III)V: Line 1486
[MASTER] 07:01:34.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSignificance(III)V: Line 1487
[MASTER] 07:01:34.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificance(II)I: Line 1498
[MASTER] 07:01:34.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificance(II)I: Line 1500
[MASTER] 07:01:34.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1517
[MASTER] 07:01:34.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1519
[MASTER] 07:01:34.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1520
[MASTER] 07:01:34.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1521
[MASTER] 07:01:34.839 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1522
[MASTER] 07:01:34.840 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1525
[MASTER] 07:01:34.842 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1528
[MASTER] 07:01:34.844 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1529
[MASTER] 07:01:34.845 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceCount(II)I: Line 1533
[MASTER] 07:01:34.846 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowOrder()[I: Line 1567
[MASTER] 07:01:34.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayRow(I)I: Line 1579
[MASTER] 07:01:34.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayRow(I)I: Line 1580
[MASTER] 07:01:34.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1655
[MASTER] 07:01:34.856 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1658
[MASTER] 07:01:34.857 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1659
[MASTER] 07:01:34.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1662
[MASTER] 07:01:34.859 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1663
[MASTER] 07:01:34.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1664
[MASTER] 07:01:34.861 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: Line 1666
[MASTER] 07:01:34.864 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;I)Ljava/lang/String;: Line 1694
[MASTER] 07:01:34.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1710
[MASTER] 07:01:34.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1713
[MASTER] 07:01:34.867 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1714
[MASTER] 07:01:34.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1715
[MASTER] 07:01:34.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1717
[MASTER] 07:01:34.870 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1721
[MASTER] 07:01:35.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1722
[MASTER] 07:01:35.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: Line 1724
[MASTER] 07:01:35.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1755
[MASTER] 07:01:35.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1757
[MASTER] 07:01:35.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1758
[MASTER] 07:01:35.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1761
[MASTER] 07:01:35.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1762
[MASTER] 07:01:35.807 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1764
[MASTER] 07:01:35.808 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1765
[MASTER] 07:01:35.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: Line 1769
[MASTER] 07:01:35.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1817
[MASTER] 07:01:35.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1827
[MASTER] 07:01:35.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1828
[MASTER] 07:01:35.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1829
[MASTER] 07:01:35.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1831
[MASTER] 07:01:35.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1833
[MASTER] 07:01:35.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1835
[MASTER] 07:01:35.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1836
[MASTER] 07:01:35.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1837
[MASTER] 07:01:35.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1840
[MASTER] 07:01:35.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1841
[MASTER] 07:01:35.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1847
[MASTER] 07:01:36.105 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1848
[MASTER] 07:01:36.107 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1849
[MASTER] 07:01:36.108 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1851
[MASTER] 07:01:36.112 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1858
[MASTER] 07:01:36.113 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1859
[MASTER] 07:01:36.114 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1860
[MASTER] 07:01:36.115 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1862
[MASTER] 07:01:36.116 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1863
[MASTER] 07:01:36.117 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1864
[MASTER] 07:01:36.118 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1865
[MASTER] 07:01:36.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1866
[MASTER] 07:01:36.120 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1869
[MASTER] 07:01:36.121 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1872
[MASTER] 07:01:36.122 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1875
[MASTER] 07:01:36.123 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1876
[MASTER] 07:01:36.124 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1879
[MASTER] 07:01:36.125 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1880
[MASTER] 07:01:36.127 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1882
[MASTER] 07:01:36.128 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1885
[MASTER] 07:01:36.129 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1886
[MASTER] 07:01:36.130 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1890
[MASTER] 07:01:36.131 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1894
[MASTER] 07:01:36.132 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1896
[MASTER] 07:01:36.133 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1897
[MASTER] 07:01:36.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1899
[MASTER] 07:01:36.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1900
[MASTER] 07:01:36.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1902
[MASTER] 07:01:36.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1906
[MASTER] 07:01:36.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1909
[MASTER] 07:01:36.145 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1949
[MASTER] 07:01:36.427 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1950
[MASTER] 07:01:36.429 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1951
[MASTER] 07:01:36.431 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1954
[MASTER] 07:01:36.433 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1955
[MASTER] 07:01:36.434 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1958
[MASTER] 07:01:36.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1959
[MASTER] 07:01:36.437 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1960
[MASTER] 07:01:36.438 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1964
[MASTER] 07:01:36.439 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1969
[MASTER] 07:01:36.444 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1980
[MASTER] 07:01:36.447 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1985
[MASTER] 07:01:36.448 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1987
[MASTER] 07:01:36.449 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1989
[MASTER] 07:01:36.450 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2011
[MASTER] 07:01:36.451 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2012
[MASTER] 07:01:36.453 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2013
[MASTER] 07:01:36.454 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2016
[MASTER] 07:01:36.455 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2018
[MASTER] 07:01:36.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2019
[MASTER] 07:01:36.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2021
[MASTER] 07:01:36.458 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2022
[MASTER] 07:01:36.459 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isMean(I)Z: Line 2024
[MASTER] 07:01:36.460 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isAverage(I)Z: Line 2036
[MASTER] 07:01:36.461 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isAverage(I)Z: Line 2039
[MASTER] 07:01:36.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2078
[MASTER] 07:01:36.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2079
[MASTER] 07:01:36.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2080
[MASTER] 07:01:36.465 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2081
[MASTER] 07:01:36.466 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2083
[MASTER] 07:01:36.467 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2084
[MASTER] 07:01:36.468 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2086
[MASTER] 07:01:36.726 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2089
[MASTER] 07:01:36.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2090
[MASTER] 07:01:36.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.isSignificance(I)Z: Line 2092
[MASTER] 07:01:36.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: Line 2130
[MASTER] 07:01:36.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: Line 2131
[MASTER] 07:01:36.742 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: Line 2132
[MASTER] 07:01:36.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: Line 2135
[MASTER] 07:01:36.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: Line 2136
[MASTER] 07:01:36.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: Line 2138
[MASTER] 07:01:37.085 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 643: weka.experiment.ResultMatrix.setMeanPrec(I)V:599 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.113 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1077: weka.experiment.ResultMatrix.setPrintColNames(Z)V:1018 - ReplaceComparisonOperator != -> ==
[MASTER] 07:01:37.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1078: weka.experiment.ResultMatrix.setPrintColNames(Z)V:1019 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:37.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1106: weka.experiment.ResultMatrix.setPrintRowNames(Z)V:1059 - ReplaceComparisonOperator != -> ==
[MASTER] 07:01:37.377 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1107: weka.experiment.ResultMatrix.setPrintRowNames(Z)V:1060 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:37.392 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1227: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1245: weka.experiment.ResultMatrix.getVisibleRowCount()I:1213 - ReplaceComparisonOperator != -> ==
[MASTER] 07:01:37.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1332: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.400 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1333: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.401 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1348: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.402 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1351: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1250 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:37.403 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1367: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1255 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:37.404 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1386: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:37.405 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1387: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> %
[MASTER] 07:01:37.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1388: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> -
[MASTER] 07:01:37.407 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1389: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> *
[MASTER] 07:01:37.408 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1390: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> /
[MASTER] 07:01:37.409 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1395: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceConstant -   -> 
[MASTER] 07:01:37.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1480: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1296 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.411 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1481: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1296 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1496: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1296 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.413 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1499: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1297 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:37.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1515: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1302 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:37.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1534: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1303 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:37.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1535: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1303 - ReplaceArithmeticOperator + -> %
[MASTER] 07:01:37.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1536: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1303 - ReplaceArithmeticOperator + -> -
[MASTER] 07:01:37.418 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1537: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1303 - ReplaceArithmeticOperator + -> *
[MASTER] 07:01:37.666 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1538: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1303 - ReplaceArithmeticOperator + -> /
[MASTER] 07:01:37.668 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1543: weka.experiment.ResultMatrix.getRowName(I)Ljava/lang/String;:1303 - ReplaceConstant -   -> 
[MASTER] 07:01:37.669 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1572: weka.experiment.ResultMatrix.setColHidden(IZ)V:1321 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.670 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1586: weka.experiment.ResultMatrix.setColHidden(IZ)V:1321 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.672 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1627: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1673: weka.experiment.ResultMatrix.setRowHidden(IZ)V:1346 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1687: weka.experiment.ResultMatrix.setRowHidden(IZ)V:1346 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1744: weka.experiment.ResultMatrix.getRowHidden(I)Z:1358 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1825: weka.experiment.ResultMatrix.getCount(I)D:1382 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1826: weka.experiment.ResultMatrix.getCount(I)D:1382 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1841: weka.experiment.ResultMatrix.getCount(I)D:1382 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1876: weka.experiment.ResultMatrix.setMean(IID)V:1396 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1877: weka.experiment.ResultMatrix.setMean(IID)V:1396 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1893: weka.experiment.ResultMatrix.setMean(IID)V:1396 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.686 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1912: weka.experiment.ResultMatrix.setMean(IID)V:1396 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.687 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1913: weka.experiment.ResultMatrix.setMean(IID)V:1396 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.688 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1929: weka.experiment.ResultMatrix.setMean(IID)V:1396 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.689 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1980: weka.experiment.ResultMatrix.getMean(II)D:1410 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.690 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1981: weka.experiment.ResultMatrix.getMean(II)D:1410 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.691 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1997: weka.experiment.ResultMatrix.getMean(II)D:1410 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.692 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2016: weka.experiment.ResultMatrix.getMean(II)D:1410 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.693 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2017: weka.experiment.ResultMatrix.getMean(II)D:1410 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2033: weka.experiment.ResultMatrix.getMean(II)D:1410 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.695 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2239: weka.experiment.ResultMatrix.setStdDev(IID)V:1455 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.696 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2240: weka.experiment.ResultMatrix.setStdDev(IID)V:1455 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2256: weka.experiment.ResultMatrix.setStdDev(IID)V:1455 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.698 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2275: weka.experiment.ResultMatrix.setStdDev(IID)V:1455 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.699 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2276: weka.experiment.ResultMatrix.setStdDev(IID)V:1455 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.700 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2292: weka.experiment.ResultMatrix.setStdDev(IID)V:1455 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.701 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2343: weka.experiment.ResultMatrix.getStdDev(II)D:1469 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2344: weka.experiment.ResultMatrix.getStdDev(II)D:1469 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.703 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2360: weka.experiment.ResultMatrix.getStdDev(II)D:1469 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.704 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2379: weka.experiment.ResultMatrix.getStdDev(II)D:1469 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.705 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2380: weka.experiment.ResultMatrix.getStdDev(II)D:1469 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.977 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2396: weka.experiment.ResultMatrix.getStdDev(II)D:1469 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.979 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2449: weka.experiment.ResultMatrix.setSignificance(III)V:1484 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.981 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2450: weka.experiment.ResultMatrix.setSignificance(III)V:1484 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.982 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2467: weka.experiment.ResultMatrix.setSignificance(III)V:1484 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.983 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2487: weka.experiment.ResultMatrix.setSignificance(III)V:1484 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2488: weka.experiment.ResultMatrix.setSignificance(III)V:1484 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.985 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2505: weka.experiment.ResultMatrix.setSignificance(III)V:1484 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2574: weka.experiment.ResultMatrix.getSignificance(II)I:1498 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.987 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2575: weka.experiment.ResultMatrix.getSignificance(II)I:1498 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.988 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2591: weka.experiment.ResultMatrix.getSignificance(II)I:1498 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.989 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2610: weka.experiment.ResultMatrix.getSignificance(II)I:1498 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.990 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2611: weka.experiment.ResultMatrix.getSignificance(II)I:1498 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.991 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2627: weka.experiment.ResultMatrix.getSignificance(II)I:1498 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2663: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1517 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:37.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2681: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1519 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:37.994 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2682: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1519 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:37.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2699: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1519 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.996 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2702: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1520 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:37.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2720: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1520 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:37.998 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2721: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1520 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:37.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2740: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1521 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2775: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1525 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.001 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2827: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1528 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:38.002 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2828: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1528 - ReplaceComparisonOperator != -> <
[MASTER] 07:01:38.003 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2829: weka.experiment.ResultMatrix.getSignificanceCount(II)I:1528 - ReplaceComparisonOperator != -> >
[MASTER] 07:01:38.004 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2958: weka.experiment.ResultMatrix.getDisplayRow(I)I:1578 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:38.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2959: weka.experiment.ResultMatrix.getDisplayRow(I)I:1578 - ReplaceComparisonOperator < -> <=
[MASTER] 07:01:38.006 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2974: weka.experiment.ResultMatrix.getDisplayRow(I)I:1578 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2977: weka.experiment.ResultMatrix.getDisplayRow(I)I:1579 - ReplaceComparisonOperator != null -> = null
[MASTER] 07:01:38.012 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3186: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1658 - ReplaceConstant - . -> 
[MASTER] 07:01:38.013 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3187: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1658 - ReplaceConstant - -1 -> 0
[MASTER] 07:01:38.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3188: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1658 - ReplaceConstant - -1 -> 1
[MASTER] 07:01:38.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3189: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1658 - ReplaceConstant - -1 -> -2
[MASTER] 07:01:38.016 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3190: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1658 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:38.272 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3191: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1658 - ReplaceComparisonOperator != -> <
[MASTER] 07:01:38.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3198: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1659 - ReplaceConstant - . -> 
[MASTER] 07:01:38.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3209: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceConstant - . -> 
[MASTER] 07:01:38.276 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3210: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> +
[MASTER] 07:01:38.278 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3211: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> %
[MASTER] 07:01:38.279 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3212: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> *
[MASTER] 07:01:38.280 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3213: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> /
[MASTER] 07:01:38.281 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3214: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:38.282 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3215: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> +
[MASTER] 07:01:38.284 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3216: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> %
[MASTER] 07:01:38.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3217: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> *
[MASTER] 07:01:38.286 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3218: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1662 - ReplaceArithmeticOperator - -> /
[MASTER] 07:01:38.287 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3266: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1663 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.288 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3267: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1663 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:38.289 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3274: weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;:1664 - ReplaceConstant - 0 -> 
[MASTER] 07:01:38.290 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3296: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> -1
[MASTER] 07:01:38.292 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3320: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> ==
[MASTER] 07:01:38.294 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3363: weka.experiment.ResultMatrix.padString(Ljava/lang/String;I)Ljava/lang/String;:1694 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:38.295 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3405: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1713 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.296 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3406: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1713 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:38.297 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3407: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1713 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:01:38.298 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3418: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1714 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.299 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3419: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1715 - ReplaceConstant -   -> 
[MASTER] 07:01:38.300 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3432: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1717 - ReplaceConstant -   -> 
[MASTER] 07:01:38.302 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3449: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1721 - ReplaceComparisonOperator <= -> -1
[MASTER] 07:01:38.303 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3473: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1721 - ReplaceComparisonOperator <= -> -1
[MASTER] 07:01:38.304 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3474: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1721 - ReplaceComparisonOperator <= -> <
[MASTER] 07:01:38.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3482: weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;:1722 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:38.309 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3535: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1754 - ReplaceComparisonOperator < -> !=
[MASTER] 07:01:38.312 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3553: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1754 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3556: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1755 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:38.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3573: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1755 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.315 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3574: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1755 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:38.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3592: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1757 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:38.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3593: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1757 - ReplaceComparisonOperator != -> <
[MASTER] 07:01:38.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3606: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1757 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3623: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:38.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3624: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceArithmeticOperator - -> +
[MASTER] 07:01:38.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3625: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceArithmeticOperator - -> %
[MASTER] 07:01:38.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3626: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceArithmeticOperator - -> *
[MASTER] 07:01:38.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3627: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceArithmeticOperator - -> /
[MASTER] 07:01:38.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3628: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:38.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3630: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceComparisonOperator != -> >
[MASTER] 07:01:38.601 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3642: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1761 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.602 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3691: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1764 - ReplaceComparisonOperator <= -> -1
[MASTER] 07:01:38.603 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3692: weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I:1764 - ReplaceComparisonOperator <= -> <
[MASTER] 07:01:38.607 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3774: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceConstant - 3 -> 0
[MASTER] 07:01:38.608 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3775: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceConstant - 3 -> 1
[MASTER] 07:01:38.609 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3776: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceConstant - 3 -> -1
[MASTER] 07:01:38.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3777: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceConstant - 3 -> 2
[MASTER] 07:01:38.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3778: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceConstant - 3 -> 4
[MASTER] 07:01:38.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3779: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceArithmeticOperator * -> +
[MASTER] 07:01:38.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3780: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceArithmeticOperator * -> %
[MASTER] 07:01:38.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3781: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceArithmeticOperator * -> -
[MASTER] 07:01:38.615 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3782: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1817 - ReplaceArithmeticOperator * -> /
[MASTER] 07:01:38.621 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3803: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> %
[MASTER] 07:01:38.623 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3805: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> /
[MASTER] 07:01:38.951 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3871: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1826 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.953 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3909: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1828 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3910: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1831 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:38.955 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3951: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1835 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.956 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3952: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1836 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:38.957 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4004: weka.experiment.ResultMatrix.isMean(I)Z:2012 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:38.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4005: weka.experiment.ResultMatrix.isMean(I)Z:2012 - ReplaceComparisonOperator != -> <
[MASTER] 07:01:38.959 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4006: weka.experiment.ResultMatrix.isMean(I)Z:2012 - ReplaceComparisonOperator != -> >
[MASTER] 07:01:38.960 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4007: weka.experiment.ResultMatrix.isMean(I)Z:2013 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:38.961 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4022: weka.experiment.ResultMatrix.isMean(I)Z:2018 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:38.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4023: weka.experiment.ResultMatrix.isMean(I)Z:2018 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:01:38.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4024: weka.experiment.ResultMatrix.isMean(I)Z:2018 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:38.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4025: weka.experiment.ResultMatrix.isMean(I)Z:2019 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:38.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4026: weka.experiment.ResultMatrix.isMean(I)Z:2021 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:38.966 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4041: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 3 -> 0
[MASTER] 07:01:38.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4042: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 3 -> 1
[MASTER] 07:01:38.968 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4043: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 3 -> -1
[MASTER] 07:01:38.969 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4044: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 3 -> 2
[MASTER] 07:01:38.970 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4045: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 3 -> 4
[MASTER] 07:01:38.971 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4046: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceArithmeticOperator % -> +
[MASTER] 07:01:38.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4047: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceArithmeticOperator % -> -
[MASTER] 07:01:38.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4048: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceArithmeticOperator % -> *
[MASTER] 07:01:38.974 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4049: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceArithmeticOperator % -> /
[MASTER] 07:01:38.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4050: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:39.220 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4051: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceComparisonOperator != -> ==
[MASTER] 07:01:39.222 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4052: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:39.223 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4053: weka.experiment.ResultMatrix.isMean(I)Z:2022 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.224 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4068: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceConstant - 2 -> 0
[MASTER] 07:01:39.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4069: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceConstant - 2 -> 1
[MASTER] 07:01:39.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4070: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceConstant - 2 -> -1
[MASTER] 07:01:39.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4071: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceConstant - 2 -> 3
[MASTER] 07:01:39.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4072: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceArithmeticOperator % -> +
[MASTER] 07:01:39.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4073: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceArithmeticOperator % -> -
[MASTER] 07:01:39.231 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4074: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceArithmeticOperator % -> *
[MASTER] 07:01:39.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4075: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceArithmeticOperator % -> /
[MASTER] 07:01:39.233 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4076: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:39.234 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4077: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceComparisonOperator != -> <
[MASTER] 07:01:39.235 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4079: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:39.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4080: weka.experiment.ResultMatrix.isMean(I)Z:2024 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.237 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4081: weka.experiment.ResultMatrix.isAverage(I)Z:2036 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:39.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4106: weka.experiment.ResultMatrix.isAverage(I)Z:2039 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.239 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4172: weka.experiment.ResultMatrix.isSignificance(I)Z:2080 - ReplaceComparisonOperator == -> !=
[MASTER] 07:01:39.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4187: weka.experiment.ResultMatrix.isSignificance(I)Z:2083 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:39.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4188: weka.experiment.ResultMatrix.isSignificance(I)Z:2083 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:01:39.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4189: weka.experiment.ResultMatrix.isSignificance(I)Z:2083 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:39.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4190: weka.experiment.ResultMatrix.isSignificance(I)Z:2084 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.244 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4205: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 3 -> 0
[MASTER] 07:01:39.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4206: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 3 -> 1
[MASTER] 07:01:39.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4207: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 3 -> -1
[MASTER] 07:01:39.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4208: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 3 -> 2
[MASTER] 07:01:39.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4209: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 3 -> 4
[MASTER] 07:01:39.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4210: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceArithmeticOperator % -> +
[MASTER] 07:01:39.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4211: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceArithmeticOperator % -> -
[MASTER] 07:01:39.251 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4212: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceArithmeticOperator % -> *
[MASTER] 07:01:39.252 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4213: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceArithmeticOperator % -> /
[MASTER] 07:01:39.253 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4214: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 2 -> 0
[MASTER] 07:01:39.254 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4215: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 2 -> 1
[MASTER] 07:01:39.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4216: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 2 -> -1
[MASTER] 07:01:39.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4217: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 2 -> 3
[MASTER] 07:01:39.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4218: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceComparisonOperator != -> -1
[MASTER] 07:01:39.258 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4220: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceComparisonOperator != -> >
[MASTER] 07:01:39.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4221: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:39.260 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4222: weka.experiment.ResultMatrix.isSignificance(I)Z:2086 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.534 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4237: weka.experiment.ResultMatrix.isSignificance(I)Z:2089 - ReplaceComparisonOperator >= -> -1
[MASTER] 07:01:39.536 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4238: weka.experiment.ResultMatrix.isSignificance(I)Z:2089 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:01:39.538 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4239: weka.experiment.ResultMatrix.isSignificance(I)Z:2089 - ReplaceComparisonOperator >= -> >
[MASTER] 07:01:39.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4240: weka.experiment.ResultMatrix.isSignificance(I)Z:2090 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.540 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4255: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 2 -> 0
[MASTER] 07:01:39.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4256: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 2 -> 1
[MASTER] 07:01:39.543 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4257: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 2 -> -1
[MASTER] 07:01:39.544 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4258: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 2 -> 3
[MASTER] 07:01:39.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4259: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceArithmeticOperator % -> +
[MASTER] 07:01:39.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4260: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceArithmeticOperator % -> -
[MASTER] 07:01:39.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4261: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceArithmeticOperator % -> *
[MASTER] 07:01:39.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4262: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceArithmeticOperator % -> /
[MASTER] 07:01:39.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4263: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:39.550 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4264: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceComparisonOperator != -> ==
[MASTER] 07:01:39.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4265: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 1 -> 0
[MASTER] 07:01:39.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4266: weka.experiment.ResultMatrix.isSignificance(I)Z:2092 - ReplaceConstant - 0 -> 1
[MASTER] 07:01:39.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4288: weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V:2131 - ReplaceConstant - -1 -> 0
[MASTER] 07:01:39.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4289: weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V:2131 - ReplaceConstant - -1 -> 1
[MASTER] 07:01:39.555 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4290: weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V:2131 - ReplaceConstant - -1 -> -2
[MASTER] 07:01:39.556 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4291: weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V:2131 - ReplaceComparisonOperator <= -> -1
[MASTER] 07:01:39.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4292: weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V:2131 - ReplaceComparisonOperator <= -> <
[MASTER] 07:01:39.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: I11 Branch 182 IF_ICMPLE L2131 - false in context: weka.experiment.ResultMatrix:addHeader(Ljava/lang/String;Ljava/lang/String;)V
[MASTER] 07:01:39.561 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I683 Branch 163 IFNE L1978 - false in context: 
[MASTER] 07:01:39.562 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I26 Branch 125 IFNE L1757 - true in context: 
[MASTER] 07:01:39.563 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I49 Branch 181 IF_ICMPNE L2092 - false in context: 
[MASTER] 07:01:39.564 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setColHidden(IZ)V: I7 Branch 57 IF_ICMPGE L1321 - false in context: weka.experiment.ResultMatrix:setColHidden(IZ)V
[MASTER] 07:01:39.565 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setPrintRowNames(Z)V: I8 Branch 39 IFNE L1059 - false in context: weka.experiment.ResultMatrix:setPrintRowNames(Z)V
[MASTER] 07:01:39.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setRowHidden(IZ)V: I3 Branch 60 IFLT L1346 - false in context: weka.experiment.ResultMatrix:setRowHidden(IZ)V
[MASTER] 07:01:39.568 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: I12 Branch 114 IF_ICMPNE L1658 - true in context: 
[MASTER] 07:01:39.569 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 148 TABLESWITCH L1894 Case 0 - false in context: 
[MASTER] 07:01:39.570 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: I47 Branch 120 IFLE L1721 - false in context: 
[MASTER] 07:01:39.571 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setStdDev(IID)V: I3 Branch 80 IFLT L1455 - false in context: weka.experiment.ResultMatrix:setStdDev(IID)V
[MASTER] 07:01:39.572 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I17 Branch 178 IFGE L2083 - true in context: 
[MASTER] 07:01:39.573 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setShowStdDev(Z)V: root-Branch in context: weka.experiment.ResultMatrix:setShowStdDev(Z)V
[MASTER] 07:01:39.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I160 Branch 137 IFNE L1848 - true in context: 
[MASTER] 07:01:39.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I6 Branch 166 IFNE L2012 - false in context: 
[MASTER] 07:01:39.577 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I208 Branch 139 IFEQ L1859 - false in context: 
[MASTER] 07:01:39.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setSignificance(III)V: I3 Branch 88 IFLT L1484 - false in context: weka.experiment.ResultMatrix:setSignificance(III)V
[MASTER] 07:01:39.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I668 Branch 159 IF_ICMPGE L1976 - true in context: 
[MASTER] 07:01:39.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I196 Branch 138 IF_ICMPGE L1857 - false in context: 
[MASTER] 07:01:39.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I257 Branch 143 IFNE L1872 - true in context: 
[MASTER] 07:01:39.819 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I160 Branch 137 IFNE L1848 - false in context: 
[MASTER] 07:01:39.820 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setSignificance(III)V: I7 Branch 89 IF_ICMPGE L1484 - false in context: weka.experiment.ResultMatrix:setSignificance(III)V
[MASTER] 07:01:39.821 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I695 Branch 164 IF_ICMPGE L1982 - true in context: 
[MASTER] 07:01:39.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I6 Branch 166 IFNE L2012 - true in context: 
[MASTER] 07:01:39.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I3 Branch 116 IFLE L1679 - false in context: 
[MASTER] 07:01:39.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isAverage(I)Z: I4 Branch 171 IFEQ L2036 - true in context: 
[MASTER] 07:01:39.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setMean(IID)V: I7 Branch 69 IF_ICMPGE L1396 - false in context: weka.experiment.ResultMatrix:setMean(IID)V
[MASTER] 07:01:39.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getRowNameWidth()I: root-Branch in context: weka.experiment.ResultMatrix:getRowNameWidth()I
[MASTER] 07:01:39.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I7 Branch 117 IF_ICMPLE L1679 - true in context: 
[MASTER] 07:01:39.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I310 Branch 146 IFEQ L1882 - true in context: 
[MASTER] 07:01:39.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I22 Branch 124 IF_ICMPGE L1755 - false in context: 
[MASTER] 07:01:39.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I41 Branch 128 IFEQ L1761 - true in context: 
[MASTER] 07:01:39.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setSignificance(III)V: I13 Branch 91 IF_ICMPGE L1484 - false in context: weka.experiment.ResultMatrix:setSignificance(III)V
[MASTER] 07:01:39.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 148 TABLESWITCH L1894 Case 0 - true in context: 
[MASTER] 07:01:39.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I17 Branch 178 IFGE L2083 - false in context: 
[MASTER] 07:01:39.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I289 Branch 144 IFEQ L1879 - true in context: 
[MASTER] 07:01:39.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setMean(IID)V: I3 Branch 68 IFLT L1396 - false in context: weka.experiment.ResultMatrix:setMean(IID)V
[MASTER] 07:01:39.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: I12 Branch 118 IF_ICMPGE L1713 - true in context: 
[MASTER] 07:01:39.839 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I208 Branch 139 IFEQ L1859 - true in context: 
[MASTER] 07:01:39.840 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I673 Branch 160 IF_ICMPNE L1978 - false in context: 
[MASTER] 07:01:39.843 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 150 TABLESWITCH L1894 Case 2 - true in context: 
[MASTER] 07:01:39.845 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I341 Branch 147 IFNE L1890 - true in context: 
[MASTER] 07:01:39.846 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;I)Ljava/lang/String;: root-Branch in context: 
[MASTER] 07:01:39.847 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I82 Branch 134 IFEQ L1828 - false in context: 
[MASTER] 07:01:39.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.addHeader(Ljava/lang/String;Ljava/lang/String;)V: I11 Branch 182 IF_ICMPLE L2131 - true in context: weka.experiment.ResultMatrix:addHeader(Ljava/lang/String;Ljava/lang/String;)V
[MASTER] 07:01:39.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I10 Branch 177 IFEQ L2080 - true in context: 
[MASTER] 07:01:39.850 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I39 Branch 127 IF_ICMPNE L1761 - true in context: 
[MASTER] 07:01:39.851 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I49 Branch 181 IF_ICMPNE L2092 - true in context: 
[MASTER] 07:01:39.852 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I676 Branch 161 IFNE L1978 - true in context: 
[MASTER] 07:01:39.853 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setPrintColNames(Z)V: I8 Branch 38 IFNE L1018 - false in context: weka.experiment.ResultMatrix:setPrintColNames(Z)V
[MASTER] 07:01:40.114 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I33 Branch 169 IF_ICMPNE L2022 - true in context: 
[MASTER] 07:01:40.116 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I236 Branch 141 IFEQ L1865 - true in context: 
[MASTER] 07:01:40.117 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setStdDev(IID)V: I7 Branch 81 IF_ICMPGE L1455 - false in context: weka.experiment.ResultMatrix:setStdDev(IID)V
[MASTER] 07:01:40.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I39 Branch 127 IF_ICMPNE L1761 - false in context: 
[MASTER] 07:01:40.120 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setRowHidden(IZ)V: I7 Branch 61 IF_ICMPGE L1346 - false in context: weka.experiment.ResultMatrix:setRowHidden(IZ)V
[MASTER] 07:01:40.121 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I22 Branch 124 IF_ICMPGE L1755 - true in context: 
[MASTER] 07:01:40.125 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I28 Branch 179 IF_ICMPNE L2086 - true in context: 
[MASTER] 07:01:40.126 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I148 Branch 136 IF_ICMPGE L1846 - false in context: 
[MASTER] 07:01:40.127 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I224 Branch 140 IF_ICMPGE L1863 - false in context: 
[MASTER] 07:01:40.128 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I22 Branch 132 IFEQ L1816 - false in context: 
[MASTER] 07:01:40.129 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I28 Branch 126 IFEQ L1757 - true in context: 
[MASTER] 07:01:40.130 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I10 Branch 177 IFEQ L2080 - false in context: 
[MASTER] 07:01:40.132 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I568 Branch 157 IFEQ L1950 - false in context: 
[MASTER] 07:01:40.133 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I109 Branch 135 IFEQ L1835 - true in context: 
[MASTER] 07:01:40.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I676 Branch 161 IFNE L1978 - false in context: 
[MASTER] 07:01:40.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I28 Branch 179 IF_ICMPNE L2086 - false in context: 
[MASTER] 07:01:40.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getDisplayRow(I)I: I12 Branch 107 IFNONNULL L1579 - false in context: weka.experiment.ResultMatrix:getDisplayRow(I)I
[MASTER] 07:01:40.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I293 Branch 145 IFNE L1880 - true in context: 
[MASTER] 07:01:40.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I82 Branch 134 IFEQ L1828 - true in context: 
[MASTER] 07:01:40.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I33 Branch 169 IF_ICMPNE L2022 - false in context: 
[MASTER] 07:01:40.141 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setStdDev(IID)V: I9 Branch 82 IFLT L1455 - false in context: weka.experiment.ResultMatrix:setStdDev(IID)V
[MASTER] 07:01:40.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getShowStdDev()Z: root-Branch in context: weka.experiment.ResultMatrix:getShowStdDev()Z
[MASTER] 07:01:40.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I556 Branch 156 IF_ICMPGE L1948 - false in context: 
[MASTER] 07:01:40.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 149 TABLESWITCH L1894 Case 1 - true in context: 
[MASTER] 07:01:40.145 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I587 Branch 158 IFEQ L1958 - false in context: 
[MASTER] 07:01:40.146 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 150 TABLESWITCH L1894 Case 2 - false in context: 
[MASTER] 07:01:40.147 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I289 Branch 144 IFEQ L1879 - false in context: 
[MASTER] 07:01:40.148 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I13 Branch 123 IF_ICMPGE L1754 - false in context: 
[MASTER] 07:01:40.150 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setSignificance(III)V: I9 Branch 90 IFLT L1484 - false in context: weka.experiment.ResultMatrix:setSignificance(III)V
[MASTER] 07:01:40.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getCount(I)D: I3 Branch 66 IFLT L1382 - false in context: weka.experiment.ResultMatrix:getCount(I)D
[MASTER] 07:01:40.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getRowCount()I: root-Branch in context: weka.experiment.ResultMatrix:getRowCount()I
[MASTER] 07:01:40.394 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I70 Branch 133 IF_ICMPGE L1826 - false in context: 
[MASTER] 07:01:40.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I26 Branch 168 IFEQ L2021 - true in context: 
[MASTER] 07:01:40.401 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: I16 Branch 119 IFEQ L1714 - true in context: 
[MASTER] 07:01:40.405 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I224 Branch 140 IF_ICMPGE L1863 - true in context: 
[MASTER] 07:01:40.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I568 Branch 157 IFEQ L1950 - true in context: 
[MASTER] 07:01:40.407 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I17 Branch 167 IFGE L2018 - false in context: 
[MASTER] 07:01:40.408 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I45 Branch 170 IFNE L2024 - true in context: 
[MASTER] 07:01:40.409 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I109 Branch 135 IFEQ L1835 - false in context: 
[MASTER] 07:01:40.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I236 Branch 141 IFEQ L1865 - false in context: 
[MASTER] 07:01:40.411 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I587 Branch 158 IFEQ L1958 - true in context: 
[MASTER] 07:01:40.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: I12 Branch 118 IF_ICMPGE L1713 - false in context: 
[MASTER] 07:01:40.413 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setMean(IID)V: I13 Branch 71 IF_ICMPGE L1396 - false in context: weka.experiment.ResultMatrix:setMean(IID)V
[MASTER] 07:01:40.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getDisplayRow(I)I: I7 Branch 106 IF_ICMPGE L1578 - false in context: weka.experiment.ResultMatrix:getDisplayRow(I)I
[MASTER] 07:01:40.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 149 TABLESWITCH L1894 Case 1 - false in context: 
[MASTER] 07:01:40.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setStdDev(IID)V: I13 Branch 83 IF_ICMPGE L1455 - false in context: weka.experiment.ResultMatrix:setStdDev(IID)V
[MASTER] 07:01:40.418 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: I51 Branch 121 IF_ICMPLE L1721 - false in context: 
[MASTER] 07:01:40.420 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I247 Branch 142 IFNE L1869 - false in context: 
[MASTER] 07:01:40.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I26 Branch 168 IFEQ L2021 - false in context: 
[MASTER] 07:01:40.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I357 Branch 151 TABLESWITCH L1894 Default-Case - false in context: 
[MASTER] 07:01:40.423 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I38 Branch 180 IFGE L2089 - false in context: 
[MASTER] 07:01:40.425 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: I42 Branch 115 IF_ICMPGE L1663 - false in context: 
[MASTER] 07:01:40.426 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I26 Branch 125 IFNE L1757 - false in context: 
[MASTER] 07:01:40.427 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I54 Branch 129 IF_ICMPLE L1764 - false in context: 
[MASTER] 07:01:40.428 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: I12 Branch 114 IF_ICMPNE L1658 - false in context: 
[MASTER] 07:01:40.429 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getDisplayRow(I)I: I3 Branch 105 IFLT L1578 - false in context: weka.experiment.ResultMatrix:getDisplayRow(I)I
[MASTER] 07:01:40.430 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I17 Branch 167 IFGE L2018 - true in context: 
[MASTER] 07:01:40.431 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setColHidden(IZ)V: I3 Branch 56 IFLT L1321 - false in context: weka.experiment.ResultMatrix:setColHidden(IZ)V
[MASTER] 07:01:40.432 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isMean(I)Z: I45 Branch 170 IFNE L2024 - false in context: 
[MASTER] 07:01:40.433 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.doubleToString(DI)Ljava/lang/String;: I42 Branch 115 IF_ICMPGE L1663 - true in context: 
[MASTER] 07:01:40.434 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setMean(IID)V: I9 Branch 70 IFLT L1396 - false in context: weka.experiment.ResultMatrix:setMean(IID)V
[MASTER] 07:01:40.435 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I683 Branch 163 IFNE L1978 - true in context: 
[MASTER] 07:01:40.726 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColSize([[Ljava/lang/String;IZZ)I: I54 Branch 129 IF_ICMPLE L1764 - true in context: 
[MASTER] 07:01:40.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getCountWidth()I: root-Branch in context: weka.experiment.ResultMatrix:getCountWidth()I
[MASTER] 07:01:40.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getCount(I)D: I7 Branch 67 IF_ICMPGE L1382 - false in context: weka.experiment.ResultMatrix:getCount(I)D
[MASTER] 07:01:40.733 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.setMeanPrec(I)V: I3 Branch 30 IFLT L599 - false in context: weka.experiment.ResultMatrix:setMeanPrec(I)V
[MASTER] 07:01:40.735 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I680 Branch 162 IF_ICMPNE L1978 - false in context: 
[MASTER] 07:01:40.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.padString(Ljava/lang/String;IZ)Ljava/lang/String;: I51 Branch 121 IF_ICMPLE L1721 - true in context: 
[MASTER] 07:01:40.738 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.isSignificance(I)Z: I38 Branch 180 IFGE L2089 - true in context: 
* Search finished after 866s and 25 generations, 29700 statements, best individual has fitness: 2912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 613
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 407
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 678
* Number of covered goals: 597
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 99
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 124
* Number of covered goals: 117
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 124
* Number of covered goals: 117
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 386
* Generated 173 tests with total length 3878
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 07:08:03.069 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6752145833333333% of time used, but only 68/173 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 07:09:26.265 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11926
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:10:05.654 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:10:05.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:10:05.659 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:10:06.126 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:10:06.521 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:10:06.522 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:10:07.906 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:10:07.928 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:10:07.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:10:07.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:10:07.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:10:07.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:10:07.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:10:07.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:10:07.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:10:07.968 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:10:07.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:10:22.441 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 07:23:37.308 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 843s and 87 generations, 107972 statements, best individual has fitness: 3008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 277
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 276
* Generated 66 tests with total length 1287
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 846s and 91 generations, 67780 statements, best individual has fitness: 15040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 810
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 354
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 76
* Number of covered goals: 76
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 264
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 353
* Generated 145 tests with total length 3120
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 07:32:22.137 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 07:32:28.225 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:32:28.348 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:32:28.534 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:32:28.534 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11923
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:33:29.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:33:29.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:33:29.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:33:29.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:33:29.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:33:29.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:37:52.731 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 07:39:02.103 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 842s and 329 generations, 350765 statements, best individual has fitness: 4264.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 139
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 529
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 72
* Number of covered goals: 36
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 139
* Generated 82 tests with total length 1948
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 07:50:03.694 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:50:04.016 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:50:19.498 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 07:50:19.499 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Attribute attribute0 = new Attribute("[WekaPackageManager] unable to find a version of package ");
arrayList0.add(attribute0);
Instances instances0 = new Instances("XC", arrayList0, 3);
Attribute attribute1 = new Attribute("|6ay6bR?9cl6+Oq!|", instances0, 49);
discretize0.setInputFormat(instances0);
arrayList0.add(attribute1);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:08:52.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:08:52.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:08:52.816 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:08:53.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:08:54.205 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:08:54.206 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 08:08:56.774 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 08:11:29.562 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 08:22:15.174 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 841s and 226 generations, 191145 statements, best individual has fitness: 12664.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 551
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Generated 66 tests with total length 1504
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 08:25:05.290 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 08:25:05.390 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 08:25:05.593 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 08:25:05.594 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:25:48.593 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:25:48.594 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:25:48.595 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:25:48.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:25:48.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:25:48.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 08:25:51.699 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 08:25:51.699 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 08:25:52.874 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 08:25:52.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 08:25:52.882 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 08:25:52.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 08:25:52.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 08:25:52.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 08:25:57.760 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: Line 771
[MASTER] 08:25:57.777 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch
[MASTER] 08:25:57.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 312: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:771 - ReplaceConstant - The LNorm to use for document length normalization. -> 
[MASTER] 08:25:57.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 08:25:57.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 08:25:57.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 08:25:57.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:LNormTipText()Ljava/lang/String;
* Search finished after 842s and 67 generations, 70684 statements, best individual has fitness: 1688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 301
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 157
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 436
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 112
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 154
* Generated 59 tests with total length 1373
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 08:44:43.834 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1574153083763/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1574153083763/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:43.834 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:43.834 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:43.836 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 08:44:43.837 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:43.838 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1574153083763/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_3_tmp__ESTest extends NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.5582150777683363
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       Integer integer0 = new Integer(115);
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       linkedHashMap1.put(integer0, linkedHashMap0);
32:       Integer.toUnsignedLong(115);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
35:       naiveBayesMultinomialText0.getLowercaseTokens();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText1.LNormTipText();
38:       Integer.divideUnsigned(115, 727);
39:       naiveBayesMultinomialText0.setOptions(stringArray0);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
42:       Integer integer1 = new Integer(10000);
43:       linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
44:       System.setCurrentTimeMillis(1097L);
45:       naiveBayesMultinomialText1.normTipText();
46:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
47:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
48:       naiveBayesMultinomialText1.stopwordsTipText();
49:       naiveBayesMultinomialText1.stemmerTipText();
50:       double[] doubleArray0 = new double[6];
51:       doubleArray0[0] = (double) 727;
52:       doubleArray0[1] = (double) 0;
53:       doubleArray0[2] = (double) 727;
54:       doubleArray0[3] = (double) 727;
55:       doubleArray0[4] = (double) 115L;
56:       doubleArray0[5] = (double) 115;
57:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(10000, doubleArray0);
58:       // Undeclared exception!
59:       try { 
60:         naiveBayesMultinomialText1.tokenizeInstance(binarySparseInstance0, true);
61:         fail("Expecting exception: RuntimeException");
62:       
63:       } catch(RuntimeException e) {
64:          //
65:          // DenseInstance doesn't have access to a dataset!
66:          //
67:          verifyException("weka.core.AbstractInstance", e);
68:       }
69:   }
70: }
RegularFileObject[/tmp/EvoSuite_3_1574153083763/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:43.839 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(115);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put(integer0, linkedHashMap0);
Integer.toUnsignedLong(115);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getLowercaseTokens();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.LNormTipText();
Integer.divideUnsigned(115, 727);
naiveBayesMultinomialText0.setOptions(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer(10000);
linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
System.setCurrentTimeMillis(1097L);
naiveBayesMultinomialText1.normTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText1.stopwordsTipText();
naiveBayesMultinomialText1.stemmerTipText();
double[] doubleArray0 = new double[6];
doubleArray0[0] = (double) 727;
doubleArray0[1] = (double) 0;
doubleArray0[2] = (double) 727;
doubleArray0[3] = (double) 727;
doubleArray0[4] = (double) 115L;
doubleArray0[5] = (double) 115;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(10000, doubleArray0);
naiveBayesMultinomialText1.tokenizeInstance(binarySparseInstance0, true);

[MASTER] 08:44:43.950 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1574153083911/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1574153083911/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:43.950 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:43.950 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:43.951 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:43.951 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:43.951 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:43.951 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:43.951 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1574153083911/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.mock.java.io.MockFile;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_6_tmp__ESTest extends NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.781597241510382
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       byte[] byteArray0 = new byte[9];
29:       byteArray0[0] = (byte)108;
30:       byteArray0[1] = (byte)14;
31:       MockFile mockFile0 = new MockFile("lj", "_JQ-(3$#:[uZmafi5]");
32:       TestInstances testInstances0 = new TestInstances();
33:       Instances instances0 = testInstances0.generate();
34:       instances0.listIterator();
35:       instances0.getRandomNumberGenerator(891L);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText0.buildClassifier(instances0);
38:       MockFile mockFile1 = new MockFile("@relation");
39:       mockFile0.deleteOnExit();
40:       mockFile1.getCanonicalFile();
41:       MockFile mockFile2 = new MockFile("-lnorm <num>", "@relation");
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       linkedHashMap0.clear();
44:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       linkedHashMap1.put((Integer) (-1), linkedHashMap0);
46:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
47:       naiveBayesMultinomialText1.setMinWordFrequency(0.1);
48:       assertEquals(0.1, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
49:       
50:       naiveBayesMultinomialText0.normTipText();
51:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
52:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
53:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
54:       naiveBayesMultinomialText3.normalizeDocLengthTipText();
55:       naiveBayesMultinomialText3.stopwordsTipText();
56:       naiveBayesMultinomialText2.stemmerTipText();
57:       String string0 = naiveBayesMultinomialText0.tokenizerTipText();
58:       assertEquals("The tokenizing algorithm to use on the strings.", string0);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_6_1574153083911/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:43.952 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)108;
byteArray0[1] = (byte)14;
MockFile mockFile0 = new MockFile("lj", "_JQ-(3$#:[uZmafi5]");
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
instances0.listIterator();
instances0.getRandomNumberGenerator(891L);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.buildClassifier(instances0);
MockFile mockFile1 = new MockFile("@relation");
mockFile0.deleteOnExit();
mockFile1.getCanonicalFile();
MockFile mockFile2 = new MockFile("-lnorm <num>", "@relation");
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.clear();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put((Integer) (-1), linkedHashMap0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setMinWordFrequency(0.1);
assertEquals(0.1, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);

naiveBayesMultinomialText0.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.normalizeDocLengthTipText();
naiveBayesMultinomialText3.stopwordsTipText();
naiveBayesMultinomialText2.stemmerTipText();
String string0 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string0);


[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1574153083952/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1574153083952/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 08:44:43.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:43.986 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1574153083952/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.590222852454012
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Integer integer0 = new Integer(115);
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       linkedHashMap1.put(integer0, linkedHashMap0);
30:       Integer.toUnsignedLong(115);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
33:       naiveBayesMultinomialText0.getUseStopList();
34:       naiveBayesMultinomialText0.LNormTipText();
35:       Integer.divideUnsigned(115, 727);
36:       naiveBayesMultinomialText0.setOptions(stringArray0);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       Integer integer1 = new Integer(10000);
40:       Integer.divideUnsigned(115, 727);
41:       Integer integer2 = new Integer(10000);
42:       linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
43:       System.setCurrentTimeMillis(1097L);
44:       naiveBayesMultinomialText0.normTipText();
45:       String string0 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
46:       assertEquals("Use word frequencies rather than binary bag of words representation", string0);
47:       
48:       String string1 = naiveBayesMultinomialText0.normalizeDocLengthTipText();
49:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);
50:       
51:       naiveBayesMultinomialText0.stopwordsTipText();
52:       String string2 = naiveBayesMultinomialText0.stemmerTipText();
53:       assertEquals("The stemming algorithm to use on the words.", string2);
54:       
55:       String string3 = naiveBayesMultinomialText0.tokenizerTipText();
56:       assertEquals("The tokenizing algorithm to use on the strings.", string3);
57:       
58:       String string4 = naiveBayesMultinomialText0.minWordFrequencyTipText();
59:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
60:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);
61:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
62:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
63:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
64:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
65:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
66:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
67:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_7_1574153083952/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:43.987 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(115);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put(integer0, linkedHashMap0);
Integer.toUnsignedLong(115);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.LNormTipText();
Integer.divideUnsigned(115, 727);
naiveBayesMultinomialText0.setOptions(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer(10000);
Integer.divideUnsigned(115, 727);
Integer integer2 = new Integer(10000);
linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
System.setCurrentTimeMillis(1097L);
naiveBayesMultinomialText0.normTipText();
String string0 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string0);

String string1 = naiveBayesMultinomialText0.normalizeDocLengthTipText();
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);

naiveBayesMultinomialText0.stopwordsTipText();
String string2 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string2);

String string3 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string3);

String string4 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 08:44:44.023 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1574153083987/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1574153083987/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.023 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.023 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 08:44:44.024 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:44.025 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1574153083987/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.0963235842414667
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       Integer integer0 = new Integer(115);
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       linkedHashMap1.put(integer0, linkedHashMap0);
31:       long long0 = new Integer(115);
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       String[] stringArray0 = TestInstances.DEFAULT_WORDS;
34:       naiveBayesMultinomialText0.LNormTipText();
35:       Integer.divideUnsigned(115, 727);
36:       naiveBayesMultinomialText0.setOptions(stringArray0);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       Integer integer1 = new Integer(10000);
40:       naiveBayesMultinomialText0.setNorm(115);
41:       Integer.divideUnsigned(115, 727);
42:       linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
43:       System.setCurrentTimeMillis(120L);
44:       naiveBayesMultinomialText0.normTipText();
45:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
46:       naiveBayesMultinomialText0.LNormTipText();
47:       naiveBayesMultinomialText0.stopwordsTipText();
48:       naiveBayesMultinomialText0.stemmerTipText();
49:       naiveBayesMultinomialText0.LNormTipText();
50:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
51:       naiveBayesMultinomialText0.lowercaseTokensTipText();
52:       naiveBayesMultinomialText0.tokenizerTipText();
53:       naiveBayesMultinomialText0.stemmerTipText();
54:       System.setCurrentTimeMillis(0L);
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_8_1574153083987/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.025 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(115);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put(integer0, linkedHashMap0);
long long0 = new Integer(115);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = TestInstances.DEFAULT_WORDS;
naiveBayesMultinomialText0.LNormTipText();
Integer.divideUnsigned(115, 727);
naiveBayesMultinomialText0.setOptions(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer(10000);
naiveBayesMultinomialText0.setNorm(115);
Integer.divideUnsigned(115, 727);
linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
System.setCurrentTimeMillis(120L);
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.stemmerTipText();
System.setCurrentTimeMillis(0L);

[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1574153084159/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1574153084159/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:44.183 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:44.184 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1574153084159/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_13_tmp__ESTest extends NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.5147780406036286
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".arff/.arff");
30:       FileSystemHandling.appendLineToFile(evoSuiteFile0, "o/<\"J`4,");
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       naiveBayesMultinomialText0.setUseStopList(false);
33:       naiveBayesMultinomialText0.m_normalize = true;
34:       EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
35:       FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
36:       naiveBayesMultinomialText0.getOptions();
37:       naiveBayesMultinomialText0.LNormTipText();
38:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
39:       
40:       String[] stringArray0 = new String[1];
41:       stringArray0[0] = "o/<\"J`4,";
42:       naiveBayesMultinomialText0.setOptions(stringArray0);
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       Integer integer0 = new Integer(10000);
46:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap2 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       Integer integer1 = new Integer(1879048192);
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       linkedHashMap2.put(integer1, linkedHashMap3);
50:       naiveBayesMultinomialText0.m_stopwords = null;
51:       System.setCurrentTimeMillis(0L);
52:       naiveBayesMultinomialText0.normTipText();
53:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
54:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
55:       naiveBayesMultinomialText0.stopwordsTipText();
56:       naiveBayesMultinomialText0.stemmerTipText();
57:       naiveBayesMultinomialText0.LNormTipText();
58:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
59:       String string0 = naiveBayesMultinomialText0.tokenizerTipText();
60:       assertEquals("The tokenizing algorithm to use on the strings.", string0);
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_13_1574153084159/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.185 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".arff/.arff");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "o/<\"J`4,");
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.setUseStopList(false);
naiveBayesMultinomialText0.m_normalize = true;
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.LNormTipText();
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());

String[] stringArray0 = new String[1];
stringArray0[0] = "o/<\"J`4,";
naiveBayesMultinomialText0.setOptions(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(10000);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap2 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer(1879048192);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap2.put(integer1, linkedHashMap3);
naiveBayesMultinomialText0.m_stopwords = null;
System.setCurrentTimeMillis(0L);
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
String string0 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string0);


[MASTER] 08:44:44.232 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1574153084209/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1574153084209/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.232 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.232 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.232 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:44.233 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:44.233 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 08:44:44.233 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:44.233 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:44.233 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1574153084209/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_15_tmp__ESTest extends NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.5271837172395382
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       double[] doubleArray0 = new double[9];
29:       doubleArray0[0] = 406.5517699;
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
32:       doubleArray0[2] = 0.693147181;
33:       doubleArray0[3] = 2028.835;
34:       doubleArray0[4] = 1747.326234;
35:       doubleArray0[5] = (-472.92);
36:       doubleArray0[6] = 2112.0208318385744;
37:       naiveBayesMultinomialText0.setMinWordFrequency(0.7);
38:       doubleArray0[7] = 714.0807463486;
39:       Integer integer0 = new Integer(1);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       linkedHashMap0.put(integer0, linkedHashMap1);
42:       doubleArray0[8] = 0.0;
43:       naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
44:       // Undeclared exception!
45:       try { 
46:         naiveBayesMultinomialText0.toString();
47:         fail("Expecting exception: NullPointerException");
48:       
49:       } catch(NullPointerException e) {
50:          //
51:          // no message in exception (getMessage() returned null)
52:          //
53:       }
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_15_1574153084209/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.233 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[0] = 406.5517699;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
doubleArray0[2] = 0.693147181;
doubleArray0[3] = 2028.835;
doubleArray0[4] = 1747.326234;
doubleArray0[5] = (-472.92);
doubleArray0[6] = 2112.0208318385744;
naiveBayesMultinomialText0.setMinWordFrequency(0.7);
doubleArray0[7] = 714.0807463486;
Integer integer0 = new Integer(1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
doubleArray0[8] = 0.0;
naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
naiveBayesMultinomialText0.toString();

[MASTER] 08:44:44.262 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1574153084234/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1574153084234/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.262 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.262 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.262 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:44.262 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1574153084234/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Properties;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.mock.java.util.MockRandom;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Instances;
19: import weka.core.ProtectedProperties;
20: import weka.core.TestInstances;
21: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_16_tmp__ESTest extends NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.8284584840597025
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       byte[] byteArray0 = new byte[9];
33:       byteArray0[3] = (byte)108;
34:       byteArray0[1] = (byte)14;
35:       MockFile mockFile0 = new MockFile("hj", "_:Qc(3$#:[uZmafi5]");
36:       TestInstances testInstances0 = new TestInstances();
37:       Instances instances0 = testInstances0.generate();
38:       instances0.listIterator();
39:       MockRandom mockRandom0 = new MockRandom();
40:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
41:       naiveBayesMultinomialText0.buildClassifier(instances0);
42:       String string0 = naiveBayesMultinomialText0.toString();
43:       assertEquals("The independent probability of a class\n--------------------------------------\nclass1\t12.0\nclass2\t10.0\n\nThe probability of a word given the class\n-----------------------------------------\n\tclass1\tclass2\t\n", string0);
44:       
45:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
47:       Properties properties0 = new Properties();
48:       ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
49:       naiveBayesMultinomialText0.globalInfo();
50:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
51:       naiveBayesMultinomialText1.stemmerTipText();
52:       naiveBayesMultinomialText0.LNormTipText();
53:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
54:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
55:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
56:       String string1 = naiveBayesMultinomialText1.useStopListTipText();
57:       assertEquals("If true, ignores all words that are on the stoplist.", string1);
58:       
59:       NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
60:       naiveBayesMultinomialText3.normalizeDocLengthTipText();
61:       naiveBayesMultinomialText2.periodicPruningTipText();
62:       naiveBayesMultinomialText0.stopwordsTipText();
63:       String string2 = naiveBayesMultinomialText4.stemmerTipText();
64:       assertEquals("The stemming algorithm to use on the words.", string2);
65:       
66:       String string3 = naiveBayesMultinomialText5.LNormTipText();
67:       assertEquals("The LNorm to use for document length normalization.", string3);
68:       
69:       naiveBayesMultinomialText5.useWordFrequenciesTipText();
70:       NaiveBayesMultinomialText naiveBayesMultinomialText6 = new NaiveBayesMultinomialText();
71:       naiveBayesMultinomialText6.periodicPruningTipText();
72:       String string4 = naiveBayesMultinomialText1.normalizeDocLengthTipText();
73:       assertEquals(2.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
74:       assertFalse(naiveBayesMultinomialText1.getNormalizeDocLength());
75:       assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
76:       assertEquals(3.0, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
77:       assertEquals(1.0, naiveBayesMultinomialText1.getNorm(), 0.01);
78:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string4);
79:   }
80: }
RegularFileObject[/tmp/EvoSuite_16_1574153084234/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.263 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
byte[] byteArray0 = new byte[9];
byteArray0[3] = (byte)108;
byteArray0[1] = (byte)14;
MockFile mockFile0 = new MockFile("hj", "_:Qc(3$#:[uZmafi5]");
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
instances0.listIterator();
MockRandom mockRandom0 = new MockRandom();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.buildClassifier(instances0);
String string0 = naiveBayesMultinomialText0.toString();
assertEquals("The independent probability of a class\n--------------------------------------\nclass1\t12.0\nclass2\t10.0\n\nThe probability of a word given the class\n-----------------------------------------\n\tclass1\tclass2\t\n", string0);

MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
naiveBayesMultinomialText0.globalInfo();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText0.LNormTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
String string1 = naiveBayesMultinomialText1.useStopListTipText();
assertEquals("If true, ignores all words that are on the stoplist.", string1);

NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.normalizeDocLengthTipText();
naiveBayesMultinomialText2.periodicPruningTipText();
naiveBayesMultinomialText0.stopwordsTipText();
String string2 = naiveBayesMultinomialText4.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string2);

String string3 = naiveBayesMultinomialText5.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string3);

naiveBayesMultinomialText5.useWordFrequenciesTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText6 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText6.periodicPruningTipText();
String string4 = naiveBayesMultinomialText1.normalizeDocLengthTipText();
assertEquals(2.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText1.getNormalizeDocLength());
assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
assertEquals(3.0, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText1.getNorm(), 0.01);
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string4);


[MASTER] 08:44:44.660 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1574153084634/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1574153084634/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.660 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.660 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:44.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 08:44:44.663 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 08:44:44.664 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:44.664 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:44.664 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1574153084634/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_30_tmp__ESTest extends NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.5548187271743843
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setUseStopList(true);
28:       naiveBayesMultinomialText0.setLNorm((-305.8960738906));
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       linkedHashMap0.put((Integer) null, linkedHashMap1);
32:       Integer.toUnsignedLong(1);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
34:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
35:       naiveBayesMultinomialText0.getUseStopList();
36:       naiveBayesMultinomialText0.LNormTipText();
37:       Integer.divideUnsigned(1, 105);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText2.setOptions(stringArray0);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
42:       Integer integer0 = new Integer(10);
43:       Integer integer1 = new Integer(0);
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       linkedHashMap3.put(integer0, linkedHashMap4);
46:       System.setCurrentTimeMillis(103L);
47:       naiveBayesMultinomialText2.normTipText();
48:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
49:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
50:       naiveBayesMultinomialText0.stopwordsTipText();
51:       naiveBayesMultinomialText1.stemmerTipText();
52:       naiveBayesMultinomialText2.tokenizerTipText();
53:       assertEquals((-305.8960738906), naiveBayesMultinomialText2.getLNorm(), 0.01);
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_30_1574153084634/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.665 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(true);
naiveBayesMultinomialText0.setLNorm((-305.8960738906));
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
Integer.toUnsignedLong(1);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.LNormTipText();
Integer.divideUnsigned(1, 105);
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.setOptions(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(10);
Integer integer1 = new Integer(0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap3.put(integer0, linkedHashMap4);
System.setCurrentTimeMillis(103L);
naiveBayesMultinomialText2.normTipText();
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText2.tokenizerTipText();
assertEquals((-305.8960738906), naiveBayesMultinomialText2.getLNorm(), 0.01);


[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1574153084771/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1574153084771/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 08:44:44.793 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1574153084771/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: import weka.core.stemmers.NullStemmer;
21: import weka.filters.AllFilter;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=1.830738805564335
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       double[] doubleArray0 = new double[9];
34:       doubleArray0[0] = 406.5517699;
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
37:       doubleArray0[2] = 0.693147181;
38:       doubleArray0[3] = 2028.835;
39:       doubleArray0[4] = 1747.326234;
40:       doubleArray0[5] = (-472.92);
41:       AllFilter allFilter0 = new AllFilter();
42:       Capabilities capabilities0 = allFilter0.getCapabilities();
43:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
44:       Instances instances0 = testInstances0.generate();
45:       try { 
46:         naiveBayesMultinomialText0.buildClassifier(instances0);
47:         fail("Expecting exception: Exception");
48:       
49:       } catch(Exception e) {
50:          //
51:          // weka.classifiers.bayes.NaiveBayesMultinomialText: Cannot handle relational attributes!
52:          //
53:          verifyException("weka.core.Capabilities", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_34_1574153084771/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.794 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[0] = 406.5517699;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
doubleArray0[2] = 0.693147181;
doubleArray0[3] = 2028.835;
doubleArray0[4] = 1747.326234;
doubleArray0[5] = (-472.92);
AllFilter allFilter0 = new AllFilter();
Capabilities capabilities0 = allFilter0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);

[MASTER] 08:44:44.857 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_37_1574153084837/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_37_1574153084837/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.857 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.857 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 08:44:44.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:44.859 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_37_1574153084837/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Instance;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_37_tmp__ESTest extends NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.554528240609388
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       Integer integer0 = new Integer(115);
29:       Integer.getInteger("", integer0);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       linkedHashMap1.put(integer0, linkedHashMap0);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
35:       naiveBayesMultinomialText0.getLowercaseTokens();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText1.LNormTipText();
38:       naiveBayesMultinomialText0.setOptions(stringArray0);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
41:       Integer integer1 = new Integer(10000);
42:       linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
43:       System.setCurrentTimeMillis(1097L);
44:       naiveBayesMultinomialText1.normTipText();
45:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
46:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
47:       naiveBayesMultinomialText1.stopwordsTipText();
48:       naiveBayesMultinomialText1.stemmerTipText();
49:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
50:       Instance instance0 = null;
51:       try { 
52:         naiveBayesMultinomialText0.updateClassifier((Instance) null, false);
53:         fail("Expecting exception: NullPointerException");
54:       
55:       } catch(NullPointerException e) {
56:          //
57:          // no message in exception (getMessage() returned null)
58:          //
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_37_1574153084837/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.859 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(115);
Integer.getInteger("", integer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put(integer0, linkedHashMap0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getLowercaseTokens();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.LNormTipText();
naiveBayesMultinomialText0.setOptions(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap3 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer1 = new Integer(10000);
linkedHashMap3.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
System.setCurrentTimeMillis(1097L);
naiveBayesMultinomialText1.normTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText1.stopwordsTipText();
naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText1.useWordFrequenciesTipText();
Instance instance0 = null;
naiveBayesMultinomialText0.updateClassifier((Instance) null, false);

[MASTER] 08:44:44.919 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1574153084882/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1574153084882/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.919 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.919 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 08:44:44.920 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1574153084882/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.Capabilities;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: import weka.core.neighboursearch.balltrees.BallNode;
20: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.8350563242365143
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
33:       naiveBayesMultinomialText0.setLNorm((-305.8960738906));
34:       naiveBayesMultinomialText0.setPeriodicPruning(1);
35:       TestInstances testInstances0 = new TestInstances();
36:       SGDText sGDText0 = new SGDText();
37:       Capabilities capabilities0 = sGDText0.getCapabilities();
38:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
39:       Instances instances0 = testInstances1.generate();
40:       naiveBayesMultinomialText0.buildClassifier(instances0);
41:       naiveBayesMultinomialText0.buildClassifier(instances0);
42:       naiveBayesMultinomialText0.toString();
43:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
44:       BallNode ballNode0 = new BallNode(1);
45:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
46:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       Integer integer0 = new Integer(0);
48:       linkedHashMap1.put((Integer) (-2), linkedHashMap0);
49:       Integer integer1 = new Integer((-2));
50:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
51:       Integer integer2 = new Integer(1);
52:       Integer.compareUnsigned(0, 0);
53:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
54:       linkedHashMap1.put(integer2, linkedHashMap3);
55:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
56:       naiveBayesMultinomialText1.normTipText();
57:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
58:       naiveBayesMultinomialText0.useStopListTipText();
59:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
60:       naiveBayesMultinomialText2.periodicPruningTipText();
61:       naiveBayesMultinomialText0.stopwordsTipText();
62:       naiveBayesMultinomialText0.stemmerTipText();
63:       naiveBayesMultinomialText2.LNormTipText();
64:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
65:       naiveBayesMultinomialText2.lowercaseTokensTipText();
66:       naiveBayesMultinomialText0.tokenizerTipText();
67:       double double0 = naiveBayesMultinomialText0.getLNorm();
68:       assertEquals(1, naiveBayesMultinomialText0.getPeriodicPruning());
69:       assertEquals((-305.8960738906), double0, 0.01);
70:   }
71: }
RegularFileObject[/tmp/EvoSuite_39_1574153084882/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.921 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
naiveBayesMultinomialText0.setLNorm((-305.8960738906));
naiveBayesMultinomialText0.setPeriodicPruning(1);
TestInstances testInstances0 = new TestInstances();
SGDText sGDText0 = new SGDText();
Capabilities capabilities0 = sGDText0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.toString();
MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
BallNode ballNode0 = new BallNode(1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(0);
linkedHashMap1.put((Integer) (-2), linkedHashMap0);
Integer integer1 = new Integer((-2));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer2 = new Integer(1);
Integer.compareUnsigned(0, 0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap1.put(integer2, linkedHashMap3);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
naiveBayesMultinomialText2.periodicPruningTipText();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText2.LNormTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText2.lowercaseTokensTipText();
naiveBayesMultinomialText0.tokenizerTipText();
double double0 = naiveBayesMultinomialText0.getLNorm();
assertEquals(1, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals((-305.8960738906), double0, 0.01);


[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1574153084946/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1574153084946/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 08:44:44.983 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 08:44:44.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 08:44:44.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 08:44:44.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 57
[MASTER] 08:44:44.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 57
[MASTER] 08:44:44.984 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1574153084946/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.functions.SGDText;
17: import weka.core.Capabilities;
18: import weka.core.DenseInstance;
19: import weka.core.Instance;
20: import weka.core.Instances;
21: import weka.core.TestInstances;
22: import weka.core.neighboursearch.balltrees.BallNode;
23: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.6943758113502296
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
36:       naiveBayesMultinomialText0.setLNorm((-305.8960738906));
37:       naiveBayesMultinomialText0.setPeriodicPruning(1);
38:       TestInstances testInstances0 = new TestInstances();
39:       SGDText sGDText0 = new SGDText();
40:       Capabilities capabilities0 = sGDText0.getCapabilities();
41:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
42:       Instances instances0 = testInstances1.generate();
43:       naiveBayesMultinomialText0.buildClassifier(instances0);
44:       naiveBayesMultinomialText0.buildClassifier(instances0);
45:       naiveBayesMultinomialText0.toString();
46:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
47:       BallNode ballNode0 = new BallNode(1);
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
50:       Integer integer0 = new Integer(0);
51:       linkedHashMap1.put((Integer) (-2), linkedHashMap0);
52:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
53:       Integer integer1 = new Integer((-2));
54:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
55:       Integer integer2 = new Integer(1);
56:       Integer.compareUnsigned(0, 0);
57:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
58:       linkedHashMap1.put(integer2, linkedHashMap4);
59:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
60:       naiveBayesMultinomialText1.normTipText();
61:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
62:       naiveBayesMultinomialText0.useStopListTipText();
63:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
64:       naiveBayesMultinomialText2.periodicPruningTipText();
65:       naiveBayesMultinomialText1.stopwordsTipText();
66:       naiveBayesMultinomialText1.stemmerTipText();
67:       naiveBayesMultinomialText1.LNormTipText();
68:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
69:       naiveBayesMultinomialText2.periodicPruningTipText();
70:       double[] doubleArray0 = new double[2];
71:       doubleArray0[0] = (-305.8960738906);
72:       doubleArray0[1] = (double) (-1);
73:       DenseInstance denseInstance0 = new DenseInstance((-1), doubleArray0);
74:       try { 
75:         naiveBayesMultinomialText1.updateClassifier((Instance) denseInstance0, true);
76:         fail("Expecting exception: RuntimeException");
77:       
78:       } catch(RuntimeException e) {
79:          //
80:          // DenseInstance doesn't have access to a dataset!
81:          //
82:          verifyException("weka.core.AbstractInstance", e);
83:       }
84:   }
85: }
RegularFileObject[/tmp/EvoSuite_41_1574153084946/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:44.985 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
naiveBayesMultinomialText0.setLNorm((-305.8960738906));
naiveBayesMultinomialText0.setPeriodicPruning(1);
TestInstances testInstances0 = new TestInstances();
SGDText sGDText0 = new SGDText();
Capabilities capabilities0 = sGDText0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.toString();
MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
BallNode ballNode0 = new BallNode(1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(0);
linkedHashMap1.put((Integer) (-2), linkedHashMap0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer1 = new Integer((-2));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer2 = new Integer(1);
Integer.compareUnsigned(0, 0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap1.put(integer2, linkedHashMap4);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
naiveBayesMultinomialText2.periodicPruningTipText();
naiveBayesMultinomialText1.stopwordsTipText();
naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText1.LNormTipText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
naiveBayesMultinomialText2.periodicPruningTipText();
double[] doubleArray0 = new double[2];
doubleArray0[0] = (-305.8960738906);
doubleArray0[1] = (double) (-1);
DenseInstance denseInstance0 = new DenseInstance((-1), doubleArray0);
naiveBayesMultinomialText1.updateClassifier((Instance) denseInstance0, true);

[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_43_1574153085037/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_43_1574153085037/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:45.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:45.067 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_43_1574153085037/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.Capabilities;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: import weka.core.neighboursearch.balltrees.BallNode;
20: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_43_tmp__ESTest extends NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.4228202302944575
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
33:       TestInstances testInstances0 = new TestInstances();
34:       SGDText sGDText0 = new SGDText();
35:       SGDText sGDText1 = new SGDText();
36:       Capabilities capabilities0 = sGDText1.getCapabilities();
37:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
38:       Instances instances0 = testInstances1.generate();
39:       naiveBayesMultinomialText0.buildClassifier(instances0);
40:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
41:       BallNode ballNode0 = new BallNode((-1));
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
44:       Integer integer0 = new Integer(510);
45:       linkedHashMap1.put((Integer) (-2), linkedHashMap0);
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
48:       Integer integer1 = new Integer(228);
49:       Integer.compareUnsigned((-1), 510);
50:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
51:       linkedHashMap1.put((Integer) (-1), linkedHashMap3);
52:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
53:       naiveBayesMultinomialText1.normTipText();
54:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
55:       naiveBayesMultinomialText0.useStopListTipText();
56:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
57:       naiveBayesMultinomialText0.periodicPruningTipText();
58:       naiveBayesMultinomialText0.stopwordsTipText();
59:       assertEquals((-1.2884335417433554), naiveBayesMultinomialText0.getLNorm(), 0.01);
60:       
61:       naiveBayesMultinomialText1.stemmerTipText();
62:       naiveBayesMultinomialText2.LNormTipText();
63:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
64:       String string0 = naiveBayesMultinomialText1.periodicPruningTipText();
65:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_43_1574153085037/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:45.067 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
TestInstances testInstances0 = new TestInstances();
SGDText sGDText0 = new SGDText();
SGDText sGDText1 = new SGDText();
Capabilities capabilities0 = sGDText1.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
BallNode ballNode0 = new BallNode((-1));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(510);
linkedHashMap1.put((Integer) (-2), linkedHashMap0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer1 = new Integer(228);
Integer.compareUnsigned((-1), 510);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap1.put((Integer) (-1), linkedHashMap3);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.stopwordsTipText();
assertEquals((-1.2884335417433554), naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText2.LNormTipText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
String string0 = naiveBayesMultinomialText1.periodicPruningTipText();
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);


[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1574153085367/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1574153085367/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:45.400 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1574153085367/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.Capabilities;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.399563958470642
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.setUseStopList(true);
32:       naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
33:       naiveBayesMultinomialText0.setLNorm((-305.8960738906));
34:       TestInstances testInstances0 = new TestInstances();
35:       SGDText sGDText0 = new SGDText();
36:       Capabilities capabilities0 = sGDText0.getCapabilities();
37:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
38:       Instances instances0 = testInstances1.generate();
39:       naiveBayesMultinomialText0.buildClassifier(instances0);
40:       naiveBayesMultinomialText0.buildClassifier(instances0);
41:       naiveBayesMultinomialText0.toString();
42:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
43:       
44:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
45:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
46:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       linkedHashMap1.put((Integer) (-2), linkedHashMap0);
48:       linkedHashMap1.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
49:       Integer integer0 = new Integer(22);
50:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
51:       linkedHashMap1.put((Integer) (-2), linkedHashMap2);
52:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
53:       naiveBayesMultinomialText1.normTipText();
54:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
55:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
56:       naiveBayesMultinomialText2.normalizeDocLengthTipText();
57:       naiveBayesMultinomialText2.periodicPruningTipText();
58:       naiveBayesMultinomialText1.stopwordsTipText();
59:       String string0 = naiveBayesMultinomialText2.tokenizerTipText();
60:       assertEquals("The tokenizing algorithm to use on the strings.", string0);
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_51_1574153085367/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:45.401 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(true);
naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
naiveBayesMultinomialText0.setLNorm((-305.8960738906));
TestInstances testInstances0 = new TestInstances();
SGDText sGDText0 = new SGDText();
Capabilities capabilities0 = sGDText0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.toString();
assertTrue(naiveBayesMultinomialText0.getUseStopList());

MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put((Integer) (-2), linkedHashMap0);
linkedHashMap1.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
Integer integer0 = new Integer(22);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap1.put((Integer) (-2), linkedHashMap2);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
naiveBayesMultinomialText2.normalizeDocLengthTipText();
naiveBayesMultinomialText2.periodicPruningTipText();
naiveBayesMultinomialText1.stopwordsTipText();
String string0 = naiveBayesMultinomialText2.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string0);


[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1574153085521/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1574153085521/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 08:44:45.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 52
[MASTER] 08:44:45.556 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 08:44:45.556 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 54
[MASTER] 08:44:45.556 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1574153085521/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.SparseInstance;
20: import weka.core.TestInstances;
21: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=3.0718863148615445
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
34:       naiveBayesMultinomialText0.setLNorm((-305.8960738906));
35:       TestInstances testInstances0 = new TestInstances();
36:       SGDText sGDText0 = new SGDText();
37:       Capabilities capabilities0 = sGDText0.getCapabilities();
38:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
39:       Instances instances0 = testInstances1.generate();
40:       naiveBayesMultinomialText0.buildClassifier(instances0);
41:       naiveBayesMultinomialText0.buildClassifier(instances0);
42:       naiveBayesMultinomialText0.toString();
43:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       testInstances1.generate(".arff");
46:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       linkedHashMap1.put((Integer) (-2), linkedHashMap0);
48:       linkedHashMap1.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
49:       Integer integer0 = new Integer((-2));
50:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
51:       Integer integer1 = new Integer(1);
52:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
53:       linkedHashMap3.clear();
54:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
55:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
56:       naiveBayesMultinomialText1.normTipText();
57:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
58:       binarySparseInstance0.setValueSparse((-2), (-1));
59:       SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
60:       naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
61:       naiveBayesMultinomialText0.globalInfo();
62:       naiveBayesMultinomialText1.getOptions();
63:       naiveBayesMultinomialText0.LNormTipText();
64:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
65:       naiveBayesMultinomialText0.lowercaseTokensTipText();
66:       naiveBayesMultinomialText0.tokenizerTipText();
67:       assertEquals((-305.8960738906), naiveBayesMultinomialText0.getLNorm(), 0.01);
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_56_1574153085521/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:45.557 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
naiveBayesMultinomialText0.setLNorm((-305.8960738906));
TestInstances testInstances0 = new TestInstances();
SGDText sGDText0 = new SGDText();
Capabilities capabilities0 = sGDText0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.toString();
MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
testInstances1.generate(".arff");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap1.put((Integer) (-2), linkedHashMap0);
linkedHashMap1.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
Integer integer0 = new Integer((-2));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer1 = new Integer(1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap3.clear();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
binarySparseInstance0.setValueSparse((-2), (-1));
SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText1.getOptions();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.tokenizerTipText();
assertEquals((-305.8960738906), naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1574153085595/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1574153085595/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.java]]
[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:45.621 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 51
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 51
[MASTER] 08:44:45.622 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1574153085595/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 08:44:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: import weka.core.neighboursearch.balltrees.BallNode;
21: import weka.core.neighboursearch.balltrees.MiddleOutConstructor;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_58_tmp__ESTest extends NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.3933269587382555
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
34:       TestInstances testInstances0 = new TestInstances();
35:       SGDText sGDText0 = new SGDText();
36:       SGDText sGDText1 = new SGDText();
37:       Capabilities capabilities0 = sGDText1.getCapabilities();
38:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
39:       Instances instances0 = testInstances1.generate();
40:       naiveBayesMultinomialText0.buildClassifier(instances0);
41:       MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
42:       BallNode ballNode0 = new BallNode((-1));
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       Integer integer0 = new Integer(510);
46:       linkedHashMap1.put((Integer) (-2), linkedHashMap0);
47:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
49:       Integer integer1 = new Integer(228);
50:       Integer.compareUnsigned((-1), 510);
51:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
52:       linkedHashMap1.put((Integer) (-1), linkedHashMap3);
53:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
54:       naiveBayesMultinomialText1.normTipText();
55:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
56:       naiveBayesMultinomialText0.useStopListTipText();
57:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
58:       naiveBayesMultinomialText0.periodicPruningTipText();
59:       naiveBayesMultinomialText0.stopwordsTipText();
60:       assertEquals((-1.2884335417433554), naiveBayesMultinomialText0.getLNorm(), 0.01);
61:       
62:       naiveBayesMultinomialText1.stemmerTipText();
63:       naiveBayesMultinomialText2.LNormTipText();
64:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
65:       naiveBayesMultinomialText1.periodicPruningTipText();
66:       int[] intArray0 = new int[9];
67:       intArray0[0] = (-1);
68:       intArray0[1] = (-2);
69:       intArray0[2] = (-2013);
70:       intArray0[3] = (-137);
71:       intArray0[4] = (-2);
72:       intArray0[5] = (-2);
73:       intArray0[6] = 0;
74:       intArray0[7] = 510;
75:       intArray0[8] = 510;
76:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1, intArray0, (-137));
77:       naiveBayesMultinomialText2.tokenizeInstance(binarySparseInstance0, false);
78:       assertEquals(0, naiveBayesMultinomialText2.getPeriodicPruning());
79:   }
80: }
RegularFileObject[/tmp/EvoSuite_58_1574153085595/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 08:44:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.core.AdditionalMeasureProducer",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.core.Version",
145:       "weka.filters.AllFilter",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.core.Tag",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.classifiers.functions.VotedPerceptron",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.filters.SupervisedFilter",
167:       "weka.core.TechnicalInformationHandler",
168:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
169:       "weka.core.neighboursearch.LinearNNSearch",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
180:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.classifiers.bayes.net.ADNode",
190:       "weka.core.AttributeStats",
191:       "weka.core.WeightedInstancesHandler",
192:       "weka.core.neighboursearch.NearestNeighbourSearch",
193:       "weka.classifiers.trees.DecisionStump",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.bayes.net.BIFReader",
202:       "weka.classifiers.bayes.net.ParentSet",
203:       "weka.core.stemmers.IteratedLovinsStemmer",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.filters.supervised.attribute.Discretize"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.UnassignedDatasetException",
235:       "weka.core.stemmers.SnowballStemmer",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.RandomizableClassifier",
239:       "weka.core.Tag",
240:       "weka.classifiers.functions.SGDText",
241:       "weka.core.FindWithCapabilities",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.SingleIndex",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.IteratedSingleClassifierEnhancer",
251:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
252:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.Bagging",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.classifiers.trees.REPTree",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.BIFReader",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.TechnicalInformation",
270:       "weka.core.TechnicalInformation$Type",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.core.tokenizers.NGramTokenizer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.core.DenseInstance",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.core.Range",
280:       "weka.classifiers.lazy.IBk",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.LinearNNSearch",
283:       "weka.core.NormalizableDistance",
284:       "weka.core.EuclideanDistance",
285:       "weka.core.TestInstances",
286:       "weka.attributeSelection.ASEvaluation",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.attributeSelection.PrincipalComponents",
289:       "weka.core.Instances",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.core.Stopwords",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.classifiers.misc.SerializedClassifier",
295:       "weka.core.neighboursearch.BallTree",
296:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
297:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
298:       "weka.core.neighboursearch.balltrees.BallSplitter",
299:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
301:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
302:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
303:       "weka.core.UnassignedClassException",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
309:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
310:       "weka.classifiers.rules.PART",
311:       "weka.classifiers.rules.part.MakeDecList",
312:       "weka.core.neighboursearch.KDTree",
313:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
314:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
315:       "weka.core.WekaException",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.estimators.Estimator",
318:       "weka.estimators.PoissonEstimator",
319:       "weka.classifiers.functions.VotedPerceptron",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.classifiers.functions.SimpleLogistic",
324:       "weka.attributeSelection.WrapperSubsetEval",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.Puk",
327:       "weka.core.stemmers.Stemming",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.trees.DecisionStump",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.trees.J48",
333:       "weka.classifiers.trees.j48.ClassifierTree",
334:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Vote",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.core.WekaEnumeration",
343:       "weka.core.Attribute$1",
344:       "weka.core.tokenizers.AlphabeticTokenizer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.core.SelectedTag",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.attributeSelection.ReliefFAttributeEval",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.trees.RandomTree",
359:       "weka.core.AttributeStats",
360:       "weka.estimators.KernelEstimator",
361:       "weka.core.ListOptions",
362:       "weka.core.Check",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.classifiers.functions.SMOreg",
366:       "weka.classifiers.functions.supportVector.RegOptimizer",
367:       "weka.classifiers.functions.supportVector.RegSMO",
368:       "weka.classifiers.functions.supportVector.RegSMOImproved",
369:       "weka.core.Queue",
370:       "weka.core.AttributeLocator",
371:       "weka.core.StringLocator",
372:       "weka.core.RelationalLocator",
373:       "weka.core.Queue$QueueNode",
374:       "weka.classifiers.lazy.LWL"
375:     );
376:   }
377: }

[MASTER] 08:44:45.623 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLNorm((-1.2884335417433554));
TestInstances testInstances0 = new TestInstances();
SGDText sGDText0 = new SGDText();
SGDText sGDText1 = new SGDText();
Capabilities capabilities0 = sGDText1.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
MiddleOutConstructor middleOutConstructor0 = new MiddleOutConstructor();
BallNode ballNode0 = new BallNode((-1));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(510);
linkedHashMap1.put((Integer) (-2), linkedHashMap0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer1 = new Integer(228);
Integer.compareUnsigned((-1), 510);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap4 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap1.put((Integer) (-1), linkedHashMap3);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.normTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.stopwordsTipText();
assertEquals((-1.2884335417433554), naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText2.LNormTipText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
naiveBayesMultinomialText1.periodicPruningTipText();
int[] intArray0 = new int[9];
intArray0[0] = (-1);
intArray0[1] = (-2);
intArray0[2] = (-2013);
intArray0[3] = (-137);
intArray0[4] = (-2);
intArray0[5] = (-2);
intArray0[6] = 0;
intArray0[7] = 510;
intArray0[8] = 510;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1, intArray0, (-137));
naiveBayesMultinomialText2.tokenizeInstance(binarySparseInstance0, false);
assertEquals(0, naiveBayesMultinomialText2.getPeriodicPruning());


* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:45:17.908 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:45:17.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:45:17.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:45:17.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 08:45:21.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 08:48:56.546 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:48:56.550 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 245s and 128 generations, 135405 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 11 tests with total length 366
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 23
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
