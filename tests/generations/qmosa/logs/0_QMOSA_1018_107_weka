* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:44:45.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:44:45.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:44:45.459 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:44:45.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 15:44:49.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 15:46:02.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:46:02.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 258s and 128 generations, 132259 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 410
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18383
* Connecting to master process on port 18384
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
[MASTER] 16:15:09.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:15:09.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:15:09.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:15:09.655 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:15:09.715 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:15:09.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 16:15:10.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:15:10.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:15:10.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:15:10.635 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:15:10.637 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:15:10.638 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 16:15:13.722 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 16:15:13.722 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 16:15:16.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true
[MASTER] 16:15:16.840 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 16:15:16.843 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 16:15:16.845 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 16:15:16.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 16:15:16.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 16:23:05.178 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 16:24:46.003 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 841s and 170 generations, 176561 statements, best individual has fitness: 4968.0
* Search finished after 843s and 91 generations, 127442 statements, best individual has fitness: 2832.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 265
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 134
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 713
* Number of covered goals: 451
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 134
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Generated 68 tests with total length 1587
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Search finished after 841s and 157 generations, 133190 statements, best individual has fitness: 3424.0
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Generated 68 tests with total length 1567
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 338
* Number of covered goals: 236
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 194
* Number of covered goals: 116
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 78%
* Total number of goals: 476
* Number of covered goals: 371
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 112
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 194
* Number of covered goals: 115
* Generated 63 tests with total length 1365
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 16:31:56.132 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 16:31:56.536 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 16:32:03.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 16:32:03.466 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Attribute attribute0 = new Attribute("D\"e.3Kp5v", (-1830));
Attribute attribute1 = new Attribute("integer", 2);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
LinkedList<String> linkedList0 = new LinkedList<String>();
Attribute.typeToString(2);
attribute1.indexOfValue(".jar");
Attribute attribute2 = new Attribute("Instances: attribute must be numeri, to compute kth-smallest value.", linkedList0);
arrayList0.add(attribute2);
FileSystemHandling.shouldAllThrowIOExceptions();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
arrayList1.listIterator();
Instances instances0 = new Instances("string", arrayList0, 3);
Attribute attribute3 = new Attribute("@attribute", instances0, 4);
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles");
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-11);
byteArray0[1] = (byte) (-13);
byteArray0[2] = (byte)10;
byteArray0[4] = (byte) (-83);
byteArray0[5] = (byte) (-11);
byteArray0[6] = (byte)41;
FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
Attribute attribute4 = new Attribute("string", 0);
linkedList0.add("@attribute");
linkedList0.add("relational");
Discretize discretize0 = new Discretize("weka.core.UnsupportedAttributeTypeException");
Attribute attribute5 = new Attribute("string", instances0);
arrayList0.add(attribute5);
Discretize discretize1 = new Discretize();
discretize1.setInputFormat(instances0);

[MASTER] 16:32:06.536 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 16:32:06.537 [logback-1] WARN  JUnitAnalyzer - Failing test:
 AllFilter allFilter0 = new AllFilter();
Attribute attribute0 = new Attribute("dAYh;e0{T+yq;z[iB=", (-2850));
Attribute attribute1 = attribute0.copy("first-last");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
LinkedList<String> linkedList0 = new LinkedList<String>();
Attribute.typeToString(2);
linkedList0.add("numeric");
Attribute attribute2 = new Attribute("Instances: attribute must be numeric to compute kth-smallest value.", linkedList0);
arrayList0.add(attribute2);
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
arrayList1.add(attribute1);
arrayList1.listIterator();
Instances instances0 = new Instances("relational", arrayList0, 3);
linkedList0.add("@end");
Attribute attribute3 = new Attribute((String) null, instances0, 4);
Attribute attribute4 = new Attribute((String) null, instances0, 750);
Attribute attribute5 = new Attribute("Hkn`.t3c&S*V*h", 3);
Discretize discretize0 = new Discretize("KevZzraO$rNbuc");
arrayList0.add(attribute4);
Discretize discretize1 = new Discretize();
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
[MASTER] 16:33:36.486 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_9_1574094816454/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_9_1574094816454/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:36.486 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:36.486 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:36.488 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 16:33:36.488 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 16:33:36.488 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 16:33:36.489 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 16:33:36.489 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 16:33:36.489 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 16:33:36.489 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 16:33:36.489 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_9_1574094816454/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.TestInstances;
19: import weka.core.tokenizers.NGramTokenizer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_9_tmp__ESTest extends NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.4287877436062972
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(1654, 1654);
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
35:       Integer integer0 = new Integer(10000);
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
37:       hashMap0.putIfAbsent(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
38:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       hashMap0.put(integer0, linkedHashMap1);
41:       Integer integer1 = new Integer((-556));
42:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
43:       String[] stringArray0 = new String[2];
44:       stringArray0[0] = ")2\u0001Bvh*";
45:       stringArray0[1] = "";
46:       naiveBayesMultinomialText0.setOptions(stringArray0);
47:       TestInstances testInstances0 = new TestInstances();
48:       assertEquals(0, testInstances0.getNumRelational());
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_9_1574094816454/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:36.490 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(1654, 1654);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.m_lowercaseTokens = true;
Integer integer0 = new Integer(10000);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.putIfAbsent(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap1);
Integer integer1 = new Integer((-556));
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[2];
stringArray0[0] = ")2\u0001Bvh*";
stringArray0[1] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);
TestInstances testInstances0 = new TestInstances();
assertEquals(0, testInstances0.getNumRelational());


[MASTER] 16:33:36.957 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1574094816935/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1574094816935/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:36.958 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:36.958 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:36.958 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 16:33:36.958 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1574094816935/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_23_tmp__ESTest extends NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.174442880945197
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_norm = 918.90015;
32:       naiveBayesMultinomialText0.periodicPruningTipText();
33:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
35:       naiveBayesMultinomialText0.tokenizerTipText();
36:       naiveBayesMultinomialText0.getUseWordFrequencies();
37:       naiveBayesMultinomialText0.LNormTipText();
38:       naiveBayesMultinomialText0.tokenizerTipText();
39:       naiveBayesMultinomialText0.getUseWordFrequencies();
40:       naiveBayesMultinomialText0.stopwordsTipText();
41:       naiveBayesMultinomialText0.getStopwords();
42:       MockFile.createTempFile("The LNorm to use for document length normalization.", "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances");
43:       naiveBayesMultinomialText0.getOptions();
44:       naiveBayesMultinomialText0.getNorm();
45:       naiveBayesMultinomialText0.getOptions();
46:       naiveBayesMultinomialText0.m_useStopList = false;
47:       naiveBayesMultinomialText0.getStopwords();
48:       naiveBayesMultinomialText0.getNorm();
49:       naiveBayesMultinomialText0.stemmerTipText();
50:       naiveBayesMultinomialText0.normTipText();
51:       try { 
52:         naiveBayesMultinomialText0.updateClassifier((Instance) null, true);
53:         fail("Expecting exception: NullPointerException");
54:       
55:       } catch(NullPointerException e) {
56:          //
57:          // no message in exception (getMessage() returned null)
58:          //
59:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_23_1574094816935/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:36.959 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_norm = 918.90015;
naiveBayesMultinomialText0.periodicPruningTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.getStopwords();
MockFile.createTempFile("The LNorm to use for document length normalization.", "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances");
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.updateClassifier((Instance) null, true);

[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1574094817417/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1574094817417/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 16:33:37.441 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 16:33:37.450 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1574094817417/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.LovinsStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=0.9004024235381879
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
31:       linkedHashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
32:       linkedHashMap0.values();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
34:       Integer integer0 = new Integer(10032);
35:       Integer integer1 = new Integer(1654);
36:       Integer integer2 = new Integer(10032);
37:       Integer.getInteger((String) null, integer2);
38:       linkedHashMap0.replace(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
41:       lovinsStemmer0.stem("-----------------------------------------\n\t");
42:       linkedHashMap2.remove((Object) lovinsStemmer0);
43:       linkedHashMap2.values();
44:       linkedHashMap2.clear();
45:       linkedHashMap2.clear();
46:       linkedHashMap0.put((Integer) null, linkedHashMap2);
47:       Integer integer3 = new Integer((-551));
48:       linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
49:       naiveBayesMultinomialText0.m_periodicP = 1654;
50:       // Undeclared exception!
51:       try { 
52:         naiveBayesMultinomialText0.pruneDictionary();
53:         fail("Expecting exception: NullPointerException");
54:       
55:       } catch(NullPointerException e) {
56:          //
57:          // no message in exception (getMessage() returned null)
58:          //
59:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_41_1574094817417/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:37.450 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
linkedHashMap0.values();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(10032);
Integer integer1 = new Integer(1654);
Integer integer2 = new Integer(10032);
Integer.getInteger((String) null, integer2);
linkedHashMap0.replace(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
lovinsStemmer0.stem("-----------------------------------------\n\t");
linkedHashMap2.remove((Object) lovinsStemmer0);
linkedHashMap2.values();
linkedHashMap2.clear();
linkedHashMap2.clear();
linkedHashMap0.put((Integer) null, linkedHashMap2);
Integer integer3 = new Integer((-551));
linkedHashMap0.put(integer3, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_periodicP = 1654;
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 16:33:37.573 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_47_1574094817553/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_47_1574094817553/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:37.573 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.573 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 16:33:37.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 16:33:37.575 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_47_1574094817553/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.Random;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.BinarySparseInstance;
20: import weka.core.Capabilities;
21: import weka.core.ChebyshevDistance;
22: import weka.core.Instances;
23: import weka.core.TestInstances;
24: import weka.core.tokenizers.NGramTokenizer;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_47_tmp__ESTest extends NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=3.31400451463465
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
37:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(1654, 1654);
38:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
39:       boolean boolean0 = true;
40:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
41:       Integer integer0 = new Integer((-556));
42:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
43:       naiveBayesMultinomialText0.m_periodicP = (-556);
44:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
45:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
46:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
47:       naiveBayesMultinomialText0.pruneDictionary();
48:       naiveBayesMultinomialText0.setOptions(stringArray0);
49:       BinarySparseInstance binarySparseInstance0 = null;
50:       try {
51:         binarySparseInstance0 = new BinarySparseInstance((-556), (double[]) null);
52:         fail("Expecting exception: NullPointerException");
53:       
54:       } catch(NullPointerException e) {
55:          //
56:          // no message in exception (getMessage() returned null)
57:          //
58:          verifyException("weka.core.BinarySparseInstance", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_47_1574094817553/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:37.575 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(1654, 1654);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
boolean boolean0 = true;
naiveBayesMultinomialText0.m_lowercaseTokens = true;
Integer integer0 = new Integer((-556));
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_periodicP = (-556);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setOptions(stringArray0);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-556), (double[]) null);

[MASTER] 16:33:37.597 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_48_1574094817575/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_48_1574094817575/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:37.597 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.597 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.597 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 16:33:37.597 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 16:33:37.597 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 16:33:37.598 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 51
[MASTER] 16:33:37.598 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 51
[MASTER] 16:33:37.598 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_48_1574094817575/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.stemmers.IteratedLovinsStemmer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_48_tmp__ESTest extends NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.1057342525526868
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
33:       iteratedLovinsStemmer0.toString();
34:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
35:       iteratedLovinsStemmer0.getTechnicalInformation();
36:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
37:       naiveBayesMultinomialText0.setNorm(0.0);
38:       naiveBayesMultinomialText0.m_minWordP = 0.0;
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
40:       naiveBayesMultinomialText0.getCapabilities();
41:       naiveBayesMultinomialText0.setNorm(2339.788202369477);
42:       naiveBayesMultinomialText0.LNormTipText();
43:       String[] stringArray0 = new String[4];
44:       stringArray0[0] = "weka/core/Capabilities.props";
45:       stringArray0[1] = "The LNorm to use for document length normalization.";
46:       stringArray0[2] = "weka/core/Capabilities.props";
47:       stringArray0[3] = "weka/core/Capabilities.props";
48:       naiveBayesMultinomialText0.setOptions(stringArray0);
49:       naiveBayesMultinomialText0.lowercaseTokensTipText();
50:       Integer integer0 = new Integer(1);
51:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
52:       hashMap0.putIfAbsent(integer0, linkedHashMap0);
53:       naiveBayesMultinomialText0.getNorm();
54:       naiveBayesMultinomialText0.globalInfo();
55:       naiveBayesMultinomialText0.getNormalizeDocLength();
56:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
57:       assertEquals(2339.788202369477, naiveBayesMultinomialText0.getNorm(), 0.01);
58:       assertEquals(0.0, double0, 0.01);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_48_1574094817575/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:37.599 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
iteratedLovinsStemmer0.toString();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
iteratedLovinsStemmer0.getTechnicalInformation();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
naiveBayesMultinomialText0.setNorm(0.0);
naiveBayesMultinomialText0.m_minWordP = 0.0;
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.setNorm(2339.788202369477);
naiveBayesMultinomialText0.LNormTipText();
String[] stringArray0 = new String[4];
stringArray0[0] = "weka/core/Capabilities.props";
stringArray0[1] = "The LNorm to use for document length normalization.";
stringArray0[2] = "weka/core/Capabilities.props";
stringArray0[3] = "weka/core/Capabilities.props";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.lowercaseTokensTipText();
Integer integer0 = new Integer(1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.putIfAbsent(integer0, linkedHashMap0);
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.getNormalizeDocLength();
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertEquals(2339.788202369477, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0.0, double0, 0.01);


[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1574094817648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1574094817648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 16:33:37.671 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 16:33:37.672 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1574094817648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Locale;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.stemmers.LovinsStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.3674924259668884
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.listOptions();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(1654, 1654);
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
33:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
34:       naiveBayesMultinomialText0.m_periodicP = 2648;
35:       naiveBayesMultinomialText0.m_norm = (double) 2648;
36:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
37:       naiveBayesMultinomialText0.pruneDictionary();
38:       naiveBayesMultinomialText0.setOptions(stringArray0);
39:       Locale locale0 = Locale.ITALY;
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
42:       Integer integer0 = new Integer(2648);
43:       naiveBayesMultinomialText0.pruneDictionary();
44:       assertEquals(2648, naiveBayesMultinomialText0.getPeriodicPruning());
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_51_1574094817648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:37.672 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.listOptions();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(1654, 1654);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.m_lowercaseTokens = true;
naiveBayesMultinomialText0.m_periodicP = 2648;
naiveBayesMultinomialText0.m_norm = (double) 2648;
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setOptions(stringArray0);
Locale locale0 = Locale.ITALY;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
Integer integer0 = new Integer(2648);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(2648, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1574094817764/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1574094817764/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 16:33:37.785 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 16:33:37.786 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1574094817764/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 18 16:33:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.stemmers.LovinsStemmer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.8505612088663046
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
30:       linkedHashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
31:       linkedHashMap0.values();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
34:       
35:       Integer integer0 = new Integer(10032);
36:       Integer integer1 = new Integer(1654);
37:       Integer integer2 = new Integer(10032);
38:       Integer.getInteger((String) null, integer2);
39:       linkedHashMap0.replace(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
42:       lovinsStemmer0.stem("-----------------------------------------\n\t");
43:       linkedHashMap2.remove((Object) lovinsStemmer0);
44:       linkedHashMap2.values();
45:       linkedHashMap2.clear();
46:       linkedHashMap2.clear();
47:       linkedHashMap0.put((Integer) null, linkedHashMap2);
48:       Integer integer3 = new Integer((-551));
49:       naiveBayesMultinomialText0.m_periodicP = 1654;
50:       naiveBayesMultinomialText0.pruneDictionary();
51:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_56_1574094817764/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 18 16:33:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.rules.PART",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "weka.classifiers.meta.FilteredClassifier",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.trees.j48.BinC45ModelSelection",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.supervised.attribute.AttributeSelection",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.attributeSelection.WrapperSubsetEval",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.functions.VotedPerceptron",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.core.StringLocator",
192:       "weka.core.AttributeStats",
193:       "weka.core.WeightedInstancesHandler",
194:       "weka.core.neighboursearch.NearestNeighbourSearch",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.Instances",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.AbstractInstance",
236:       "weka.core.SparseInstance",
237:       "weka.core.BinarySparseInstance",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.classifiers.bayes.NaiveBayes",
240:       "weka.core.TechnicalInformation",
241:       "weka.core.TechnicalInformation$Type",
242:       "weka.core.TechnicalInformation$Field",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SMO",
245:       "weka.classifiers.functions.supportVector.Kernel",
246:       "weka.classifiers.functions.supportVector.CachedKernel",
247:       "weka.classifiers.functions.supportVector.PolyKernel",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.CoverTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.BIFReader",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TestInstances",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.classifiers.RandomizableClassifier",
271:       "weka.classifiers.functions.SGDText",
272:       "weka.core.Attribute",
273:       "weka.core.ProtectedProperties",
274:       "weka.core.DenseInstance",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.classifiers.lazy.IBk",
277:       "weka.core.neighboursearch.LinearNNSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.FindWithCapabilities",
287:       "weka.core.SingleIndex",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.filters.Filter",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.core.neighboursearch.KDTree",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.classifiers.meta.FilteredClassifier",
299:       "weka.filters.supervised.attribute.AttributeSelection",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.attributeSelection.CfsSubsetEval",
302:       "weka.attributeSelection.ASSearch",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.attributeSelection.BestFirst",
305:       "weka.classifiers.trees.J48",
306:       "weka.core.Javadoc",
307:       "weka.core.GlobalInfoJavadoc",
308:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
309:       "weka.classifiers.meta.MultiClassClassifier",
310:       "weka.classifiers.functions.Logistic",
311:       "weka.core.SelectedTag",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.tokenizers.AlphabeticTokenizer",
315:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
316:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.CostMatrix",
319:       "weka.classifiers.bayes.NaiveBayesUpdateable",
320:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomSubSpace",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.core.Stopwords",
327:       "weka.core.stemmers.LovinsStemmer",
328:       "weka.attributeSelection.OneRAttributeEval",
329:       "weka.core.stemmers.IteratedLovinsStemmer",
330:       "weka.core.MinkowskiDistance",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.trees.m5.M5Base",
333:       "weka.classifiers.trees.M5P",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.classifiers.meta.Bagging",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.core.ManhattanDistance",
338:       "weka.filters.SimpleFilter",
339:       "weka.filters.SimpleStreamFilter",
340:       "weka.filters.MultiFilter",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.meta.RandomCommittee",
344:       "weka.classifiers.meta.CVParameterSelection",
345:       "weka.core.FastVector",
346:       "weka.classifiers.functions.GaussianProcesses",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.MultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.classifiers.trees.RandomForest",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.classifiers.rules.M5Rules",
360:       "weka.estimators.Estimator",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.AdaBoostM1",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.filters.unsupervised.attribute.Remove",
366:       "weka.classifiers.rules.PART",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.core.ClassDiscovery",
372:       "weka.classifiers.trees.LMT",
373:       "weka.core.WekaException",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.rules.OneR",
377:       "weka.estimators.NormalEstimator",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.functions.SGD",
380:       "weka.classifiers.bayes.NaiveBayesMultinomial",
381:       "weka.classifiers.functions.supportVector.Puk",
382:       "weka.core.UnsupportedAttributeTypeException",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.ChebyshevDistance",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.classifiers.meta.AttributeSelectedClassifier",
390:       "weka.core.ListOptions",
391:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
394:       "weka.core.AttributeStats",
395:       "weka.classifiers.rules.part.MakeDecList",
396:       "weka.attributeSelection.ReliefFAttributeEval",
397:       "weka.core.Check",
398:       "weka.core.CheckGOE",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.core.TechnicalInformationHandlerJavadoc",
401:       "weka.core.UnassignedClassException",
402:       "weka.core.ClassCache",
403:       "weka.core.AllJavadoc",
404:       "weka.classifiers.meta.Vote",
405:       "weka.core.stemmers.Stemming",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.classifiers.trees.j48.ClassifierTree",
408:       "weka.classifiers.trees.j48.C45PruneableClassifierTree"
409:     );
410:   }
411: }

[MASTER] 16:33:37.787 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
linkedHashMap0.values();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());

Integer integer0 = new Integer(10032);
Integer integer1 = new Integer(1654);
Integer integer2 = new Integer(10032);
Integer.getInteger((String) null, integer2);
linkedHashMap0.replace(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
lovinsStemmer0.stem("-----------------------------------------\n\t");
linkedHashMap2.remove((Object) lovinsStemmer0);
linkedHashMap2.values();
linkedHashMap2.clear();
linkedHashMap2.clear();
linkedHashMap0.put((Integer) null, linkedHashMap2);
Integer integer3 = new Integer((-551));
naiveBayesMultinomialText0.m_periodicP = 1654;
naiveBayesMultinomialText0.pruneDictionary();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 16:33:39.559 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 16:33:39.652 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:52:59.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:52:59.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:52:59.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:52:59.668 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:53:00.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:53:00.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:53:01.933 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 16:53:01.986 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 16:53:01.986 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 16:53:01.986 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 16:53:01.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 16:53:01.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 16:53:01.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 16:53:01.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 16:53:01.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 16:53:02.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 16:53:02.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 16:53:07.165 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 16:58:09.680 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 845s and 94 generations, 72391 statements, best individual has fitness: 15920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 772
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 330
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 250
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 321
* Generated 126 tests with total length 2687
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 17:13:54.050 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:13:54.148 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:13:54.499 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:13:54.499 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:48:51.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:48:51.843 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:48:51.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:48:52.694 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:48:52.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:48:52.878 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 17:48:55.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 17:48:56.359 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 17:49:10.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D: Line 765
[MASTER] 17:49:10.377 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttr()Lweka/core/Attribute;: Line 722
[MASTER] 17:49:10.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 972
[MASTER] 17:49:10.390 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 973
[MASTER] 17:49:10.391 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 974
[MASTER] 17:49:10.393 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D: root-Branch
[MASTER] 17:49:10.394 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttr()Lweka/core/Attribute;: root-Branch
[MASTER] 17:49:10.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch
[MASTER] 17:49:10.419 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 695: weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D:765 - ReplaceVariable splitPoint -> cover
[MASTER] 17:49:10.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 696: weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D:765 - ReplaceVariable splitPoint -> accu
[MASTER] 17:49:10.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 697: weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D:765 - ReplaceVariable splitPoint -> value
[MASTER] 17:49:10.424 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 698: weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D:765 - ReplaceVariable splitPoint -> accuRate
[MASTER] 17:49:10.425 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 699: weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D:765 - ReplaceVariable splitPoint -> maxInfoGain
[MASTER] 17:49:10.426 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 700: weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D:765 - InsertUnaryOp Negation
[MASTER] 17:49:10.432 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 891: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> cover
[MASTER] 17:49:10.434 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 892: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accu
[MASTER] 17:49:10.435 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 893: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accuRate
[MASTER] 17:49:10.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 894: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> maxInfoGain
[MASTER] 17:49:10.437 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 895: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - InsertUnaryOp Negation
[MASTER] 17:49:10.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 17:49:10.444 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.getSplitPoint()D
[MASTER] 17:49:10.447 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 17:49:10.448 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.getSplitPoint()D
[MASTER] 17:49:10.452 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch in context: 
[MASTER] 17:49:10.453 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.getSplitPoint()D: root-Branch in context: 
[MASTER] 17:56:11.015 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 17:58:47.424 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 842s and 255 generations, 271908 statements, best individual has fitness: 12608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 253
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 555
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Generated 64 tests with total length 1477
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 18:04:33.651 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:04:34.415 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18384
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:20:21.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:20:21.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:20:21.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:20:21.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Search finished after 853s and 26 generations, 33375 statements, best individual has fitness: 3152.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 647
* Number of covered goals: 609
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 399
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 678
* Number of covered goals: 586
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 100
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 124
* Number of covered goals: 120
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 124
* Number of covered goals: 120
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 441
* Number of covered goals: 372
* Generated 153 tests with total length 3180
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:40:12.338 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6756770833333333% of time used, but only 59/153 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
