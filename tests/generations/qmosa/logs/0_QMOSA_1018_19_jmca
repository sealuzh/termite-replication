* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:34:14.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:34:14.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:34:14.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:34:15.109 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/SimpleNode.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 16:37:00.271 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 79: com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V:111 - ReplaceComparisonOperator > -> -2
[MASTER] 16:37:00.277 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I63 Branch 9 IFGT L111 - true in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
* Search finished after 490s and 256 generations, 336535 statements, best individual has fitness: 208.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 62
* Number of covered goals: 61
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 67
* Number of covered goals: 65
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 121
* Number of covered goals: 107
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 67
* Number of covered goals: 65
* Generated 45 tests with total length 981
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 82%
* Compiling and checking tests
[MASTER] 16:44:30.161 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test25 -> class java.lang.StackOverflowError: null
[MASTER] 16:44:30.162 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(1);
simpleNode0.jjtAddChild(simpleNode0, 0);
simpleNode0.jjtAddChild(simpleNode0, 0);
simpleNode0.jjtGetNumChildren();
StringWriter stringWriter0 = new StringWriter(1);
StringWriter stringWriter1 = stringWriter0.append('{');
stringWriter1.close();
StringWriter stringWriter2 = stringWriter0.append((CharSequence) "}");
StringReader stringReader0 = new StringReader("}");
StringBuffer stringBuffer0 = new StringBuffer("}6K;&g_jc3]Ru");
StringWriter stringWriter3 = stringWriter2.append((CharSequence) "t&mqlS");
stringWriter3.append((CharSequence) "&");
String string0 = "9r9+tiX. P{<G${a\\@#";
simpleNode0.dump(string0, stringWriter3);

[MASTER] 16:44:30.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test28 -> class java.lang.StackOverflowError: null
[MASTER] 16:44:30.162 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(18);
StringWriter stringWriter0 = new StringWriter();
char[] charArray0 = new char[2];
stringWriter0.append('\u0082');
StringWriter stringWriter1 = stringWriter0.append('{');
stringWriter1.write("{");
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
charArray0[1] = '\u0082';
stringWriter1.flush();
simpleNode0.setIdentifier("{");
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
mockFileInputStream0.skip(18);
StringBuffer stringBuffer0 = new StringBuffer();
stringBuffer0.chars();
StringBuffer stringBuffer1 = new StringBuffer(300);
StringBuffer stringBuffer2 = new StringBuffer();
stringBuffer1.append((-1389L));
StringBuffer stringBuffer3 = new StringBuffer(300);
stringBuffer3.chars();
stringBuffer0.chars();
StringBuffer stringBuffer4 = new StringBuffer("&");
stringWriter1.write(18);
StringBuffer stringBuffer5 = new StringBuffer(300);
simpleNode0.dump("69;.B", stringWriter1);
assertEquals("\u0082{{\u0012<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter1.toString());

simpleNode0.toString("{");
simpleNode0.toString();
String string0 = simpleNode0.toString();
assertEquals("VariableDeclaratorId : {", string0);


[MASTER] 16:44:33.568 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test15 -> class java.lang.StackOverflowError: null
[MASTER] 16:44:33.569 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(1);
simpleNode0.jjtAddChild(simpleNode0, 0);
simpleNode0.jjtAddChild(simpleNode0, 0);
simpleNode0.jjtGetNumChildren();
StringWriter stringWriter0 = new StringWriter(1);
StringWriter stringWriter1 = stringWriter0.append('{');
char[] charArray0 = new char[8];
charArray0[0] = '{';
charArray0[1] = '{';
charArray0[2] = '{';
charArray0[3] = '{';
charArray0[4] = '{';
charArray0[5] = '{';
charArray0[6] = '{';
charArray0[7] = '{';
stringWriter1.write(charArray0);
stringWriter1.close();
StringWriter stringWriter2 = stringWriter0.append((CharSequence) "}");
StringReader stringReader0 = new StringReader("}");
simpleNode0.setIdentifier("}");
StringBuffer stringBuffer0 = new StringBuffer("}6K;&g_jc3]Ru");
StringWriter stringWriter3 = stringWriter2.append((CharSequence) "t&mqlS");
stringWriter3.append((CharSequence) "&");
String string0 = "9r9+tiX. P{<G${a\\@#";
simpleNode0.dump(string0, stringWriter3);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 18380
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:33:04.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:33:04.125 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:33:04.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:33:04.223 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaParserTokenManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 17:37:57.581 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: I4 Branch 104 TABLESWITCH L159 Case 88 - true
[MASTER] 17:37:58.059 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: I4 Branch 104 TABLESWITCH L159 Case 88 - true in context: 
* Search finished after 849s and 30 generations, 27140 statements, best individual has fitness: 22168.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 981
* Number of covered goals: 345
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 1707
* Number of covered goals: 786
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 33%
* Total number of goals: 434
* Number of covered goals: 142
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 1707
* Number of covered goals: 785
* Generated 68 tests with total length 1367
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 18380
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaCharStream.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 17:49:35.484 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.FillBuff()V
[MASTER] 17:49:35.492 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaCharStream.hexval(C)I: I3 Branch 20 TABLESWITCH L16 Case 67 - true in context: 
[MASTER] 17:52:26.223 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.UpdateLineColumn(C)V
* Search finished after 616s and 69 generations, 50784 statements, best individual has fitness: 1688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 239
* Number of covered goals: 195
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 216
* Number of covered goals: 190
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 974
* Number of covered goals: 863
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 36
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 216
* Number of covered goals: 190
* Generated 149 tests with total length 1983
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/qmosa/tests/s1018/19_jmca/evosuite-tests
* Done!

* Computation finished
