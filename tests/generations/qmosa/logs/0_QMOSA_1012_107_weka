* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2861
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:52:02.726 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:52:02.729 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:52:02.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:52:02.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:52:02.812 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:52:02.813 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 21:56:34.267 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 21:56:59.167 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 797s and 369 generations, 332781 statements, best individual has fitness: 4416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 370
* Number of covered goals: 258
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 137
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 713
* Number of covered goals: 520
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 72
* Number of covered goals: 36
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 137
* Generated 75 tests with total length 1718
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 22:07:47.436 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:07:47.747 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:07:59.935 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 22:07:59.936 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize("Length of copy missing: ");
LinkedList<String> linkedList0 = new LinkedList<String>();
ArrayList<String> arrayList0 = new ArrayList<String>();
Attribute attribute0 = new Attribute("Length of copy missing: ", arrayList0, 66);
Filter.runFilter(discretize0, (String[]) null);
Discretize discretize1 = new Discretize();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]R~4Hz");
double double0 = discretize0.m_DesiredWeightOfInstancesPerInterval;
FileSystemHandling.createFolder((EvoSuiteFile) null);
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
arrayList1.listIterator();
Instances instances0 = new Instances("Length of copy missing: ", arrayList1, 1);
Instances instances1 = new Instances(instances0);
Attribute attribute1 = new Attribute("@attribute", instances1, 3);
arrayList1.add(attribute1);
Instances instances2 = new Instances("D", arrayList1, 1);
discretize0.setInputFormat(instances2);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2864
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2865
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 22:08:13.359 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:08:13.366 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:08:13.367 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:08:14.475 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:08:14.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:08:14.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 22:08:23.044 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;: Line 627
[MASTER] 22:08:23.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;: root-Branch
[MASTER] 22:08:23.048 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 219: weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;:627 - ReplaceConstant - Whether pruning is performed. -> 
[MASTER] 22:08:23.050 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 22:08:23.051 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;
[MASTER] 22:08:23.052 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;
[MASTER] 22:08:23.053 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:usePruningTipText()Ljava/lang/String;
[MASTER] 22:14:46.227 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 843s and 74 generations, 102732 statements, best individual has fitness: 3064.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 217
* Number of covered goals: 185
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 274
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 274
* Generated 56 tests with total length 1288
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 842s and 200 generations, 205575 statements, best individual has fitness: 11400.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 705
* Number of covered goals: 293
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 416
* Number of covered goals: 133
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 993
* Number of covered goals: 615
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 416
* Number of covered goals: 133
* Generated 79 tests with total length 1904
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 22:25:02.068 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:25:02.911 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2863
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:59:12.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:59:12.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:59:12.058 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:59:12.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Search finished after 855s and 33 generations, 36799 statements, best individual has fitness: 2256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 633
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 418
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 616
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 399
* Generated 187 tests with total length 4006
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 23:19:04.413 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.671775% of time used, but only 46/187 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 23:20:39.010 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2863
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:21:24.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:21:24.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:21:24.537 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:21:24.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:21:24.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:21:24.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 23:22:26.829 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:22:26.829 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:25:52.841 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I295 Branch 39 IFEQ L458 - true
[MASTER] 23:25:53.041 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I295 Branch 39 IFEQ L458 - true in context: 
[MASTER] 23:33:24.506 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:33:33.774 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 257: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_normalize
[MASTER] 23:33:33.776 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 258: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_wordFrequencies
[MASTER] 23:33:33.777 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 259: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_useStopList
[MASTER] 23:33:33.778 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 260: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_lowercaseTokens
* Search finished after 842s and 92 generations, 87249 statements, best individual has fitness: 2184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 338
* Number of covered goals: 288
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 194
* Number of covered goals: 145
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 418
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 112
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 194
* Number of covered goals: 143
* Generated 66 tests with total length 1377
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 23:40:15.810 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_20_1574034015761/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_20_1574034015761/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.java]]
[MASTER] 23:40:15.810 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:15.810 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:15.815 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:40:15.815 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:40:15.815 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:40:15.815 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:40:15.816 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_20_1574034015761/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Nov 17 23:40:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.DenseInstance;
18: import weka.core.Instance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_20_tmp__ESTest extends NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.0931471805599453
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       DenseInstance denseInstance0 = new DenseInstance(0);
31:       Integer integer0 = new Integer(0);
32:       Integer.toUnsignedString(0);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       linkedHashMap0.put(integer0, linkedHashMap1);
35:       System.setCurrentTimeMillis(0);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       try { 
38:         naiveBayesMultinomialText0.updateClassifier((Instance) denseInstance0, false);
39:         fail("Expecting exception: RuntimeException");
40:       
41:       } catch(RuntimeException e) {
42:          //
43:          // DenseInstance doesn't have access to a dataset!
44:          //
45:          verifyException("weka.core.AbstractInstance", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_20_1574034015761/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Nov 17 23:40:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.attributeSelection.ReliefFAttributeEval",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.core.MinkowskiDistance",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.ChebyshevDistance",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
132:       "weka.core.BinarySparseInstance",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
134:       "weka.core.AttributeLocator",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.core.OptionHandlerJavadoc",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.SingleIndex",
148:       "weka.core.CapabilitiesHandler",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
150:       "weka.attributeSelection.ASEvaluation",
151:       "weka.core.AbstractInstance",
152:       "weka.core.scripting.JythonObject",
153:       "weka.core.SelectedTag",
154:       "org.pentaho.packageManagement.DefaultPackage",
155:       "weka.core.neighboursearch.balltrees.BallSplitter",
156:       "weka.classifiers.bayes.BayesNet",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
159:       "weka.core.Version",
160:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
161:       "weka.core.Tag",
162:       "weka.classifiers.trees.j48.BinC45ModelSelection",
163:       "weka.core.neighboursearch.CoverTree",
164:       "weka.classifiers.AbstractClassifier",
165:       "weka.estimators.UnivariateDensityEstimator",
166:       "weka.filters.unsupervised.attribute.Center",
167:       "weka.core.FindWithCapabilities",
168:       "weka.core.OptionHandler",
169:       "weka.core.WekaException",
170:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
171:       "weka.filters.StreamableFilter",
172:       "weka.core.Range",
173:       "weka.core.PartitionGenerator",
174:       "weka.core.scripting.JythonSerializableObject",
175:       "weka.classifiers.Classifier",
176:       "weka.attributeSelection.InfoGainAttributeEval",
177:       "weka.core.Capabilities$Capability",
178:       "weka.core.SparseInstance",
179:       "org.pentaho.packageManagement.PackageManager",
180:       "weka.classifiers.trees.j48.ClassifierSplitModel",
181:       "weka.attributeSelection.AttributeTransformer",
182:       "weka.core.tokenizers.WordTokenizer",
183:       "weka.classifiers.misc.SerializedClassifier",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.attributeSelection.PrincipalComponents",
187:       "weka.core.stemmers.SnowballStemmer",
188:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
189:       "weka.classifiers.trees.j48.PruneableClassifierTree",
190:       "weka.core.stemmers.LovinsStemmer",
191:       "weka.classifiers.Evaluation",
192:       "weka.classifiers.functions.supportVector.Kernel",
193:       "weka.core.WekaPackageManager",
194:       "weka.filters.SupervisedFilter",
195:       "weka.core.TechnicalInformationHandler",
196:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.core.neighboursearch.PerformanceStats",
200:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
201:       "weka.filters.unsupervised.attribute.NumericToBinary",
202:       "weka.estimators.KernelEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Instance",
216:       "weka.classifiers.rules.part.MakeDecList",
217:       "weka.core.ProtectedProperties",
218:       "weka.estimators.Estimator",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.classifiers.bayes.net.ADNode",
222:       "weka.core.Matchable",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.GlobalInfoJavadoc",
227:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
228:       "weka.core.TechnicalInformation$Field",
229:       "weka.filters.unsupervised.attribute.Remove",
230:       "weka.filters.unsupervised.attribute.Discretize",
231:       "weka.core.Randomizable",
232:       "weka.core.Javadoc",
233:       "weka.classifiers.trees.j48.NoSplit",
234:       "weka.core.EuclideanDistance",
235:       "weka.core.Instances",
236:       "weka.core.UnassignedClassException",
237:       "weka.classifiers.bayes.net.BIFReader",
238:       "weka.classifiers.bayes.net.ParentSet",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.UnsupportedAttributeTypeException",
244:       "weka.core.TechnicalInformation",
245:       "weka.classifiers.Sourcable",
246:       "weka.core.RevisionHandler",
247:       "weka.classifiers.evaluation.output.prediction.PlainText",
248:       "weka.core.neighboursearch.TreePerformanceStats",
249:       "weka.core.xml.XMLSerialization",
250:       "weka.classifiers.xml.XMLClassifier",
251:       "weka.filters.Filter",
252:       "weka.filters.supervised.attribute.Discretize"
253:     );
254:   } 
255: 
256:   private static void resetClasses() {
257:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader()); 
258: 
259:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
260:       "weka.classifiers.AbstractClassifier",
261:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
262:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
263:       "weka.core.Capabilities$Capability",
264:       "weka.core.tokenizers.Tokenizer",
265:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
266:       "weka.core.tokenizers.WordTokenizer",
267:       "weka.core.stemmers.NullStemmer",
268:       "weka.classifiers.Evaluation",
269:       "weka.core.Utils",
270:       "weka.core.Option",
271:       "weka.core.Capabilities",
272:       "org.pentaho.packageManagement.PackageManager",
273:       "org.pentaho.packageManagement.DefaultPackageManager",
274:       "weka.core.Version",
275:       "weka.core.Environment",
276:       "weka.core.WekaPackageManager",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.AbstractInstance",
282:       "weka.core.DenseInstance",
283:       "weka.core.neighboursearch.balltrees.BallNode",
284:       "weka.classifiers.RandomizableClassifier",
285:       "weka.core.Tag",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.SerializedObject",
288:       "weka.core.SparseInstance",
289:       "weka.core.BinarySparseInstance",
290:       "weka.core.UnassignedDatasetException",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.KDTree",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.Range",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.filters.Filter",
299:       "weka.filters.supervised.attribute.Discretize",
300:       "weka.core.neighboursearch.CoverTree",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.converters.ArffLoader$ArffReader",
309:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
310:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
311:       "weka.core.tokenizers.AlphabeticTokenizer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.misc.InputMappedClassifier",
314:       "weka.classifiers.rules.ZeroR",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.classifiers.bayes.BayesNet",
317:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
318:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
319:       "weka.classifiers.bayes.net.search.local.K2",
320:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
321:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
327:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
328:       "weka.core.neighboursearch.balltrees.BallSplitter",
329:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
330:       "weka.classifiers.functions.SimpleLinearRegression",
331:       "weka.classifiers.rules.OneR",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.core.stemmers.Stemming",
337:       "weka.classifiers.bayes.NaiveBayes",
338:       "weka.core.Stopwords",
339:       "weka.core.tokenizers.NGramTokenizer",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
346:       "weka.core.stemmers.IteratedLovinsStemmer",
347:       "weka.classifiers.meta.FilteredClassifier",
348:       "weka.filters.supervised.attribute.AttributeSelection",
349:       "weka.attributeSelection.AttributeSelection",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.attributeSelection.ASSearch",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.BestFirst",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
361:       "weka.classifiers.trees.RandomForest",
362:       "weka.classifiers.meta.ClassificationViaRegression",
363:       "weka.classifiers.trees.m5.M5Base",
364:       "weka.classifiers.trees.M5P",
365:       "weka.classifiers.functions.supportVector.Puk",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
369:       "weka.classifiers.meta.Vote",
370:       "weka.core.SelectedTag",
371:       "weka.core.Javadoc",
372:       "weka.core.TechnicalInformationHandlerJavadoc",
373:       "weka.classifiers.meta.RegressionByDiscretization",
374:       "weka.filters.unsupervised.attribute.Discretize",
375:       "weka.classifiers.trees.j48.ClassifierTree",
376:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
377:       "weka.core.WekaException",
378:       "weka.core.UnsupportedAttributeTypeException",
379:       "weka.core.TechnicalInformation",
380:       "weka.core.TechnicalInformation$Type",
381:       "weka.core.TechnicalInformation$Field",
382:       "weka.core.ClassDiscovery",
383:       "weka.core.ClassCache",
384:       "weka.core.AllJavadoc",
385:       "weka.core.Check",
386:       "weka.core.CheckOptionHandler",
387:       "weka.core.CheckGOE",
388:       "weka.core.MinkowskiDistance",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.classifiers.bayes.net.BIFReader",
392:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.estimators.Estimator",
395:       "weka.estimators.NormalEstimator",
396:       "weka.core.ListOptions",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
399:       "weka.core.ManhattanDistance",
400:       "weka.attributeSelection.WrapperSubsetEval",
401:       "weka.classifiers.trees.RandomTree",
402:       "weka.core.neighboursearch.LinearNNSearch",
403:       "weka.attributeSelection.OneRAttributeEval",
404:       "weka.classifiers.functions.SimpleLogistic",
405:       "weka.classifiers.functions.supportVector.StringKernel",
406:       "weka.classifiers.functions.VotedPerceptron",
407:       "weka.classifiers.trees.DecisionStump",
408:       "weka.core.matrix.Matrix",
409:       "weka.attributeSelection.ReliefFAttributeEval",
410:       "weka.classifiers.bayes.NaiveBayesMultinomial",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.rules.JRip",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.classifiers.trees.REPTree",
416:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
417:       "weka.core.UnassignedClassException",
418:       "weka.core.WekaEnumeration",
419:       "weka.core.Attribute$1",
420:       "weka.classifiers.rules.DecisionTable",
421:       "weka.classifiers.functions.SMO",
422:       "weka.classifiers.lazy.LWL",
423:       "weka.estimators.PoissonEstimator",
424:       "weka.classifiers.bayes.NaiveBayesUpdateable",
425:       "weka.core.Queue",
426:       "weka.core.AttributeLocator",
427:       "weka.core.StringLocator",
428:       "weka.core.RelationalLocator",
429:       "weka.core.ContingencyTables",
430:       "weka.core.Queue$QueueNode",
431:       "weka.classifiers.IteratedSingleClassifierEnhancer",
432:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
433:       "weka.classifiers.meta.LogitBoost",
434:       "weka.classifiers.lazy.IBk",
435:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
437:       "weka.classifiers.meta.RandomCommittee",
438:       "weka.classifiers.functions.SGD",
439:       "weka.filters.AllFilter",
440:       "weka.classifiers.functions.supportVector.RBFKernel",
441:       "weka.core.SerializationHelper",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader",
446:       "weka.classifiers.rules.PART",
447:       "weka.classifiers.functions.Logistic",
448:       "weka.classifiers.meta.Bagging",
449:       "weka.classifiers.meta.MultiClassClassifier",
450:       "weka.estimators.KernelEstimator",
451:       "weka.classifiers.meta.RandomSubSpace",
452:       "weka.classifiers.meta.AdaBoostM1"
453:     );
454:   }
455: }

[MASTER] 23:40:15.816 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
DenseInstance denseInstance0 = new DenseInstance(0);
Integer integer0 = new Integer(0);
Integer.toUnsignedString(0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
System.setCurrentTimeMillis(0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.updateClassifier((Instance) denseInstance0, false);

[MASTER] 23:40:15.946 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1574034015922/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1574034015922/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.java]]
[MASTER] 23:40:15.946 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:15.946 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:15.947 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:40:15.947 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:40:15.947 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1574034015922/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Nov 17 23:40:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_23_tmp__ESTest extends NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.6401461330725327
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       naiveBayesMultinomialText0.setPeriodicPruning(377);
29:       naiveBayesMultinomialText0.lowercaseTokensTipText();
30:       naiveBayesMultinomialText0.lowercaseTokensTipText();
31:       naiveBayesMultinomialText0.useStopListTipText();
32:       naiveBayesMultinomialText0.setUseStopList(false);
33:       naiveBayesMultinomialText0.getRevision();
34:       naiveBayesMultinomialText0.setDebug(false);
35:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
36:       naiveBayesMultinomialText0.stemmerTipText();
37:       // Undeclared exception!
38:       try { 
39:         naiveBayesMultinomialText0.pruneDictionary();
40:         fail("Expecting exception: NullPointerException");
41:       
42:       } catch(NullPointerException e) {
43:          //
44:          // no message in exception (getMessage() returned null)
45:          //
46:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_23_1574034015922/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Nov 17 23:40:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.attributeSelection.ReliefFAttributeEval",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.core.MinkowskiDistance",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.ChebyshevDistance",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
132:       "weka.core.BinarySparseInstance",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
134:       "weka.core.AttributeLocator",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.core.OptionHandlerJavadoc",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.SingleIndex",
148:       "weka.core.CapabilitiesHandler",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
150:       "weka.attributeSelection.ASEvaluation",
151:       "weka.core.AbstractInstance",
152:       "weka.core.scripting.JythonObject",
153:       "weka.core.SelectedTag",
154:       "org.pentaho.packageManagement.DefaultPackage",
155:       "weka.core.neighboursearch.balltrees.BallSplitter",
156:       "weka.classifiers.bayes.BayesNet",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
159:       "weka.core.Version",
160:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
161:       "weka.core.Tag",
162:       "weka.classifiers.trees.j48.BinC45ModelSelection",
163:       "weka.core.neighboursearch.CoverTree",
164:       "weka.classifiers.AbstractClassifier",
165:       "weka.estimators.UnivariateDensityEstimator",
166:       "weka.filters.unsupervised.attribute.Center",
167:       "weka.core.FindWithCapabilities",
168:       "weka.core.OptionHandler",
169:       "weka.core.WekaException",
170:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
171:       "weka.filters.StreamableFilter",
172:       "weka.core.Range",
173:       "weka.core.PartitionGenerator",
174:       "weka.core.scripting.JythonSerializableObject",
175:       "weka.classifiers.Classifier",
176:       "weka.attributeSelection.InfoGainAttributeEval",
177:       "weka.core.Capabilities$Capability",
178:       "weka.core.SparseInstance",
179:       "org.pentaho.packageManagement.PackageManager",
180:       "weka.classifiers.trees.j48.ClassifierSplitModel",
181:       "weka.attributeSelection.AttributeTransformer",
182:       "weka.core.tokenizers.WordTokenizer",
183:       "weka.classifiers.misc.SerializedClassifier",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.attributeSelection.PrincipalComponents",
187:       "weka.core.stemmers.SnowballStemmer",
188:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
189:       "weka.classifiers.trees.j48.PruneableClassifierTree",
190:       "weka.core.stemmers.LovinsStemmer",
191:       "weka.classifiers.Evaluation",
192:       "weka.classifiers.functions.supportVector.Kernel",
193:       "weka.core.WekaPackageManager",
194:       "weka.filters.SupervisedFilter",
195:       "weka.core.TechnicalInformationHandler",
196:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.core.neighboursearch.PerformanceStats",
200:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
201:       "weka.filters.unsupervised.attribute.NumericToBinary",
202:       "weka.estimators.KernelEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Instance",
216:       "weka.classifiers.rules.part.MakeDecList",
217:       "weka.core.ProtectedProperties",
218:       "weka.estimators.Estimator",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.classifiers.bayes.net.ADNode",
222:       "weka.core.Matchable",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.GlobalInfoJavadoc",
227:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
228:       "weka.core.TechnicalInformation$Field",
229:       "weka.filters.unsupervised.attribute.Remove",
230:       "weka.filters.unsupervised.attribute.Discretize",
231:       "weka.core.Randomizable",
232:       "weka.core.Javadoc",
233:       "weka.classifiers.trees.j48.NoSplit",
234:       "weka.core.EuclideanDistance",
235:       "weka.core.Instances",
236:       "weka.core.UnassignedClassException",
237:       "weka.classifiers.bayes.net.BIFReader",
238:       "weka.classifiers.bayes.net.ParentSet",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.UnsupportedAttributeTypeException",
244:       "weka.core.TechnicalInformation",
245:       "weka.classifiers.Sourcable",
246:       "weka.core.RevisionHandler",
247:       "weka.classifiers.evaluation.output.prediction.PlainText",
248:       "weka.core.neighboursearch.TreePerformanceStats",
249:       "weka.core.xml.XMLSerialization",
250:       "weka.classifiers.xml.XMLClassifier",
251:       "weka.filters.Filter",
252:       "weka.filters.supervised.attribute.Discretize"
253:     );
254:   } 
255: 
256:   private static void resetClasses() {
257:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
258: 
259:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
260:       "weka.classifiers.AbstractClassifier",
261:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
262:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
263:       "weka.core.Capabilities$Capability",
264:       "weka.core.tokenizers.Tokenizer",
265:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
266:       "weka.core.tokenizers.WordTokenizer",
267:       "weka.core.stemmers.NullStemmer",
268:       "weka.classifiers.Evaluation",
269:       "weka.core.Utils",
270:       "weka.core.Option",
271:       "weka.core.Capabilities",
272:       "org.pentaho.packageManagement.PackageManager",
273:       "org.pentaho.packageManagement.DefaultPackageManager",
274:       "weka.core.Version",
275:       "weka.core.Environment",
276:       "weka.core.WekaPackageManager",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.AbstractInstance",
282:       "weka.core.DenseInstance",
283:       "weka.core.neighboursearch.balltrees.BallNode",
284:       "weka.classifiers.RandomizableClassifier",
285:       "weka.core.Tag",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.SerializedObject",
288:       "weka.core.SparseInstance",
289:       "weka.core.BinarySparseInstance",
290:       "weka.core.UnassignedDatasetException",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.KDTree",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.Range",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.filters.Filter",
299:       "weka.filters.supervised.attribute.Discretize",
300:       "weka.core.neighboursearch.CoverTree",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.converters.ArffLoader$ArffReader",
309:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
310:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
311:       "weka.core.tokenizers.AlphabeticTokenizer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.misc.InputMappedClassifier",
314:       "weka.classifiers.rules.ZeroR",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.classifiers.bayes.BayesNet",
317:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
318:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
319:       "weka.classifiers.bayes.net.search.local.K2",
320:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
321:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
327:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
328:       "weka.core.neighboursearch.balltrees.BallSplitter",
329:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
330:       "weka.classifiers.functions.SimpleLinearRegression",
331:       "weka.classifiers.rules.OneR",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.core.stemmers.Stemming",
337:       "weka.classifiers.bayes.NaiveBayes",
338:       "weka.core.Stopwords",
339:       "weka.core.tokenizers.NGramTokenizer",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
346:       "weka.core.stemmers.IteratedLovinsStemmer",
347:       "weka.classifiers.meta.FilteredClassifier",
348:       "weka.filters.supervised.attribute.AttributeSelection",
349:       "weka.attributeSelection.AttributeSelection",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.attributeSelection.ASSearch",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.BestFirst",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
361:       "weka.classifiers.trees.RandomForest",
362:       "weka.classifiers.meta.ClassificationViaRegression",
363:       "weka.classifiers.trees.m5.M5Base",
364:       "weka.classifiers.trees.M5P",
365:       "weka.classifiers.functions.supportVector.Puk",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
369:       "weka.classifiers.meta.Vote",
370:       "weka.core.SelectedTag",
371:       "weka.core.Javadoc",
372:       "weka.core.TechnicalInformationHandlerJavadoc",
373:       "weka.classifiers.meta.RegressionByDiscretization",
374:       "weka.filters.unsupervised.attribute.Discretize",
375:       "weka.classifiers.trees.j48.ClassifierTree",
376:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
377:       "weka.core.WekaException",
378:       "weka.core.UnsupportedAttributeTypeException",
379:       "weka.core.TechnicalInformation",
380:       "weka.core.TechnicalInformation$Type",
381:       "weka.core.TechnicalInformation$Field",
382:       "weka.core.ClassDiscovery",
383:       "weka.core.ClassCache",
384:       "weka.core.AllJavadoc",
385:       "weka.core.Check",
386:       "weka.core.CheckOptionHandler",
387:       "weka.core.CheckGOE",
388:       "weka.core.MinkowskiDistance",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.classifiers.bayes.net.BIFReader",
392:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.estimators.Estimator",
395:       "weka.estimators.NormalEstimator",
396:       "weka.core.ListOptions",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
399:       "weka.core.ManhattanDistance",
400:       "weka.attributeSelection.WrapperSubsetEval",
401:       "weka.classifiers.trees.RandomTree",
402:       "weka.core.neighboursearch.LinearNNSearch",
403:       "weka.attributeSelection.OneRAttributeEval",
404:       "weka.classifiers.functions.SimpleLogistic",
405:       "weka.classifiers.functions.supportVector.StringKernel",
406:       "weka.classifiers.functions.VotedPerceptron",
407:       "weka.classifiers.trees.DecisionStump",
408:       "weka.core.matrix.Matrix",
409:       "weka.attributeSelection.ReliefFAttributeEval",
410:       "weka.classifiers.bayes.NaiveBayesMultinomial",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.rules.JRip",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.classifiers.trees.REPTree",
416:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
417:       "weka.core.UnassignedClassException",
418:       "weka.core.WekaEnumeration",
419:       "weka.core.Attribute$1",
420:       "weka.classifiers.rules.DecisionTable",
421:       "weka.classifiers.functions.SMO",
422:       "weka.classifiers.lazy.LWL",
423:       "weka.estimators.PoissonEstimator",
424:       "weka.classifiers.bayes.NaiveBayesUpdateable",
425:       "weka.core.Queue",
426:       "weka.core.AttributeLocator",
427:       "weka.core.StringLocator",
428:       "weka.core.RelationalLocator",
429:       "weka.core.ContingencyTables",
430:       "weka.core.Queue$QueueNode",
431:       "weka.classifiers.IteratedSingleClassifierEnhancer",
432:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
433:       "weka.classifiers.meta.LogitBoost",
434:       "weka.classifiers.lazy.IBk",
435:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
437:       "weka.classifiers.meta.RandomCommittee",
438:       "weka.classifiers.functions.SGD",
439:       "weka.filters.AllFilter",
440:       "weka.classifiers.functions.supportVector.RBFKernel",
441:       "weka.core.SerializationHelper",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader",
446:       "weka.classifiers.rules.PART",
447:       "weka.classifiers.functions.Logistic",
448:       "weka.classifiers.meta.Bagging",
449:       "weka.classifiers.meta.MultiClassClassifier",
450:       "weka.estimators.KernelEstimator",
451:       "weka.classifiers.meta.RandomSubSpace",
452:       "weka.classifiers.meta.AdaBoostM1"
453:     );
454:   }
455: }

[MASTER] 23:40:15.947 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setPeriodicPruning(377);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.setUseStopList(false);
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.setDebug(false);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 23:40:16.099 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1574034016079/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1574034016079/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.java]]
[MASTER] 23:40:16.099 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.099 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.099 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:40:16.099 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:40:16.099 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1574034016079/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Nov 17 23:40:16 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.EvoSuiteFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.MinkowskiDistance;
18: import weka.core.stemmers.SnowballStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_29_tmp__ESTest extends NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.2623477045221723
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
30:       FileSystemHandling.createFolder(evoSuiteFile0);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.lowercaseTokensTipText();
34:       naiveBayesMultinomialText0.lowercaseTokensTipText();
35:       naiveBayesMultinomialText0.useStopListTipText();
36:       naiveBayesMultinomialText0.setDebug(false);
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:       
39:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
40:       naiveBayesMultinomialText0.m_lnorm = 0.0;
41:       double[] doubleArray0 = new double[4];
42:       doubleArray0[0] = (double) 377;
43:       doubleArray0[1] = (double) 377;
44:       doubleArray0[3] = (double) 377;
45:       naiveBayesMultinomialText1.m_wordsPerClass = doubleArray0;
46:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
47:       LinkedHashMap<MinkowskiDistance, SnowballStemmer> linkedHashMap1 = new LinkedHashMap<MinkowskiDistance, SnowballStemmer>(1, 377, false);
48:       naiveBayesMultinomialText0.getPeriodicPruning();
49:       String string0 = naiveBayesMultinomialText0.minWordFrequencyTipText();
50:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string0);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_29_1574034016079/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Nov 17 23:40:16 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.attributeSelection.ReliefFAttributeEval",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.core.MinkowskiDistance",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.ChebyshevDistance",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
132:       "weka.core.BinarySparseInstance",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
134:       "weka.core.AttributeLocator",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.core.OptionHandlerJavadoc",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.SingleIndex",
148:       "weka.core.CapabilitiesHandler",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
150:       "weka.attributeSelection.ASEvaluation",
151:       "weka.core.AbstractInstance",
152:       "weka.core.scripting.JythonObject",
153:       "weka.core.SelectedTag",
154:       "org.pentaho.packageManagement.DefaultPackage",
155:       "weka.core.neighboursearch.balltrees.BallSplitter",
156:       "weka.classifiers.bayes.BayesNet",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
159:       "weka.core.Version",
160:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
161:       "weka.core.Tag",
162:       "weka.classifiers.trees.j48.BinC45ModelSelection",
163:       "weka.core.neighboursearch.CoverTree",
164:       "weka.classifiers.AbstractClassifier",
165:       "weka.estimators.UnivariateDensityEstimator",
166:       "weka.filters.unsupervised.attribute.Center",
167:       "weka.core.FindWithCapabilities",
168:       "weka.core.OptionHandler",
169:       "weka.core.WekaException",
170:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
171:       "weka.filters.StreamableFilter",
172:       "weka.core.Range",
173:       "weka.core.PartitionGenerator",
174:       "weka.core.scripting.JythonSerializableObject",
175:       "weka.classifiers.Classifier",
176:       "weka.attributeSelection.InfoGainAttributeEval",
177:       "weka.core.Capabilities$Capability",
178:       "weka.core.SparseInstance",
179:       "org.pentaho.packageManagement.PackageManager",
180:       "weka.classifiers.trees.j48.ClassifierSplitModel",
181:       "weka.attributeSelection.AttributeTransformer",
182:       "weka.core.tokenizers.WordTokenizer",
183:       "weka.classifiers.misc.SerializedClassifier",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.attributeSelection.PrincipalComponents",
187:       "weka.core.stemmers.SnowballStemmer",
188:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
189:       "weka.classifiers.trees.j48.PruneableClassifierTree",
190:       "weka.core.stemmers.LovinsStemmer",
191:       "weka.classifiers.Evaluation",
192:       "weka.classifiers.functions.supportVector.Kernel",
193:       "weka.core.WekaPackageManager",
194:       "weka.filters.SupervisedFilter",
195:       "weka.core.TechnicalInformationHandler",
196:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.core.neighboursearch.PerformanceStats",
200:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
201:       "weka.filters.unsupervised.attribute.NumericToBinary",
202:       "weka.estimators.KernelEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Instance",
216:       "weka.classifiers.rules.part.MakeDecList",
217:       "weka.core.ProtectedProperties",
218:       "weka.estimators.Estimator",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.classifiers.bayes.net.ADNode",
222:       "weka.core.Matchable",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.GlobalInfoJavadoc",
227:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
228:       "weka.core.TechnicalInformation$Field",
229:       "weka.filters.unsupervised.attribute.Remove",
230:       "weka.filters.unsupervised.attribute.Discretize",
231:       "weka.core.Randomizable",
232:       "weka.core.Javadoc",
233:       "weka.classifiers.trees.j48.NoSplit",
234:       "weka.core.EuclideanDistance",
235:       "weka.core.Instances",
236:       "weka.core.UnassignedClassException",
237:       "weka.classifiers.bayes.net.BIFReader",
238:       "weka.classifiers.bayes.net.ParentSet",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.UnsupportedAttributeTypeException",
244:       "weka.core.TechnicalInformation",
245:       "weka.classifiers.Sourcable",
246:       "weka.core.RevisionHandler",
247:       "weka.classifiers.evaluation.output.prediction.PlainText",
248:       "weka.core.neighboursearch.TreePerformanceStats",
249:       "weka.core.xml.XMLSerialization",
250:       "weka.classifiers.xml.XMLClassifier",
251:       "weka.filters.Filter",
252:       "weka.filters.supervised.attribute.Discretize"
253:     );
254:   } 
255: 
256:   private static void resetClasses() {
257:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
258: 
259:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
260:       "weka.classifiers.AbstractClassifier",
261:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
262:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
263:       "weka.core.Capabilities$Capability",
264:       "weka.core.tokenizers.Tokenizer",
265:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
266:       "weka.core.tokenizers.WordTokenizer",
267:       "weka.core.stemmers.NullStemmer",
268:       "weka.classifiers.Evaluation",
269:       "weka.core.Utils",
270:       "weka.core.Option",
271:       "weka.core.Capabilities",
272:       "org.pentaho.packageManagement.PackageManager",
273:       "org.pentaho.packageManagement.DefaultPackageManager",
274:       "weka.core.Version",
275:       "weka.core.Environment",
276:       "weka.core.WekaPackageManager",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.AbstractInstance",
282:       "weka.core.DenseInstance",
283:       "weka.core.neighboursearch.balltrees.BallNode",
284:       "weka.classifiers.RandomizableClassifier",
285:       "weka.core.Tag",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.SerializedObject",
288:       "weka.core.SparseInstance",
289:       "weka.core.BinarySparseInstance",
290:       "weka.core.UnassignedDatasetException",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.KDTree",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.Range",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.filters.Filter",
299:       "weka.filters.supervised.attribute.Discretize",
300:       "weka.core.neighboursearch.CoverTree",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.converters.ArffLoader$ArffReader",
309:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
310:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
311:       "weka.core.tokenizers.AlphabeticTokenizer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.misc.InputMappedClassifier",
314:       "weka.classifiers.rules.ZeroR",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.classifiers.bayes.BayesNet",
317:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
318:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
319:       "weka.classifiers.bayes.net.search.local.K2",
320:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
321:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
327:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
328:       "weka.core.neighboursearch.balltrees.BallSplitter",
329:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
330:       "weka.classifiers.functions.SimpleLinearRegression",
331:       "weka.classifiers.rules.OneR",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.core.stemmers.Stemming",
337:       "weka.classifiers.bayes.NaiveBayes",
338:       "weka.core.Stopwords",
339:       "weka.core.tokenizers.NGramTokenizer",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
346:       "weka.core.stemmers.IteratedLovinsStemmer",
347:       "weka.classifiers.meta.FilteredClassifier",
348:       "weka.filters.supervised.attribute.AttributeSelection",
349:       "weka.attributeSelection.AttributeSelection",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.attributeSelection.ASSearch",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.BestFirst",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
361:       "weka.classifiers.trees.RandomForest",
362:       "weka.classifiers.meta.ClassificationViaRegression",
363:       "weka.classifiers.trees.m5.M5Base",
364:       "weka.classifiers.trees.M5P",
365:       "weka.classifiers.functions.supportVector.Puk",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
369:       "weka.classifiers.meta.Vote",
370:       "weka.core.SelectedTag",
371:       "weka.core.Javadoc",
372:       "weka.core.TechnicalInformationHandlerJavadoc",
373:       "weka.classifiers.meta.RegressionByDiscretization",
374:       "weka.filters.unsupervised.attribute.Discretize",
375:       "weka.classifiers.trees.j48.ClassifierTree",
376:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
377:       "weka.core.WekaException",
378:       "weka.core.UnsupportedAttributeTypeException",
379:       "weka.core.TechnicalInformation",
380:       "weka.core.TechnicalInformation$Type",
381:       "weka.core.TechnicalInformation$Field",
382:       "weka.core.ClassDiscovery",
383:       "weka.core.ClassCache",
384:       "weka.core.AllJavadoc",
385:       "weka.core.Check",
386:       "weka.core.CheckOptionHandler",
387:       "weka.core.CheckGOE",
388:       "weka.core.MinkowskiDistance",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.classifiers.bayes.net.BIFReader",
392:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.estimators.Estimator",
395:       "weka.estimators.NormalEstimator",
396:       "weka.core.ListOptions",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
399:       "weka.core.ManhattanDistance",
400:       "weka.attributeSelection.WrapperSubsetEval",
401:       "weka.classifiers.trees.RandomTree",
402:       "weka.core.neighboursearch.LinearNNSearch",
403:       "weka.attributeSelection.OneRAttributeEval",
404:       "weka.classifiers.functions.SimpleLogistic",
405:       "weka.classifiers.functions.supportVector.StringKernel",
406:       "weka.classifiers.functions.VotedPerceptron",
407:       "weka.classifiers.trees.DecisionStump",
408:       "weka.core.matrix.Matrix",
409:       "weka.attributeSelection.ReliefFAttributeEval",
410:       "weka.classifiers.bayes.NaiveBayesMultinomial",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.rules.JRip",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.classifiers.trees.REPTree",
416:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
417:       "weka.core.UnassignedClassException",
418:       "weka.core.WekaEnumeration",
419:       "weka.core.Attribute$1",
420:       "weka.classifiers.rules.DecisionTable",
421:       "weka.classifiers.functions.SMO",
422:       "weka.classifiers.lazy.LWL",
423:       "weka.estimators.PoissonEstimator",
424:       "weka.classifiers.bayes.NaiveBayesUpdateable",
425:       "weka.core.Queue",
426:       "weka.core.AttributeLocator",
427:       "weka.core.StringLocator",
428:       "weka.core.RelationalLocator",
429:       "weka.core.ContingencyTables",
430:       "weka.core.Queue$QueueNode",
431:       "weka.classifiers.IteratedSingleClassifierEnhancer",
432:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
433:       "weka.classifiers.meta.LogitBoost",
434:       "weka.classifiers.lazy.IBk",
435:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
437:       "weka.classifiers.meta.RandomCommittee",
438:       "weka.classifiers.functions.SGD",
439:       "weka.filters.AllFilter",
440:       "weka.classifiers.functions.supportVector.RBFKernel",
441:       "weka.core.SerializationHelper",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader",
446:       "weka.classifiers.rules.PART",
447:       "weka.classifiers.functions.Logistic",
448:       "weka.classifiers.meta.Bagging",
449:       "weka.classifiers.meta.MultiClassClassifier",
450:       "weka.estimators.KernelEstimator",
451:       "weka.classifiers.meta.RandomSubSpace",
452:       "weka.classifiers.meta.AdaBoostM1"
453:     );
454:   }
455: }

[MASTER] 23:40:16.100 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
FileSystemHandling.createFolder(evoSuiteFile0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.setDebug(false);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_lnorm = 0.0;
double[] doubleArray0 = new double[4];
doubleArray0[0] = (double) 377;
doubleArray0[1] = (double) 377;
doubleArray0[3] = (double) 377;
naiveBayesMultinomialText1.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText1.useWordFrequenciesTipText();
LinkedHashMap<MinkowskiDistance, SnowballStemmer> linkedHashMap1 = new LinkedHashMap<MinkowskiDistance, SnowballStemmer>(1, 377, false);
naiveBayesMultinomialText0.getPeriodicPruning();
String string0 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string0);


[MASTER] 23:40:16.350 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1574034016329/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1574034016329/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 23:40:16.350 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.350 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.350 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:40:16.350 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:40:16.351 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1574034016329/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Nov 17 23:40:16 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.DenseInstance;
19: import weka.core.stemmers.Stemmer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.741823698115634
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       Stemmer stemmer0 = naiveBayesMultinomialText0.getStemmer();
32:       naiveBayesMultinomialText0.setStemmer(stemmer0);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
35:       FileSystemHandling.appendStringToFile(evoSuiteFile0, "-output-probs");
36:       String[] stringArray0 = new String[9];
37:       stringArray0[0] = "e=@NY+51%g";
38:       stringArray0[1] = "@]9^f";
39:       stringArray0[2] = "@]9^f";
40:       stringArray0[3] = "-normalize";
41:       stringArray0[4] = "@]9^f";
42:       stringArray0[5] = "-output-probs";
43:       stringArray0[6] = "@]9^f";
44:       stringArray0[7] = "-output-probs";
45:       stringArray0[8] = "-output-probs";
46:       naiveBayesMultinomialText0.setOptions(stringArray0);
47:       double[] doubleArray0 = new double[6];
48:       doubleArray0[0] = 0.0;
49:       doubleArray0[1] = (double) 10000;
50:       doubleArray0[2] = (double) 10000;
51:       doubleArray0[3] = 1043.254;
52:       doubleArray0[4] = 0.0;
53:       doubleArray0[5] = 0.0;
54:       DenseInstance denseInstance0 = new DenseInstance(0.0, doubleArray0);
55:       try { 
56:         naiveBayesMultinomialText0.updateClassifier(denseInstance0);
57:         fail("Expecting exception: RuntimeException");
58:       
59:       } catch(RuntimeException e) {
60:          //
61:          // DenseInstance doesn't have access to a dataset!
62:          //
63:          verifyException("weka.core.AbstractInstance", e);
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_39_1574034016329/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Nov 17 23:40:16 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.attributeSelection.ReliefFAttributeEval",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.core.MinkowskiDistance",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.ChebyshevDistance",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
132:       "weka.core.BinarySparseInstance",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
134:       "weka.core.AttributeLocator",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.core.OptionHandlerJavadoc",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.SingleIndex",
148:       "weka.core.CapabilitiesHandler",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
150:       "weka.attributeSelection.ASEvaluation",
151:       "weka.core.AbstractInstance",
152:       "weka.core.scripting.JythonObject",
153:       "weka.core.SelectedTag",
154:       "org.pentaho.packageManagement.DefaultPackage",
155:       "weka.core.neighboursearch.balltrees.BallSplitter",
156:       "weka.classifiers.bayes.BayesNet",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
159:       "weka.core.Version",
160:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
161:       "weka.core.Tag",
162:       "weka.classifiers.trees.j48.BinC45ModelSelection",
163:       "weka.core.neighboursearch.CoverTree",
164:       "weka.classifiers.AbstractClassifier",
165:       "weka.estimators.UnivariateDensityEstimator",
166:       "weka.filters.unsupervised.attribute.Center",
167:       "weka.core.FindWithCapabilities",
168:       "weka.core.OptionHandler",
169:       "weka.core.WekaException",
170:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
171:       "weka.filters.StreamableFilter",
172:       "weka.core.Range",
173:       "weka.core.PartitionGenerator",
174:       "weka.core.scripting.JythonSerializableObject",
175:       "weka.classifiers.Classifier",
176:       "weka.attributeSelection.InfoGainAttributeEval",
177:       "weka.core.Capabilities$Capability",
178:       "weka.core.SparseInstance",
179:       "org.pentaho.packageManagement.PackageManager",
180:       "weka.classifiers.trees.j48.ClassifierSplitModel",
181:       "weka.attributeSelection.AttributeTransformer",
182:       "weka.core.tokenizers.WordTokenizer",
183:       "weka.classifiers.misc.SerializedClassifier",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.attributeSelection.PrincipalComponents",
187:       "weka.core.stemmers.SnowballStemmer",
188:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
189:       "weka.classifiers.trees.j48.PruneableClassifierTree",
190:       "weka.core.stemmers.LovinsStemmer",
191:       "weka.classifiers.Evaluation",
192:       "weka.classifiers.functions.supportVector.Kernel",
193:       "weka.core.WekaPackageManager",
194:       "weka.filters.SupervisedFilter",
195:       "weka.core.TechnicalInformationHandler",
196:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.core.neighboursearch.PerformanceStats",
200:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
201:       "weka.filters.unsupervised.attribute.NumericToBinary",
202:       "weka.estimators.KernelEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Instance",
216:       "weka.classifiers.rules.part.MakeDecList",
217:       "weka.core.ProtectedProperties",
218:       "weka.estimators.Estimator",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.classifiers.bayes.net.ADNode",
222:       "weka.core.Matchable",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.GlobalInfoJavadoc",
227:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
228:       "weka.core.TechnicalInformation$Field",
229:       "weka.filters.unsupervised.attribute.Remove",
230:       "weka.filters.unsupervised.attribute.Discretize",
231:       "weka.core.Randomizable",
232:       "weka.core.Javadoc",
233:       "weka.classifiers.trees.j48.NoSplit",
234:       "weka.core.EuclideanDistance",
235:       "weka.core.Instances",
236:       "weka.core.UnassignedClassException",
237:       "weka.classifiers.bayes.net.BIFReader",
238:       "weka.classifiers.bayes.net.ParentSet",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.UnsupportedAttributeTypeException",
244:       "weka.core.TechnicalInformation",
245:       "weka.classifiers.Sourcable",
246:       "weka.core.RevisionHandler",
247:       "weka.classifiers.evaluation.output.prediction.PlainText",
248:       "weka.core.neighboursearch.TreePerformanceStats",
249:       "weka.core.xml.XMLSerialization",
250:       "weka.classifiers.xml.XMLClassifier",
251:       "weka.filters.Filter",
252:       "weka.filters.supervised.attribute.Discretize"
253:     );
254:   } 
255: 
256:   private static void resetClasses() {
257:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
258: 
259:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
260:       "weka.classifiers.AbstractClassifier",
261:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
262:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
263:       "weka.core.Capabilities$Capability",
264:       "weka.core.tokenizers.Tokenizer",
265:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
266:       "weka.core.tokenizers.WordTokenizer",
267:       "weka.core.stemmers.NullStemmer",
268:       "weka.classifiers.Evaluation",
269:       "weka.core.Utils",
270:       "weka.core.Option",
271:       "weka.core.Capabilities",
272:       "org.pentaho.packageManagement.PackageManager",
273:       "org.pentaho.packageManagement.DefaultPackageManager",
274:       "weka.core.Version",
275:       "weka.core.Environment",
276:       "weka.core.WekaPackageManager",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.AbstractInstance",
282:       "weka.core.DenseInstance",
283:       "weka.core.neighboursearch.balltrees.BallNode",
284:       "weka.classifiers.RandomizableClassifier",
285:       "weka.core.Tag",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.SerializedObject",
288:       "weka.core.SparseInstance",
289:       "weka.core.BinarySparseInstance",
290:       "weka.core.UnassignedDatasetException",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.KDTree",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.Range",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.filters.Filter",
299:       "weka.filters.supervised.attribute.Discretize",
300:       "weka.core.neighboursearch.CoverTree",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.converters.ArffLoader$ArffReader",
309:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
310:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
311:       "weka.core.tokenizers.AlphabeticTokenizer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.misc.InputMappedClassifier",
314:       "weka.classifiers.rules.ZeroR",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.classifiers.bayes.BayesNet",
317:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
318:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
319:       "weka.classifiers.bayes.net.search.local.K2",
320:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
321:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
327:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
328:       "weka.core.neighboursearch.balltrees.BallSplitter",
329:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
330:       "weka.classifiers.functions.SimpleLinearRegression",
331:       "weka.classifiers.rules.OneR",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.core.stemmers.Stemming",
337:       "weka.classifiers.bayes.NaiveBayes",
338:       "weka.core.Stopwords",
339:       "weka.core.tokenizers.NGramTokenizer",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
346:       "weka.core.stemmers.IteratedLovinsStemmer",
347:       "weka.classifiers.meta.FilteredClassifier",
348:       "weka.filters.supervised.attribute.AttributeSelection",
349:       "weka.attributeSelection.AttributeSelection",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.attributeSelection.ASSearch",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.BestFirst",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
361:       "weka.classifiers.trees.RandomForest",
362:       "weka.classifiers.meta.ClassificationViaRegression",
363:       "weka.classifiers.trees.m5.M5Base",
364:       "weka.classifiers.trees.M5P",
365:       "weka.classifiers.functions.supportVector.Puk",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
369:       "weka.classifiers.meta.Vote",
370:       "weka.core.SelectedTag",
371:       "weka.core.Javadoc",
372:       "weka.core.TechnicalInformationHandlerJavadoc",
373:       "weka.classifiers.meta.RegressionByDiscretization",
374:       "weka.filters.unsupervised.attribute.Discretize",
375:       "weka.classifiers.trees.j48.ClassifierTree",
376:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
377:       "weka.core.WekaException",
378:       "weka.core.UnsupportedAttributeTypeException",
379:       "weka.core.TechnicalInformation",
380:       "weka.core.TechnicalInformation$Type",
381:       "weka.core.TechnicalInformation$Field",
382:       "weka.core.ClassDiscovery",
383:       "weka.core.ClassCache",
384:       "weka.core.AllJavadoc",
385:       "weka.core.Check",
386:       "weka.core.CheckOptionHandler",
387:       "weka.core.CheckGOE",
388:       "weka.core.MinkowskiDistance",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.classifiers.bayes.net.BIFReader",
392:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.estimators.Estimator",
395:       "weka.estimators.NormalEstimator",
396:       "weka.core.ListOptions",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
399:       "weka.core.ManhattanDistance",
400:       "weka.attributeSelection.WrapperSubsetEval",
401:       "weka.classifiers.trees.RandomTree",
402:       "weka.core.neighboursearch.LinearNNSearch",
403:       "weka.attributeSelection.OneRAttributeEval",
404:       "weka.classifiers.functions.SimpleLogistic",
405:       "weka.classifiers.functions.supportVector.StringKernel",
406:       "weka.classifiers.functions.VotedPerceptron",
407:       "weka.classifiers.trees.DecisionStump",
408:       "weka.core.matrix.Matrix",
409:       "weka.attributeSelection.ReliefFAttributeEval",
410:       "weka.classifiers.bayes.NaiveBayesMultinomial",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.rules.JRip",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.classifiers.trees.REPTree",
416:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
417:       "weka.core.UnassignedClassException",
418:       "weka.core.WekaEnumeration",
419:       "weka.core.Attribute$1",
420:       "weka.classifiers.rules.DecisionTable",
421:       "weka.classifiers.functions.SMO",
422:       "weka.classifiers.lazy.LWL",
423:       "weka.estimators.PoissonEstimator",
424:       "weka.classifiers.bayes.NaiveBayesUpdateable",
425:       "weka.core.Queue",
426:       "weka.core.AttributeLocator",
427:       "weka.core.StringLocator",
428:       "weka.core.RelationalLocator",
429:       "weka.core.ContingencyTables",
430:       "weka.core.Queue$QueueNode",
431:       "weka.classifiers.IteratedSingleClassifierEnhancer",
432:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
433:       "weka.classifiers.meta.LogitBoost",
434:       "weka.classifiers.lazy.IBk",
435:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
437:       "weka.classifiers.meta.RandomCommittee",
438:       "weka.classifiers.functions.SGD",
439:       "weka.filters.AllFilter",
440:       "weka.classifiers.functions.supportVector.RBFKernel",
441:       "weka.core.SerializationHelper",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader",
446:       "weka.classifiers.rules.PART",
447:       "weka.classifiers.functions.Logistic",
448:       "weka.classifiers.meta.Bagging",
449:       "weka.classifiers.meta.MultiClassClassifier",
450:       "weka.estimators.KernelEstimator",
451:       "weka.classifiers.meta.RandomSubSpace",
452:       "weka.classifiers.meta.AdaBoostM1"
453:     );
454:   }
455: }

[MASTER] 23:40:16.351 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Stemmer stemmer0 = naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.appendStringToFile(evoSuiteFile0, "-output-probs");
String[] stringArray0 = new String[9];
stringArray0[0] = "e=@NY+51%g";
stringArray0[1] = "@]9^f";
stringArray0[2] = "@]9^f";
stringArray0[3] = "-normalize";
stringArray0[4] = "@]9^f";
stringArray0[5] = "-output-probs";
stringArray0[6] = "@]9^f";
stringArray0[7] = "-output-probs";
stringArray0[8] = "-output-probs";
naiveBayesMultinomialText0.setOptions(stringArray0);
double[] doubleArray0 = new double[6];
doubleArray0[0] = 0.0;
doubleArray0[1] = (double) 10000;
doubleArray0[2] = (double) 10000;
doubleArray0[3] = 1043.254;
doubleArray0[4] = 0.0;
doubleArray0[5] = 0.0;
DenseInstance denseInstance0 = new DenseInstance(0.0, doubleArray0);
naiveBayesMultinomialText0.updateClassifier(denseInstance0);

[MASTER] 23:40:16.512 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_46_1574034016493/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_46_1574034016493/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.java]]
[MASTER] 23:40:16.512 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.512 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.512 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:40:16.512 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:40:16.513 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_46_1574034016493/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Nov 17 23:40:16 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.EvoSuiteFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.MinkowskiDistance;
18: import weka.core.stemmers.SnowballStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_46_tmp__ESTest extends NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.419594359581629
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
30:       FileSystemHandling.createFolder(evoSuiteFile0);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.setPeriodicPruning(377);
34:       naiveBayesMultinomialText0.lowercaseTokensTipText();
35:       naiveBayesMultinomialText0.lowercaseTokensTipText();
36:       naiveBayesMultinomialText0.useStopListTipText();
37:       naiveBayesMultinomialText0.setDebug(false);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText0.m_lnorm = 0.0;
40:       double[] doubleArray0 = new double[4];
41:       doubleArray0[0] = (double) 377;
42:       doubleArray0[1] = (double) 377;
43:       doubleArray0[3] = (double) 377;
44:       naiveBayesMultinomialText1.m_wordsPerClass = doubleArray0;
45:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
46:       LinkedHashMap<MinkowskiDistance, SnowballStemmer> linkedHashMap1 = new LinkedHashMap<MinkowskiDistance, SnowballStemmer>(1, 377, false);
47:       naiveBayesMultinomialText0.getPeriodicPruning();
48:       naiveBayesMultinomialText0.minWordFrequencyTipText();
49:       assertEquals(377, naiveBayesMultinomialText0.getPeriodicPruning());
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_46_1574034016493/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Nov 17 23:40:16 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.attributeSelection.ReliefFAttributeEval",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.core.MinkowskiDistance",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.ChebyshevDistance",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
132:       "weka.core.BinarySparseInstance",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
134:       "weka.core.AttributeLocator",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.core.OptionHandlerJavadoc",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.SingleIndex",
148:       "weka.core.CapabilitiesHandler",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
150:       "weka.attributeSelection.ASEvaluation",
151:       "weka.core.AbstractInstance",
152:       "weka.core.scripting.JythonObject",
153:       "weka.core.SelectedTag",
154:       "org.pentaho.packageManagement.DefaultPackage",
155:       "weka.core.neighboursearch.balltrees.BallSplitter",
156:       "weka.classifiers.bayes.BayesNet",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
159:       "weka.core.Version",
160:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
161:       "weka.core.Tag",
162:       "weka.classifiers.trees.j48.BinC45ModelSelection",
163:       "weka.core.neighboursearch.CoverTree",
164:       "weka.classifiers.AbstractClassifier",
165:       "weka.estimators.UnivariateDensityEstimator",
166:       "weka.filters.unsupervised.attribute.Center",
167:       "weka.core.FindWithCapabilities",
168:       "weka.core.OptionHandler",
169:       "weka.core.WekaException",
170:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
171:       "weka.filters.StreamableFilter",
172:       "weka.core.Range",
173:       "weka.core.PartitionGenerator",
174:       "weka.core.scripting.JythonSerializableObject",
175:       "weka.classifiers.Classifier",
176:       "weka.attributeSelection.InfoGainAttributeEval",
177:       "weka.core.Capabilities$Capability",
178:       "weka.core.SparseInstance",
179:       "org.pentaho.packageManagement.PackageManager",
180:       "weka.classifiers.trees.j48.ClassifierSplitModel",
181:       "weka.attributeSelection.AttributeTransformer",
182:       "weka.core.tokenizers.WordTokenizer",
183:       "weka.classifiers.misc.SerializedClassifier",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.attributeSelection.PrincipalComponents",
187:       "weka.core.stemmers.SnowballStemmer",
188:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
189:       "weka.classifiers.trees.j48.PruneableClassifierTree",
190:       "weka.core.stemmers.LovinsStemmer",
191:       "weka.classifiers.Evaluation",
192:       "weka.classifiers.functions.supportVector.Kernel",
193:       "weka.core.WekaPackageManager",
194:       "weka.filters.SupervisedFilter",
195:       "weka.core.TechnicalInformationHandler",
196:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.core.neighboursearch.PerformanceStats",
200:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
201:       "weka.filters.unsupervised.attribute.NumericToBinary",
202:       "weka.estimators.KernelEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Instance",
216:       "weka.classifiers.rules.part.MakeDecList",
217:       "weka.core.ProtectedProperties",
218:       "weka.estimators.Estimator",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.classifiers.bayes.net.ADNode",
222:       "weka.core.Matchable",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.GlobalInfoJavadoc",
227:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
228:       "weka.core.TechnicalInformation$Field",
229:       "weka.filters.unsupervised.attribute.Remove",
230:       "weka.filters.unsupervised.attribute.Discretize",
231:       "weka.core.Randomizable",
232:       "weka.core.Javadoc",
233:       "weka.classifiers.trees.j48.NoSplit",
234:       "weka.core.EuclideanDistance",
235:       "weka.core.Instances",
236:       "weka.core.UnassignedClassException",
237:       "weka.classifiers.bayes.net.BIFReader",
238:       "weka.classifiers.bayes.net.ParentSet",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.UnsupportedAttributeTypeException",
244:       "weka.core.TechnicalInformation",
245:       "weka.classifiers.Sourcable",
246:       "weka.core.RevisionHandler",
247:       "weka.classifiers.evaluation.output.prediction.PlainText",
248:       "weka.core.neighboursearch.TreePerformanceStats",
249:       "weka.core.xml.XMLSerialization",
250:       "weka.classifiers.xml.XMLClassifier",
251:       "weka.filters.Filter",
252:       "weka.filters.supervised.attribute.Discretize"
253:     );
254:   } 
255: 
256:   private static void resetClasses() {
257:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader()); 
258: 
259:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
260:       "weka.classifiers.AbstractClassifier",
261:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
262:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
263:       "weka.core.Capabilities$Capability",
264:       "weka.core.tokenizers.Tokenizer",
265:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
266:       "weka.core.tokenizers.WordTokenizer",
267:       "weka.core.stemmers.NullStemmer",
268:       "weka.classifiers.Evaluation",
269:       "weka.core.Utils",
270:       "weka.core.Option",
271:       "weka.core.Capabilities",
272:       "org.pentaho.packageManagement.PackageManager",
273:       "org.pentaho.packageManagement.DefaultPackageManager",
274:       "weka.core.Version",
275:       "weka.core.Environment",
276:       "weka.core.WekaPackageManager",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.AbstractInstance",
282:       "weka.core.DenseInstance",
283:       "weka.core.neighboursearch.balltrees.BallNode",
284:       "weka.classifiers.RandomizableClassifier",
285:       "weka.core.Tag",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.SerializedObject",
288:       "weka.core.SparseInstance",
289:       "weka.core.BinarySparseInstance",
290:       "weka.core.UnassignedDatasetException",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.KDTree",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.Range",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.filters.Filter",
299:       "weka.filters.supervised.attribute.Discretize",
300:       "weka.core.neighboursearch.CoverTree",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.converters.ArffLoader$ArffReader",
309:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
310:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
311:       "weka.core.tokenizers.AlphabeticTokenizer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.misc.InputMappedClassifier",
314:       "weka.classifiers.rules.ZeroR",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.classifiers.bayes.BayesNet",
317:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
318:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
319:       "weka.classifiers.bayes.net.search.local.K2",
320:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
321:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
327:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
328:       "weka.core.neighboursearch.balltrees.BallSplitter",
329:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
330:       "weka.classifiers.functions.SimpleLinearRegression",
331:       "weka.classifiers.rules.OneR",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.core.stemmers.Stemming",
337:       "weka.classifiers.bayes.NaiveBayes",
338:       "weka.core.Stopwords",
339:       "weka.core.tokenizers.NGramTokenizer",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
346:       "weka.core.stemmers.IteratedLovinsStemmer",
347:       "weka.classifiers.meta.FilteredClassifier",
348:       "weka.filters.supervised.attribute.AttributeSelection",
349:       "weka.attributeSelection.AttributeSelection",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.attributeSelection.ASSearch",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.BestFirst",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
361:       "weka.classifiers.trees.RandomForest",
362:       "weka.classifiers.meta.ClassificationViaRegression",
363:       "weka.classifiers.trees.m5.M5Base",
364:       "weka.classifiers.trees.M5P",
365:       "weka.classifiers.functions.supportVector.Puk",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
369:       "weka.classifiers.meta.Vote",
370:       "weka.core.SelectedTag",
371:       "weka.core.Javadoc",
372:       "weka.core.TechnicalInformationHandlerJavadoc",
373:       "weka.classifiers.meta.RegressionByDiscretization",
374:       "weka.filters.unsupervised.attribute.Discretize",
375:       "weka.classifiers.trees.j48.ClassifierTree",
376:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
377:       "weka.core.WekaException",
378:       "weka.core.UnsupportedAttributeTypeException",
379:       "weka.core.TechnicalInformation",
380:       "weka.core.TechnicalInformation$Type",
381:       "weka.core.TechnicalInformation$Field",
382:       "weka.core.ClassDiscovery",
383:       "weka.core.ClassCache",
384:       "weka.core.AllJavadoc",
385:       "weka.core.Check",
386:       "weka.core.CheckOptionHandler",
387:       "weka.core.CheckGOE",
388:       "weka.core.MinkowskiDistance",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.classifiers.bayes.net.BIFReader",
392:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.estimators.Estimator",
395:       "weka.estimators.NormalEstimator",
396:       "weka.core.ListOptions",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
399:       "weka.core.ManhattanDistance",
400:       "weka.attributeSelection.WrapperSubsetEval",
401:       "weka.classifiers.trees.RandomTree",
402:       "weka.core.neighboursearch.LinearNNSearch",
403:       "weka.attributeSelection.OneRAttributeEval",
404:       "weka.classifiers.functions.SimpleLogistic",
405:       "weka.classifiers.functions.supportVector.StringKernel",
406:       "weka.classifiers.functions.VotedPerceptron",
407:       "weka.classifiers.trees.DecisionStump",
408:       "weka.core.matrix.Matrix",
409:       "weka.attributeSelection.ReliefFAttributeEval",
410:       "weka.classifiers.bayes.NaiveBayesMultinomial",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.rules.JRip",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.classifiers.trees.REPTree",
416:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
417:       "weka.core.UnassignedClassException",
418:       "weka.core.WekaEnumeration",
419:       "weka.core.Attribute$1",
420:       "weka.classifiers.rules.DecisionTable",
421:       "weka.classifiers.functions.SMO",
422:       "weka.classifiers.lazy.LWL",
423:       "weka.estimators.PoissonEstimator",
424:       "weka.classifiers.bayes.NaiveBayesUpdateable",
425:       "weka.core.Queue",
426:       "weka.core.AttributeLocator",
427:       "weka.core.StringLocator",
428:       "weka.core.RelationalLocator",
429:       "weka.core.ContingencyTables",
430:       "weka.core.Queue$QueueNode",
431:       "weka.classifiers.IteratedSingleClassifierEnhancer",
432:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
433:       "weka.classifiers.meta.LogitBoost",
434:       "weka.classifiers.lazy.IBk",
435:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
437:       "weka.classifiers.meta.RandomCommittee",
438:       "weka.classifiers.functions.SGD",
439:       "weka.filters.AllFilter",
440:       "weka.classifiers.functions.supportVector.RBFKernel",
441:       "weka.core.SerializationHelper",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader",
446:       "weka.classifiers.rules.PART",
447:       "weka.classifiers.functions.Logistic",
448:       "weka.classifiers.meta.Bagging",
449:       "weka.classifiers.meta.MultiClassClassifier",
450:       "weka.estimators.KernelEstimator",
451:       "weka.classifiers.meta.RandomSubSpace",
452:       "weka.classifiers.meta.AdaBoostM1"
453:     );
454:   }
455: }

[MASTER] 23:40:16.513 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
FileSystemHandling.createFolder(evoSuiteFile0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setPeriodicPruning(377);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.setDebug(false);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_lnorm = 0.0;
double[] doubleArray0 = new double[4];
doubleArray0[0] = (double) 377;
doubleArray0[1] = (double) 377;
doubleArray0[3] = (double) 377;
naiveBayesMultinomialText1.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText1.useWordFrequenciesTipText();
LinkedHashMap<MinkowskiDistance, SnowballStemmer> linkedHashMap1 = new LinkedHashMap<MinkowskiDistance, SnowballStemmer>(1, 377, false);
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals(377, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 23:40:16.582 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1574034016563/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1574034016563/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.java]]
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 23:40:16.583 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1574034016563/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Nov 17 23:40:16 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.stemmers.Stemmer;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_49_tmp__ESTest extends NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.301608716407634
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
33:       FileSystemHandling.createFolder((EvoSuiteFile) null);
34:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
36:       Integer integer0 = new Integer(3);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
38:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
39:       naiveBayesMultinomialText0.listOptions();
40:       naiveBayesMultinomialText0.setStemmer((Stemmer) null);
41:       naiveBayesMultinomialText0.m_periodicP = (-566);
42:       naiveBayesMultinomialText0.listOptions();
43:       String string0 = naiveBayesMultinomialText0.lowercaseTokensTipText();
44:       assertEquals("Whether to convert all tokens to lowercase", string0);
45:       
46:       naiveBayesMultinomialText0.pruneDictionary();
47:       naiveBayesMultinomialText0.setStopwords((File) null);
48:       String string1 = naiveBayesMultinomialText0.stopwordsTipText();
49:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
50:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
51:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
52:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
53:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string1);
54:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
55:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
56:   }
57: }
RegularFileObject[/tmp/EvoSuite_49_1574034016563/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Nov 17 23:40:16 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.attributeSelection.ReliefFAttributeEval",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.core.MinkowskiDistance",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.ChebyshevDistance",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
132:       "weka.core.BinarySparseInstance",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
134:       "weka.core.AttributeLocator",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.core.OptionHandlerJavadoc",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.SingleIndex",
148:       "weka.core.CapabilitiesHandler",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
150:       "weka.attributeSelection.ASEvaluation",
151:       "weka.core.AbstractInstance",
152:       "weka.core.scripting.JythonObject",
153:       "weka.core.SelectedTag",
154:       "org.pentaho.packageManagement.DefaultPackage",
155:       "weka.core.neighboursearch.balltrees.BallSplitter",
156:       "weka.classifiers.bayes.BayesNet",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
159:       "weka.core.Version",
160:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
161:       "weka.core.Tag",
162:       "weka.classifiers.trees.j48.BinC45ModelSelection",
163:       "weka.core.neighboursearch.CoverTree",
164:       "weka.classifiers.AbstractClassifier",
165:       "weka.estimators.UnivariateDensityEstimator",
166:       "weka.filters.unsupervised.attribute.Center",
167:       "weka.core.FindWithCapabilities",
168:       "weka.core.OptionHandler",
169:       "weka.core.WekaException",
170:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
171:       "weka.filters.StreamableFilter",
172:       "weka.core.Range",
173:       "weka.core.PartitionGenerator",
174:       "weka.core.scripting.JythonSerializableObject",
175:       "weka.classifiers.Classifier",
176:       "weka.attributeSelection.InfoGainAttributeEval",
177:       "weka.core.Capabilities$Capability",
178:       "weka.core.SparseInstance",
179:       "org.pentaho.packageManagement.PackageManager",
180:       "weka.classifiers.trees.j48.ClassifierSplitModel",
181:       "weka.attributeSelection.AttributeTransformer",
182:       "weka.core.tokenizers.WordTokenizer",
183:       "weka.classifiers.misc.SerializedClassifier",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.attributeSelection.PrincipalComponents",
187:       "weka.core.stemmers.SnowballStemmer",
188:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
189:       "weka.classifiers.trees.j48.PruneableClassifierTree",
190:       "weka.core.stemmers.LovinsStemmer",
191:       "weka.classifiers.Evaluation",
192:       "weka.classifiers.functions.supportVector.Kernel",
193:       "weka.core.WekaPackageManager",
194:       "weka.filters.SupervisedFilter",
195:       "weka.core.TechnicalInformationHandler",
196:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.core.neighboursearch.PerformanceStats",
200:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
201:       "weka.filters.unsupervised.attribute.NumericToBinary",
202:       "weka.estimators.KernelEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Instance",
216:       "weka.classifiers.rules.part.MakeDecList",
217:       "weka.core.ProtectedProperties",
218:       "weka.estimators.Estimator",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.classifiers.bayes.net.ADNode",
222:       "weka.core.Matchable",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.GlobalInfoJavadoc",
227:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
228:       "weka.core.TechnicalInformation$Field",
229:       "weka.filters.unsupervised.attribute.Remove",
230:       "weka.filters.unsupervised.attribute.Discretize",
231:       "weka.core.Randomizable",
232:       "weka.core.Javadoc",
233:       "weka.classifiers.trees.j48.NoSplit",
234:       "weka.core.EuclideanDistance",
235:       "weka.core.Instances",
236:       "weka.core.UnassignedClassException",
237:       "weka.classifiers.bayes.net.BIFReader",
238:       "weka.classifiers.bayes.net.ParentSet",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.UnsupportedAttributeTypeException",
244:       "weka.core.TechnicalInformation",
245:       "weka.classifiers.Sourcable",
246:       "weka.core.RevisionHandler",
247:       "weka.classifiers.evaluation.output.prediction.PlainText",
248:       "weka.core.neighboursearch.TreePerformanceStats",
249:       "weka.core.xml.XMLSerialization",
250:       "weka.classifiers.xml.XMLClassifier",
251:       "weka.filters.Filter",
252:       "weka.filters.supervised.attribute.Discretize"
253:     );
254:   } 
255: 
256:   private static void resetClasses() {
257:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
258: 
259:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
260:       "weka.classifiers.AbstractClassifier",
261:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
262:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
263:       "weka.core.Capabilities$Capability",
264:       "weka.core.tokenizers.Tokenizer",
265:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
266:       "weka.core.tokenizers.WordTokenizer",
267:       "weka.core.stemmers.NullStemmer",
268:       "weka.classifiers.Evaluation",
269:       "weka.core.Utils",
270:       "weka.core.Option",
271:       "weka.core.Capabilities",
272:       "org.pentaho.packageManagement.PackageManager",
273:       "org.pentaho.packageManagement.DefaultPackageManager",
274:       "weka.core.Version",
275:       "weka.core.Environment",
276:       "weka.core.WekaPackageManager",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.AbstractInstance",
282:       "weka.core.DenseInstance",
283:       "weka.core.neighboursearch.balltrees.BallNode",
284:       "weka.classifiers.RandomizableClassifier",
285:       "weka.core.Tag",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.SerializedObject",
288:       "weka.core.SparseInstance",
289:       "weka.core.BinarySparseInstance",
290:       "weka.core.UnassignedDatasetException",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.KDTree",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.Range",
296:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
297:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
298:       "weka.filters.Filter",
299:       "weka.filters.supervised.attribute.Discretize",
300:       "weka.core.neighboursearch.CoverTree",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.converters.ArffLoader$ArffReader",
309:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
310:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
311:       "weka.core.tokenizers.AlphabeticTokenizer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.misc.InputMappedClassifier",
314:       "weka.classifiers.rules.ZeroR",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.classifiers.bayes.BayesNet",
317:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
318:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
319:       "weka.classifiers.bayes.net.search.local.K2",
320:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
321:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
327:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
328:       "weka.core.neighboursearch.balltrees.BallSplitter",
329:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
330:       "weka.classifiers.functions.SimpleLinearRegression",
331:       "weka.classifiers.rules.OneR",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
334:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.core.stemmers.Stemming",
337:       "weka.classifiers.bayes.NaiveBayes",
338:       "weka.core.Stopwords",
339:       "weka.core.tokenizers.NGramTokenizer",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
346:       "weka.core.stemmers.IteratedLovinsStemmer",
347:       "weka.classifiers.meta.FilteredClassifier",
348:       "weka.filters.supervised.attribute.AttributeSelection",
349:       "weka.attributeSelection.AttributeSelection",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.attributeSelection.ASSearch",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.BestFirst",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
361:       "weka.classifiers.trees.RandomForest",
362:       "weka.classifiers.meta.ClassificationViaRegression",
363:       "weka.classifiers.trees.m5.M5Base",
364:       "weka.classifiers.trees.M5P",
365:       "weka.classifiers.functions.supportVector.Puk",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
369:       "weka.classifiers.meta.Vote",
370:       "weka.core.SelectedTag",
371:       "weka.core.Javadoc",
372:       "weka.core.TechnicalInformationHandlerJavadoc",
373:       "weka.classifiers.meta.RegressionByDiscretization",
374:       "weka.filters.unsupervised.attribute.Discretize",
375:       "weka.classifiers.trees.j48.ClassifierTree",
376:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
377:       "weka.core.WekaException",
378:       "weka.core.UnsupportedAttributeTypeException",
379:       "weka.core.TechnicalInformation",
380:       "weka.core.TechnicalInformation$Type",
381:       "weka.core.TechnicalInformation$Field",
382:       "weka.core.ClassDiscovery",
383:       "weka.core.ClassCache",
384:       "weka.core.AllJavadoc",
385:       "weka.core.Check",
386:       "weka.core.CheckOptionHandler",
387:       "weka.core.CheckGOE",
388:       "weka.core.MinkowskiDistance",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.classifiers.bayes.net.BIFReader",
392:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.estimators.Estimator",
395:       "weka.estimators.NormalEstimator",
396:       "weka.core.ListOptions",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
399:       "weka.core.ManhattanDistance",
400:       "weka.attributeSelection.WrapperSubsetEval",
401:       "weka.classifiers.trees.RandomTree",
402:       "weka.core.neighboursearch.LinearNNSearch",
403:       "weka.attributeSelection.OneRAttributeEval",
404:       "weka.classifiers.functions.SimpleLogistic",
405:       "weka.classifiers.functions.supportVector.StringKernel",
406:       "weka.classifiers.functions.VotedPerceptron",
407:       "weka.classifiers.trees.DecisionStump",
408:       "weka.core.matrix.Matrix",
409:       "weka.attributeSelection.ReliefFAttributeEval",
410:       "weka.classifiers.bayes.NaiveBayesMultinomial",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.rules.JRip",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.classifiers.trees.REPTree",
416:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
417:       "weka.core.UnassignedClassException",
418:       "weka.core.WekaEnumeration",
419:       "weka.core.Attribute$1",
420:       "weka.classifiers.rules.DecisionTable",
421:       "weka.classifiers.functions.SMO",
422:       "weka.classifiers.lazy.LWL",
423:       "weka.estimators.PoissonEstimator",
424:       "weka.classifiers.bayes.NaiveBayesUpdateable",
425:       "weka.core.Queue",
426:       "weka.core.AttributeLocator",
427:       "weka.core.StringLocator",
428:       "weka.core.RelationalLocator",
429:       "weka.core.ContingencyTables",
430:       "weka.core.Queue$QueueNode",
431:       "weka.classifiers.IteratedSingleClassifierEnhancer",
432:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
433:       "weka.classifiers.meta.LogitBoost",
434:       "weka.classifiers.lazy.IBk",
435:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
437:       "weka.classifiers.meta.RandomCommittee",
438:       "weka.classifiers.functions.SGD",
439:       "weka.filters.AllFilter",
440:       "weka.classifiers.functions.supportVector.RBFKernel",
441:       "weka.core.SerializationHelper",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader",
446:       "weka.classifiers.rules.PART",
447:       "weka.classifiers.functions.Logistic",
448:       "weka.classifiers.meta.Bagging",
449:       "weka.classifiers.meta.MultiClassClassifier",
450:       "weka.estimators.KernelEstimator",
451:       "weka.classifiers.meta.RandomSubSpace",
452:       "weka.classifiers.meta.AdaBoostM1"
453:     );
454:   }
455: }

[MASTER] 23:40:16.584 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
FileSystemHandling.createFolder((EvoSuiteFile) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
Integer integer0 = new Integer(3);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.setStemmer((Stemmer) null);
naiveBayesMultinomialText0.m_periodicP = (-566);
naiveBayesMultinomialText0.listOptions();
String string0 = naiveBayesMultinomialText0.lowercaseTokensTipText();
assertEquals("Whether to convert all tokens to lowercase", string0);

naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setStopwords((File) null);
String string1 = naiveBayesMultinomialText0.stopwordsTipText();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string1);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 23:40:18.631 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:40:18.788 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 23:40:18.869 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 23:40:19.775 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2864
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:41:04.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:41:04.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:41:04.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:41:04.398 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 23:41:06.669 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 23:42:49.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:42:49.264 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:44:14.490 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 280s and 128 generations, 124185 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 450
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2864
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:58:58.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:58:58.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:58:58.562 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:58:59.039 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:58:59.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:58:59.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:59:00.941 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:59:00.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:59:00.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:59:00.966 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:59:00.966 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:59:00.966 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:59:00.966 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:59:00.967 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:59:00.967 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:59:01.003 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:59:01.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 23:59:04.500 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 23:59:11.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 23:59:11.851 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 23:59:11.854 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
[MASTER] 23:59:41.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.incorrect()D
[MASTER] 23:59:41.956 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.incorrect()D
[MASTER] 23:59:44.300 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:10:54.880 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 845s and 81 generations, 63997 statements, best individual has fitness: 14256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 1378
* Number of covered goals: 851
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 371
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 75
* Number of covered goals: 75
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 424
* Number of covered goals: 280
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 278
* Number of covered goals: 68
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 356
* Generated 145 tests with total length 3391
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
[MASTER] 00:21:15.136 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 00:21:21.638 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:21:21.890 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:21:21.891 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 00:21:23.088 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
