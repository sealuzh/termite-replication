* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.application.international.MessageFormatter
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 20771
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:38:32.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:38:32.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:38:32.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:38:32.833 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:38:33.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:38:33.073 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.application.international.MessageFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/application/international/MessageFormatter.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 23:38:42.206 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.lts.application.international.MessageFormatter.loadCriticalBundles()Ljava/util/List;: Line 147
[MASTER] 23:38:42.206 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.lts.application.international.MessageFormatter.loadCriticalBundles()Ljava/util/List;: Line 151
[MASTER] 23:38:42.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.lts.application.international.MessageFormatter.loadCriticalBundles()Ljava/util/List;
[MASTER] 23:38:42.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.lts.application.international.MessageFormatter.loadCriticalBundles()Ljava/util/List;
[MASTER] 23:38:42.209 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.lts.application.international.MessageFormatter.loadCriticalBundles()Ljava/util/List;: root-Branch in context: 
[MASTER] 23:38:52.686 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 23:39:36.315 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 23:45:35.754 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 23:48:23.989 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 601s and 651 generations, 460865 statements, best individual has fitness: 616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 130
* Number of covered goals: 118
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 150
* Number of covered goals: 141
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 32%
* Total number of goals: 50
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Generated 44 tests with total length 861
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'MessageFormatter_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/78_caloriecount/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.io.ArchiveScanner
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 20773
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:31:56.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:31:56.852 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:31:56.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:31:57.048 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:31:57.220 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:31:57.222 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.io.ArchiveScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/io/ArchiveScanner.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 00:32:26.557 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 00:32:45.880 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 00:41:06.075 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 840s and 823 generations, 868591 statements, best individual has fitness: 248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 67
* Number of covered goals: 58
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 45
* Number of covered goals: 40
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 202
* Number of covered goals: 192
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 45
* Number of covered goals: 40
* Generated 49 tests with total length 1402
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 00:46:11.132 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 00:46:11.132 [logback-1] WARN  JUnitAnalyzer - Failing test:
 UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
Function<Object, Object> function2 = function1.andThen((Function<? super String, ?>) unaryOperator0);
Function.identity();
Function<Integer, String> function3 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
Function<Integer, Object> function4 = unaryOperator0.compose((Function<? super Integer, ?>) function3);
function2.compose((Function<? super Object, ?>) function1);
Function<String, String> function5 = Function.identity();
Function<String, Integer> function6 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
Function<Object, Integer> function7 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
Function<Object, Integer> function8 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function7);
function4.andThen((Function<? super Object, ? extends String>) function1);
Function<Integer, Object> function9 = function4.compose((Function<? super Integer, ? extends Integer>) function8);
function9.compose((Function<? super Integer, ? extends Integer>) function8);
function9.compose((Function<? super String, ? extends Integer>) function8);
Function.identity();
Function.identity();
unaryOperator0.apply(function2);
function8.compose((Function<? super String, ?>) function1);
unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function8);
Function.identity();
function8.compose((Function<? super Locale.LanguageRange, ?>) unaryOperator0);
Function<String, String> function10 = Function.identity();
function1.compose((Function<? super Integer, ?>) function2);
Function.identity();
unaryOperator0.compose((Function<? super Integer, ?>) function2);
unaryOperator0.apply((Object) null);
function10.andThen((Function<? super String, ? extends String>) function5);
unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function8);
unaryOperator0.apply(function2);
unaryOperator0.compose((Function<? super Integer, ?>) unaryOperator0);
unaryOperator0.compose((Function<? super String, ?>) function10);
Function.identity();
ImprovedFile improvedFile0 = new ImprovedFile("0IJ%>", "._l0");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
int int0 = archiveScanner0.toFileType(improvedFile0);
assertEquals(2, int0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'ArchiveScanner_ESTest' to /home/ubuntu/termite/qmosa/tests/s1028/78_caloriecount/evosuite-tests
* Done!

* Computation finished
