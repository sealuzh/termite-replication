* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.quickserver.util.xmlreader.AdvancedSettings
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/93_quickserver/evosuite-files/evosuite.properties
* Connecting to master process on port 10118
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.quickserver.util.xmlreader.AdvancedSettings
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/93_quickserver/src/main/java/org/quickserver/util/xmlreader/AdvancedSettings.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
* Search finished after 840s and 691 generations, 646516 statements, best individual has fitness: 96.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 95
* Number of covered goals: 95
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 52
* Number of covered goals: 52
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 105
* Number of covered goals: 103
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 79%
* Total number of goals: 48
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 52
* Number of covered goals: 52
* Generated 35 tests with total length 250
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 91%
* Compiling and checking tests
* Writing JUnit test case 'AdvancedSettings_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/93_quickserver/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.quickserver.net.server.TheClient
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/93_quickserver/evosuite-files/evosuite.properties
* Connecting to master process on port 10116
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:37:14.399 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.net.SocketOption
[MASTER] 13:37:14.603 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Supplier
[MASTER] 13:37:14.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:37:14.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:37:14.681 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:37:14.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:37:14.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:37:14.780 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.quickserver.net.server.TheClient
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/93_quickserver/src/main/java/org/quickserver/net/server/TheClient.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1017
* Starting evolution
* Search finished after 840s and 1122 generations, 598354 statements, best individual has fitness: 256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 93
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 42
* Number of covered goals: 42
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 42
* Number of covered goals: 42
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Generated 31 tests with total length 447
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 94%
* Compiling and checking tests
[MASTER] 13:51:20.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:20.255 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getAuthenticator();
theClient0.setAuthenticator((Authenticator) null);
theClient0.getAuthenticator();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:20.444 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:20.444 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getCommunicationLogging();
BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
assertEquals("<ClientHandler-Pool#-1-ID:1>", blockingClientHandler0.getName());


[MASTER] 13:51:20.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:20.606 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientCommandHandler();
theClient0.setTimeout(2046);
CommandHandler commandHandler0 = new CommandHandler();
theClient0.setClientCommandHandler((ClientCommandHandler) null);
theClient0.getClientObjectHandler();
assertEquals(2046, theClient0.getTimeout());


[MASTER] 13:51:20.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:20.772 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setMaxAuthTryMsg("=O'c.}id_MiEO=Id");
theClient0.getMaxAuthTryMsg();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:20.933 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:20.934 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QuickServer quickServer0 = new QuickServer("D_7er2R");
TheClient theClient0 = new TheClient();
Level level0 = Level.INFO;
quickServer0.setLoggingLevel(level0);
quickServer0.setQSAdminServerPort(0);
theClient0.setServer(quickServer0);
theClient0.getServer();
boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
assertTrue(boolean0);


[MASTER] 13:51:21.124 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:21.125 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setTimeout((-4217));
theClient0.setMaxConnectionMsg("");
theClient0.getTimeout();
FileSystemHandling.createFolder((EvoSuiteFile) null);
QuickServer quickServer0 = new QuickServer("Authentication done ");
ServerHooks serverHooks0 = null;
Object[] objectArray0 = new Object[8];
objectArray0[0] = (Object) "Authentication done ";
objectArray0[1] = (Object) "";
objectArray0[2] = (Object) quickServer0;
objectArray0[3] = (Object) null;
Object object0 = new Object();
objectArray0[4] = object0;
objectArray0[5] = (Object) theClient0;
Object object1 = new Object();
objectArray0[6] = object1;
objectArray0[7] = (Object) null;
quickServer0.initServer(objectArray0);

[MASTER] 13:51:21.647 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:21.647 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setTimeoutMsg("canp|");
theClient0.getTimeoutMsg();
InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
MockSocket mockSocket0 = new MockSocket(inetAddress0, 1052);

[MASTER] 13:51:21.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:21.841 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
SocketChannel socketChannel0 = SocketChannel.open();
theClient0.setSocketChannel(socketChannel0);
SocketChannel.open();
SocketOption<Object> socketOption0 = (SocketOption<Object>) mock(SocketOption.class, new ViolatedAssumptionAnswer());
System.setCurrentTimeMillis(1646L);

[MASTER] 13:51:22.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:22.208 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setMaxAuthTry(1);
theClient0.getMaxAuthTry();
theClient0.getClientCommandHandler();
CommandHandler commandHandler0 = new CommandHandler();
NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler();
commandHandler0.gotConnected(nonBlockingClientHandler0);

[MASTER] 13:51:22.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:22.358 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientExtendedEventHandler();
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
CommandHandler commandHandler0 = new CommandHandler();
BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
commandHandler0.lostConnection(blockingClientHandler0);
assertEquals("<ClientHandler-Pool#-1-ID:14>", blockingClientHandler0.getName());

theClient0.setClientCommandHandler(commandHandler0);
MockInetAddress.anyLocalAddress();
theClient0.getClientObjectHandler();
theClient0.setClientObjectHandler((ClientObjectHandler) null);
ClientEvent clientEvent0 = ClientEvent.READ;
theClient0.getClientCommandHandler();
theClient0.toString();
theClient0.getClientWriteHandler();
theClient0.getClientWriteHandler();
System.setCurrentTimeMillis((byte)0);
theClient0.getClientBinaryHandler();
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:22.680 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:22.680 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
MockSocket mockSocket0 = new MockSocket(proxy0);
theClient0.setSocket(mockSocket0);
String string0 = theClient0.toString();
assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);

MockInetAddress.anyLocalAddress();
MockSocket mockSocket1 = new MockSocket();
theClient0.getSocket();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:22.842 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:22.842 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientBinaryHandler();
theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
theClient0.getMaxConnectionMsg();
MockSocket mockSocket0 = new MockSocket();
theClient0.getClientExtendedEventHandler();
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
theClient0.getSocket();
theClient0.getMaxAuthTryMsg();
theClient0.getClientExtendedEventHandler();
TheClient theClient1 = new TheClient();
theClient1.getClientWriteHandler();
theClient0.setMaxConnectionMsg("!FJB+Nj9");
theClient1.setClientWriteHandler((ClientWriteHandler) null);
theClient1.getClientObjectHandler();
theClient0.getMaxAuthTry();
theClient1.getTimeout();
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
TheClient theClient2 = new TheClient();
theClient2.toString();
theClient1.setSocket(mockSocket0);
theClient2.getMaxConnectionMsg();
theClient2.getMaxAuthTryMsg();
theClient0.getMaxConnectionMsg();
theClient2.setSocket(mockSocket0);
theClient0.setMaxAuthTry(2526);
theClient2.getMaxAuthTry();
theClient0.getClientCommandHandler();
theClient0.setClientCommandHandler((ClientCommandHandler) null);
assertEquals(2526, theClient0.getMaxAuthTry());

CommandHandler commandHandler0 = new CommandHandler();
theClient1.getSocket();
assertTrue(theClient1.getCommunicationLogging());


[MASTER] 13:51:22.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:22.991 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W`U&z?r}9eVaG`#");
TheClient theClient0 = new TheClient();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.quickserver.util.pool.thread.ThreadObjectFactory");
theClient0.setMaxAuthTryMsg("");
theClient0.getMaxAuthTryMsg();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:23.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:23.417 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setTimeoutMsg("");
theClient0.getTimeoutMsg();
InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 1052);
NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
MockSocket mockSocket0 = new MockSocket(inetAddress0, 1052);
mockSocket0.getInetAddress();
mockSocket0.getChannel();
ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
assertEquals(0, byteBuffer0.remaining());


[MASTER] 13:51:23.564 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<...tHandler-Pool#-1-ID:[26]>> but was:<...tHandler-Pool#-1-ID:[1]>>
[MASTER] 13:51:23.564 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientAuthenticationHandler();
BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
TheClient theClient1 = new TheClient();
theClient1.getClientExtendedEventHandler();
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
blockingClientHandler0.getServer();
theClient0.setServer((QuickServer) null);
theClient0.setClientEventHandler((ClientEventHandler) null);
QuickServer quickServer0 = new QuickServer("");
QuickServerConfig quickServerConfig0 = new QuickServerConfig();
quickServer0.initServer(quickServerConfig0);
quickServer0.setClientAuthenticationHandler("E;OZYb0ypj>{)");
quickServer0.setServiceState(0);
theClient0.setServer(quickServer0);
blockingClientHandler0.getServer();
assertEquals("<ClientHandler-Pool#-1-ID:26>", blockingClientHandler0.getName());

theClient0.getClientExtendedEventHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientObjectHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientExtendedEventHandler();
theClient0.getServer();
theClient0.getClientBinaryHandler();
theClient0.getSocket();
theClient0.getClientExtendedEventHandler();
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:23.704 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:23.705 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getMaxAuthTry();
TheClient theClient1 = new TheClient();
theClient1.getClientBinaryHandler();
theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
CommandHandler commandHandler0 = new CommandHandler();
theClient1.setClientCommandHandler(commandHandler0);
theClient0.setMaxAuthTryMsg("");
theClient1.getTrusted();
theClient0.getClientObjectHandler();
theClient0.getMaxAuthTry();
theClient0.getSocketChannel();
QuickServer quickServer0 = new QuickServer("");
quickServer0.makeServerSocket();
String[] stringArray0 = new String[8];
stringArray0[3] = "";
stringArray0[4] = "";
stringArray0[5] = "";
stringArray0[6] = "";
theClient1.getClientWriteHandler();
theClient0.setClientWriteHandler((ClientWriteHandler) null);
stringArray0[7] = "";
QuickServer.main(stringArray0);
quickServer0.configQuickServer();
theClient0.setServer(quickServer0);
SocketChannel.open();
theClient0.getClientBinaryHandler();
System.setCurrentTimeMillis(0);
System.setCurrentTimeMillis(0);
theClient0.getSocket();
theClient0.getClientObjectHandler();
theClient0.getServer();
theClient0.getClientObjectHandler();
theClient1.getClientWriteHandler();
System.setCurrentTimeMillis(0);

[MASTER] 13:51:23.847 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:23.848 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setMaxAuthTry((-15));
theClient0.getMaxAuthTry();
theClient0.getClientCommandHandler();
CommandHandler commandHandler0 = new CommandHandler();
theClient0.setClientCommandHandler(commandHandler0);
theClient0.getClientBinaryHandler();
theClient0.getClientObjectHandler();
assertEquals((-15), theClient0.getMaxAuthTry());


[MASTER] 13:51:24.495 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:24.496 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
QuickServer quickServer0 = new QuickServer("1:x( a&J~trr");
quickServer0.setRawCommunicationLogging(true);
QuickServer.getVersionNo();
FileSystemHandling.createFolder((EvoSuiteFile) null);
quickServer0.setServerBanner("1:x( a&J~trr");
theClient0.setServer(quickServer0);
theClient0.getClientExtendedEventHandler();
theClient0.getClientObjectHandler();
theClient0.getClientAuthenticationHandler();
theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
System.setCurrentTimeMillis(160L);
theClient0.getAuthenticator();
theClient0.getSocket();
theClient0.getClientBinaryHandler();
theClient0.getAuthenticator();
theClient0.getSocket();
theClient0.getServer();
System.setCurrentTimeMillis(160L);
theClient0.getAuthenticator();
theClient0.getClientWriteHandler();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:24.664 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:24.665 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientWriteHandler();
theClient0.setClientWriteHandler((ClientWriteHandler) null);
theClient0.getClientAuthenticationHandler();
theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
blockingClientHandler0.getServer();
theClient0.setServer((QuickServer) null);
theClient0.setClientEventHandler((ClientEventHandler) null);
QuickServer quickServer0 = new QuickServer("");
quickServer0.setServiceState(3);
theClient0.setServer(quickServer0);
blockingClientHandler0.getServer();
assertEquals("<ClientHandler-Pool#-1-ID:29>", blockingClientHandler0.getName());

theClient0.getClientExtendedEventHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientObjectHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientExtendedEventHandler();
theClient0.getServer();
theClient0.getClientBinaryHandler();
assertFalse(theClient0.getTrusted());


[MASTER] 13:51:25.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test09 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientExtendedEventHandler();
DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
FileSystemHandling.createFolder((EvoSuiteFile) null);
theClient0.setClientEventHandler(defaultClientEventHandler0);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
FileSystemHandling.createFolder((EvoSuiteFile) null);
theClient0.setMaxAuthTryMsg("@0j.g2hqm/x");
FileSystemHandling.createFolder((EvoSuiteFile) null);
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
theClient0.getClientEventHandler();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:25.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
TheClient theClient0 = new TheClient();
org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
theClient0.setClientAuthenticationHandler(authenticator0);
theClient0.getClientAuthenticationHandler();
System.setCurrentTimeMillis((-1413L));

[MASTER] 13:51:25.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.315 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.setClientEvent((ClientEvent) null);
theClient0.toString();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{TheClient no socket, Event: null}");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{TheClient no socket, Event: null}");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{TheClient no socket, Event: null}");
theClient0.setCommunicationLogging(false);
theClient0.getClientExtendedEventHandler();
theClient0.getClientEvent();
theClient0.getClientEventHandler();
theClient0.setCommunicationLogging(false);
theClient0.getClientExtendedEventHandler();
QuickServer quickServer0 = new QuickServer();
CommandHandler commandHandler0 = new CommandHandler();
theClient0.getClientAuthenticationHandler();
theClient0.getClientExtendedEventHandler();
System.setCurrentTimeMillis((-342));
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte) (-85);
byteArray0[1] = (byte)19;
byteArray0[0] = (byte)0;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
theClient0.getClientData();
theClient0.getClientExtendedEventHandler();
theClient0.getClientEvent();
theClient0.getClientWriteHandler();
System.setCurrentTimeMillis((-342));

[MASTER] 13:51:25.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test12 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test11 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test10 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.511 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test2 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
CommandHandler commandHandler0 = new CommandHandler();
theClient0.setClientEventHandler(commandHandler0);
theClient0.getTrusted();
BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
theClient0.getClientExtendedEventHandler();
theClient0.getSocketChannel();
theClient0.getClientWriteHandler();
theClient0.getClientObjectHandler();
theClient0.setClientObjectHandler((ClientObjectHandler) null);
theClient0.setClientWriteHandler((ClientWriteHandler) null);
theClient0.getClientAuthenticationHandler();
QuickServer quickServer0 = new QuickServer("");
quickServer0.info();
quickServer0.setTimeout((-714));
theClient0.setServer(quickServer0);
theClient0.getServer();
theClient0.getTrusted();
blockingClientHandler0.getSocketChannel();

[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test3 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
Data data0 = new Data();
byte[] byteArray0 = new byte[0];
data0.setPassword(byteArray0);
theClient0.setClientData(data0);
theClient0.getClientData();
assertFalse(theClient0.getTrusted());
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test4 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
String string0 = theClient0.toString();
assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);

theClient0.getClientEventHandler();
theClient0.setClientEventHandler((ClientEventHandler) null);
theClient0.getClientWriteHandler();
theClient0.getClientWriteHandler();
theClient0.setClientEventHandler((ClientEventHandler) null);
theClient0.getAuthenticator();
CommandHandler commandHandler0 = new CommandHandler();
theClient0.setClientEventHandler(commandHandler0);
theClient0.setMaxConnectionMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
theClient0.setMaxConnectionMsg("");
theClient0.getMaxConnectionMsg();
theClient0.getMaxAuthTryMsg();
theClient0.getClientEventHandler();
theClient0.getMaxAuthTryMsg();
theClient0.getSocketChannel();
theClient0.getClientExtendedEventHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientObjectHandler();
theClient0.getAuthenticator();
theClient0.getClientWriteHandler();
theClient0.getClientExtendedEventHandler();
assertTrue(theClient0.getCommunicationLogging());
assertFalse(theClient0.getTrusted());


[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test6 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte) (-1);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
TheClient theClient0 = new TheClient();
theClient0.getClientEvent();
assertTrue(theClient0.getCommunicationLogging());
assertFalse(theClient0.getTrusted());


[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test7 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test8 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test9 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 13:51:25.513 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
ClientEvent clientEvent0 = ClientEvent.ACCEPT;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
theClient0.setMaxAuthTryMsg("w");
theClient0.getClientWriteHandler();
theClient0.setClientWriteHandler((ClientWriteHandler) null);
theClient0.getClientAuthenticationHandler();
theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
QuickServer quickServer0 = new QuickServer("");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w");
quickServer0.setMaxConnection(950L);
theClient0.setServer(quickServer0);
theClient0.getServer();
boolean boolean0 = theClient0.getTrusted();
assertFalse(boolean0);

theClient0.getClientWriteHandler();
theClient0.getAuthenticator();
System.setCurrentTimeMillis(950L);
theClient0.getClientExtendedEventHandler();
theClient0.getClientObjectHandler();
theClient0.getAuthenticator();
theClient0.getClientExtendedEventHandler();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
theClient0.getClientBinaryHandler();
theClient0.getServer();
assertTrue(theClient0.getCommunicationLogging());


[MASTER] 13:51:25.513 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test1 -> class java.lang.OutOfMemoryError: unable to create new native thread
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
  - java.net.SocketPermission: 
         connect,resolve 192.168.1.42:780: 1
         connect,resolve 200.42.42.0:5149: 1
         connect,resolve 192.168.1.42:89: 1
         and other 153 cases of action/name for this exception class
* Writing JUnit test case 'TheClient_ESTest' to /home/ubuntu/termite/qmosa/tests/s1017/93_quickserver/evosuite-tests
[MASTER] 13:51:25.513 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TheClient theClient0 = new TheClient();
theClient0.getClientAuthenticationHandler();
BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
TheClient theClient1 = new TheClient();
theClient1.getClientExtendedEventHandler();
theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
blockingClientHandler0.getServer();
theClient0.setServer((QuickServer) null);
theClient0.setClientEventHandler((ClientEventHandler) null);
QuickServer quickServer0 = new QuickServer("");
QuickServerConfig quickServerConfig0 = new QuickServerConfig();
quickServer0.initServer(quickServerConfig0);
quickServer0.setClientAuthenticationHandler("E;OZYb0ypj>{)");
quickServer0.setServiceState(0);
theClient0.setServer(quickServer0);
blockingClientHandler0.getServer();
//  // Unstable assertion: assertEquals("<ClientHandler-Pool#-1-ID:26>", blockingClientHandler0.getName());

theClient0.getClientExtendedEventHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientObjectHandler();
theClient0.getClientBinaryHandler();
theClient0.getClientExtendedEventHandler();
theClient0.getServer();
theClient0.getClientBinaryHandler();
theClient0.getSocket();
theClient0.getClientExtendedEventHandler();
//  // Unstable assertion: assertTrue(theClient0.getCommunicationLogging());


* Done!

* Computation finished
[MASTER] 13:51:25.548 [Thread-3] ERROR ExternalProcessHandler - Exception while reading output of client process. Stream closed
