* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 21004
* Connecting to master process on port 21005
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBProcedureCall.java
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/encodings/EncodingFactory.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
* Search finished after 841s and 428 generations, 438548 statements, best individual has fitness: 624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Search finished after 841s and 286 generations, 108071 statements, best individual has fitness: 680.0
* Coverage of criterion LINE: 95%
* Total number of goals: 117
* Number of covered goals: 111
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 98
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 347
* Number of covered goals: 316
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 70
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 98
* Number of covered goals: 88
* Generated 62 tests with total length 1350
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 242
* Number of covered goals: 227
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 187
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 387
* Number of covered goals: 347
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 187
* Generated 105 tests with total length 438
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/110_firebird/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
[MASTER] 13:37:40.809 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:37:40.810 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
Object object0 = fBProcedureCall1.clone();
FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
fBProcedureCall3.clone();
FBProcedureCall fBProcedureCall4 = new FBProcedureCall();
FBProcedureCall fBProcedureCall5 = new FBProcedureCall();
fBProcedureCall5.setName("no");
fBProcedureCall0.equals(fBProcedureCall5);
assertTrue(fBProcedureCall5.equals((Object)fBProcedureCall0));

fBProcedureCall5.addParam(40, "d vwmkqw|la6Z");
assertFalse(fBProcedureCall5.equals((Object)object0));


[MASTER] 13:37:42.330 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 13:37:42.330 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(4, "?7c2|+qKn");
fBProcedureParam0.setType(4);
fBProcedureParam0.setType(31);
fBProcedureCall0.getSQL(true);
fBProcedureParam0.clone();
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
fBProcedureParam0.setIndex(3);
fBProcedureCall0.addOutputParam(fBProcedureParam0);
fBProcedureCall0.getSQL(true);
fBProcedureCall0.mapOutParamIndexToPosition(628, true);
fBProcedureCall1.addParam(628, "Value of parameter ");
fBProcedureCall1.getInputParam(43);
fBProcedureParam0.setValue("SELECT * FROM null(?7c2|+qKn)");
fBProcedureCall1.hashCode();
fBProcedureCall0.addOutputParam(fBProcedureParam0);
fBProcedureCall0.mapOutParamIndexToPosition(3, true);
fBProcedureCall0.registerOutParam(3, 4);
fBProcedureCall0.equals(fBProcedureParam0);
FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall1.clone();
fBProcedureCall2.addParam(1874, "?7c2|+qKn");
fBProcedureCall2.addInputParam(fBProcedureParam0);
fBProcedureCall1.addParam(35, ".dz");
FBProcedureParam fBProcedureParam1 = new FBProcedureParam(35, "|Yx$p;Op<=p_");
fBProcedureCall0.addParam(895954197, "Hn]?R?{)<D9(209X9R<");

[MASTER] 13:37:42.864 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 13:37:42.864 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(4, "?7c2|+qKn");
fBProcedureParam0.setType(4);
fBProcedureParam0.setType(4);
fBProcedureCall0.getSQL(true);
fBProcedureParam0.clone();
fBProcedureParam0.setIndex(4);
fBProcedureCall0.addOutputParam(fBProcedureParam0);
fBProcedureCall0.getSQL(true);
fBProcedureCall0.hashCode();
fBProcedureCall0.addParam(628, "Value of parameter ");
fBProcedureCall0.getInputParam(1148011107);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 21006
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:48:09.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:48:09.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:48:09.464 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:48:09.601 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 14:48:10.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:48:10.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:48:10.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:48:10.689 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:48:10.693 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:48:10.693 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:48:10.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:48:10.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:48:10.733 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:48:10.734 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:48:10.736 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:48:10.736 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:48:10.851 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:48:10.939 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBCachedFetcher.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 14:49:08.031 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 844s and 108 generations, 109842 statements, best individual has fitness: 1640.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 158
* Number of covered goals: 100
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 118
* Number of covered goals: 59
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 347
* Number of covered goals: 332
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 93%
* Total number of goals: 28
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 118
* Number of covered goals: 46
* Generated 49 tests with total length 1356
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 42%
* Compiling and checking tests
[MASTER] 15:03:58.644 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.NativeGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 15:03:58.702 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:03:58.723 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl: org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:03:58.839 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:04:23.020 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:04:23.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test19 -> class java.lang.NullPointerException: null
[MASTER] 15:04:23.271 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
GDSType gDSType0 = javaGDSImpl0.getType();
gDSType0.readResolve();
DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
isc_blob_handle_impl0.getDb();
GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 478, 0, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);

[MASTER] 15:04:23.271 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test15 -> class java.lang.NullPointerException: null
[MASTER] 15:04:23.272 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
GDSType gDSType0 = javaGDSImpl0.getType();
gDSType0.readResolve();
DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
isc_blob_handle_impl0.getDb();
GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
byte[][] byteArray0 = new byte[6][6];
byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
linkedList0.add(byteArray0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
fBCachedFetcher0.beforeFirst();

[MASTER] 15:04:23.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test25 -> class java.lang.NullPointerException: null
[MASTER] 15:04:23.273 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
linkedList0.forEach(consumer0);
linkedList0.pollLast();
byte[][] byteArray0 = new byte[1][8];
byte[] byteArray1 = new byte[7];
byteArray1[0] = (byte)1;
byteArray1[1] = (byte)126;
linkedList0.iterator();
byteArray1[3] = (byte)127;
byteArray1[4] = (byte)127;
linkedList0.add((byte[][]) null);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
LinkedBlockingDeque<FBLongVarCharField> linkedBlockingDeque0 = new LinkedBlockingDeque<FBLongVarCharField>();
linkedList0.retainAll(linkedBlockingDeque0);
byteArray1[5] = (byte) (-40);
byteArray1[6] = (byte) (-89);
byteArray0[0] = byteArray1;
linkedList0.add(byteArray0);
linkedList0.spliterator();
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
int int0 = 1176;
fBCachedFetcher0.isFirst();
fBCachedFetcher0.next();

[MASTER] 15:04:30.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test22 -> class java.lang.NullPointerException: null
[MASTER] 15:04:30.344 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldAllThrowIOExceptions();
JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
GDSType gDSType0 = javaGDSImpl0.getType();
gDSType0.readResolve();
gDSType0.readResolve();
DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
FileSystemHandling.createFolder((EvoSuiteFile) null);
LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
byte[][] byteArray0 = new byte[6][9];
byte[] byteArray1 = new byte[5];
byteArray1[0] = (byte)68;
byteArray1[1] = (byte)78;
byteArray1[2] = (byte) (-15);
byteArray1[3] = (byte)74;
byteArray1[4] = (byte)4;
byteArray0[0] = byteArray1;
byte[] byteArray2 = new byte[0];
byteArray0[1] = byteArray2;
byte[] byteArray3 = new byte[9];
byteArray3[0] = (byte)4;
byteArray3[1] = (byte)74;
byteArray3[2] = (byte)68;
byteArray3[3] = (byte)68;
byteArray3[4] = (byte) (-15);
byteArray3[5] = (byte)74;
byteArray3[6] = (byte)28;
byteArray3[7] = (byte)78;
byteArray3[8] = (byte)4;
byteArray0[2] = byteArray3;
byte[] byteArray4 = new byte[9];
byteArray4[0] = (byte)4;
byteArray4[1] = (byte) (-72);
byteArray4[2] = (byte) (-94);
byteArray4[3] = (byte)68;
byteArray4[4] = (byte) (-15);
byteArray4[5] = (byte)4;
byteArray4[6] = (byte)68;
byteArray4[7] = (byte)4;
byteArray4[8] = (byte)68;
byteArray0[3] = byteArray4;
byte[] byteArray5 = new byte[4];
byteArray5[0] = (byte)28;
byteArray5[1] = (byte) (-13);
byteArray5[2] = (byte)74;
byteArray5[3] = (byte) (-72);
byteArray0[4] = byteArray5;
byte[] byteArray6 = new byte[4];
byteArray6[0] = (byte)28;
byteArray6[1] = (byte)28;
byteArray6[2] = (byte)74;
byteArray6[3] = (byte)4;
byteArray0[5] = byteArray6;
linkedList0.add(byteArray0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
fBCachedFetcher0.last();

* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/110_firebird/evosuite-tests
* Done!

* Computation finished
