* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: state.Player
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/27_gangup/evosuite-files/evosuite.properties
* Connecting to master process on port 13427
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:56:47.003 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:56:47.008 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:56:47.009 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:56:47.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class state.Player
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/27_gangup/src/main/java/state/Player.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 20:56:50.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was state.Player.getStrength()I: Line 199
[MASTER] 20:56:50.271 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was state.Player.getStrength()I: root-Branch
[MASTER] 20:56:50.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 108: state.Player.getStrength()I:199 - ReplaceVariable strength -> PLAYER
[MASTER] 20:56:50.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 109: state.Player.getStrength()I:199 - ReplaceVariable strength -> TEXT_MESSAGE
[MASTER] 20:56:50.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 110: state.Player.getStrength()I:199 - ReplaceVariable strength -> ACTION
[MASTER] 20:56:50.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 111: state.Player.getStrength()I:199 - ReplaceVariable strength -> UNDEFINED
[MASTER] 20:56:50.327 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 112: state.Player.getStrength()I:199 - ReplaceVariable strength -> GAME_STATE
[MASTER] 20:56:50.327 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 113: state.Player.getStrength()I:199 - ReplaceVariable strength -> GAME_EVENT
[MASTER] 20:56:50.329 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 114: state.Player.getStrength()I:199 - ReplaceVariable strength -> id
[MASTER] 20:56:50.329 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 115: state.Player.getStrength()I:199 - InsertUnaryOp Negation
[MASTER] 20:56:50.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 116: state.Player.getStrength()I:199 - InsertUnaryOp +1
[MASTER] 20:56:50.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 117: state.Player.getStrength()I:199 - InsertUnaryOp -1
[MASTER] 20:56:50.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: state.Player.getStrength()I:Positive
[MASTER] 20:56:50.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: state.Player.getY()F:Positive
[MASTER] 20:56:50.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: state.Player.getIP()Ljava/lang/String;:EmptyString
[MASTER] 20:56:50.352 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] state.Player.getStrength()I
[MASTER] 20:56:50.358 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] state.Player.getStrength()I
[MASTER] 20:56:50.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch state.Player.getStrength()I: root-Branch in context: state.Player:getStrength()I
[MASTER] 20:58:08.787 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:58:08.788 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:01:55.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was state.Player.unpack(Ljava/io/DataInputStream;)Z: Line 301
[MASTER] 21:01:55.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was state.Player.unpack(Ljava/io/DataInputStream;)Z: Line 307
[MASTER] 21:01:55.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] state.Player.unpack(Ljava/io/DataInputStream;)Z
[MASTER] 21:01:55.418 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] state.Player.unpack(Ljava/io/DataInputStream;)Z
* Search finished after 529s and 144 generations, 134519 statements, best individual has fitness: 72.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 130
* Number of covered goals: 127
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 270
* Number of covered goals: 268
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 87%
* Total number of goals: 47
* Number of covered goals: 41
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Generated 54 tests with total length 807
* Resulting test suite's coverage: 99% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 78%
* Compiling and checking tests
[MASTER] 21:06:09.960 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:06:09.961 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Player player0 = new Player();
player0.getX();
Party party0 = new Party((short)4919);
player0.head = party0;
Player player1 = new Player(1, (String) null, "state.Player", 1);
player0.prev = (Party) player1;
System.setCurrentTimeMillis(1L);
player0.pack();
player0.remove(party0);
player0.prev.add(player1);
FileSystemHandling.shouldAllThrowIOExceptions();
player1.add(player0.prev);
player0.setY(1L);
player0.add(player1);
player0.getX();
player0.getX();
player1.setZ((short)4919);
player1.getX();
System.setCurrentTimeMillis((short)4919);
player1.gangStrength();

[MASTER] 21:06:10.558 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:06:10.559 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Player player0 = new Player();
player0.getX();
Party party0 = new Party((short)4919);
player0.head = party0;
Player player1 = new Player(1, (String) null, "state.Player", 1);
player0.prev = (Party) player1;
System.setCurrentTimeMillis(1L);
player0.pack();
player0.prev.add(player1);
FileSystemHandling.shouldAllThrowIOExceptions();
player1.add(player0.prev);
player0.setY(1L);
player0.add(player1);
player0.getX();
player0.getX();
player1.setZ((short)4919);
player1.getX();
System.setCurrentTimeMillis((short)4919);
player0.gangStrength();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Player_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/27_gangup/evosuite-tests
* Done!

* Computation finished
