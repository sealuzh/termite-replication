* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18439
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:37:00.574 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:37:00.577 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:37:00.578 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:37:00.597 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Search finished after 854s and 34 generations, 35974 statements, best individual has fitness: 2912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 647
* Number of covered goals: 601
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 396
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 610
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 105
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 121
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 121
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 383
* Generated 185 tests with total length 4172
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:56:53.415 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6698854166666667% of time used, but only 54/185 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 18:58:29.645 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18438
* Connecting to master process on port 18437
* Connecting to master process on port 18439
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
[MASTER] 19:21:07.406 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:21:07.420 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:21:07.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:21:07.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:21:07.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:21:07.557 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:21:14.496 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:21:14.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:21:14.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:21:15.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:21:15.595 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:21:15.596 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:21:17.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:21:17.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:21:17.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:21:17.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:21:17.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:21:17.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:21:17.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:21:17.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:21:17.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:21:17.290 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 19:21:17.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 19:21:20.979 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 19:23:13.212 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 19:23:33.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 19:24:36.054 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnceAndRecordPrediction(Lweka/classifiers/Classifier;Lweka/core/Instance;)D
[MASTER] 19:24:36.055 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForClassifier([DLweka/core/Instance;)V
[MASTER] 19:26:49.873 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 19:30:21.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.correlationCoefficient()D
* Search finished after 842s and 272 generations, 250843 statements, best individual has fitness: 5296.0
* Search finished after 843s and 81 generations, 101427 statements, best individual has fitness: 2760.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 370
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 713
* Number of covered goals: 430
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 72
* Number of covered goals: 36
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Generated 83 tests with total length 2206
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Generated 62 tests with total length 1132
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 845s and 93 generations, 88860 statements, best individual has fitness: 15672.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 775
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 340
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 59
* Number of covered goals: 59
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 424
* Number of covered goals: 257
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 323
* Generated 136 tests with total length 2982
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 19:39:23.833 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:39:24.128 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:39:33.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:39:33.572 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
double[] doubleArray0 = new double[2];
doubleArray0[1] = (-355.914);
int[] intArray0 = new int[2];
intArray0[0] = (-4555);
intArray0[1] = 170;
SparseInstance sparseInstance0 = new SparseInstance((-355.914), doubleArray0, intArray0, 170);
SparseInstance sparseInstance1 = new SparseInstance((Instance) sparseInstance0);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("", arrayList0, 6);
Instances instances1 = new Instances(instances0, (-2032));
Attribute attribute0 = new Attribute("@relation", instances0, 170);
Attribute.typeToString(attribute0);
Attribute.typeToString(attribute0);
attribute0.indexOfValue("integer");
Attribute attribute1 = new Attribute("integer", (-1));
attribute1.value(0);
sparseInstance1.setMissing(attribute1);
Instances instances2 = Instances.mergeInstances(instances0, instances0);
instances2.stream();
discretize0.makeBinaryTipText();
discretize0.binsTipText();
SystemInUtil.addInputLine("numeric");
arrayList0.add(attribute0);
discretize0.desiredWeightOfInstancesPerIntervalTipText();
discretize0.setInputFormat(instances1);

[MASTER] 19:39:35.966 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:39:35.967 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
FileSystemHandling.shouldAllThrowIOExceptions();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.shouldAllThrowIOExceptions();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("K97Zw ", arrayList0, 3220);
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
Object[] objectArray0 = new Object[24];
objectArray0[7] = (Object) instances0;
objectArray0[1] = (Object) instances0;
FileSystemHandling.shouldAllThrowIOExceptions();
instances0.toArray(objectArray0);
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "e &RL<@<+|-qN'Ix");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
discretize0.makeBinaryTipText();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
FileSystemHandling.appendLineToFile(evoSuiteFile1, "nC!(7I1");
discretize0.binsTipText();
EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
FileSystemHandling.setPermissions(evoSuiteFile2, true, false, true);
arrayList0.stream();
Attribute attribute0 = new Attribute("nC!(7I1", instances0);
arrayList0.add(attribute0);
discretize0.desiredWeightOfInstancesPerIntervalTipText();
discretize0.setInputFormat(instances0);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 19:42:56.088 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:42:56.316 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:42:56.317 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 19:42:57.138 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18437
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:59:13.171 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:59:13.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:59:13.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:59:13.188 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 19:59:16.089 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 19:59:58.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:59:58.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:02:29.514 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 309s and 128 generations, 117442 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 15 tests with total length 452
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18441
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:17:55.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:17:55.959 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:17:55.960 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:17:57.133 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:17:57.447 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:17:57.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 20:18:01.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 20:19:16.067 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 20:27:23.265 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 841s and 196 generations, 199390 statements, best individual has fitness: 12848.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 250
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 993
* Number of covered goals: 526
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 71 tests with total length 1753
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18438
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:35:00.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:35:00.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:35:00.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:35:00.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:35:00.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:35:00.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 20:35:05.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 20:35:05.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 20:35:05.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: Line 676
[MASTER] 20:35:05.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 20:35:05.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 20:35:05.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 20:35:05.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 20:35:05.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch
[MASTER] 20:35:05.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 20:35:05.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 20:35:05.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:676 - ReplaceConstant - Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value -> 
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 20:35:05.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 20:35:05.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Positive
[MASTER] 20:35:05.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 20:35:05.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 20:35:05.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 20:35:05.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 20:35:05.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 20:35:05.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 20:35:05.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 20:35:05.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 20:35:05.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 20:35:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 20:35:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 20:35:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 20:35:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 20:35:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getNorm()D
[MASTER] 20:35:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 20:35:05.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 20:35:05.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 20:35:31.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 20:35:31.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 20:35:33.207 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 257: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_normalize
[MASTER] 20:35:33.210 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 260: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_lowercaseTokens
[MASTER] 20:37:38.632 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 20:37:38.632 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 20:42:15.949 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 842s and 100 generations, 101867 statements, best individual has fitness: 2416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 338
* Number of covered goals: 278
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 194
* Number of covered goals: 146
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 476
* Number of covered goals: 389
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 112
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 194
* Number of covered goals: 143
* Generated 70 tests with total length 1579
* Resulting test suite's coverage: 79% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 47%
* Compiling and checking tests
[MASTER] 20:54:50.311 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1574196890275/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1574196890275/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:50.311 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:50.311 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:50.314 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 20:54:50.314 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 53
[MASTER] 20:54:50.315 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1574196890275/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:50 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.meta.CostSensitiveClassifier;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_4_tmp__ESTest extends NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.880268034549814
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_useStopList = true;
32:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
33:       TestInstances testInstances0 = new TestInstances();
34:       testInstances0.generate();
35:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
36:       TestInstances testInstances1 = new TestInstances();
37:       Instances instances0 = testInstances1.generate();
38:       naiveBayesMultinomialText0.buildClassifier(instances0);
39:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
40:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
41:       naiveBayesMultinomialText0.stemmerTipText();
42:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
44:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
45:       costSensitiveClassifier0.getOnDemandDirectory();
46:       NaiveBayesMultinomialText naiveBayesMultinomialText6 = new NaiveBayesMultinomialText();
47:       naiveBayesMultinomialText1.LNormTipText();
48:       naiveBayesMultinomialText3.stopwordsTipText();
49:       NaiveBayesMultinomialText naiveBayesMultinomialText7 = new NaiveBayesMultinomialText();
50:       naiveBayesMultinomialText7.normalizeDocLengthTipText();
51:       naiveBayesMultinomialText1.useStopListTipText();
52:       naiveBayesMultinomialText0.tokenizerTipText();
53:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
54:       NaiveBayesMultinomialText naiveBayesMultinomialText8 = new NaiveBayesMultinomialText();
55:       NaiveBayesMultinomialText naiveBayesMultinomialText9 = new NaiveBayesMultinomialText();
56:       naiveBayesMultinomialText6.setNorm((-2));
57:       naiveBayesMultinomialText9.stemmerTipText();
58:       naiveBayesMultinomialText6.normTipText();
59:       assertEquals((-2.0), naiveBayesMultinomialText6.getNorm(), 0.01);
60:       
61:       naiveBayesMultinomialText5.useWordFrequenciesTipText();
62:       naiveBayesMultinomialText3.lowercaseTokensTipText();
63:       Random.setNextRandom((-2));
64:       Random.setNextRandom(95);
65:       naiveBayesMultinomialText7.tokenizerTipText();
66:       String string0 = naiveBayesMultinomialText4.normTipText();
67:       assertEquals("The norm of the instances after normalization.", string0);
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_4_1574196890275/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:50 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:50.316 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
testInstances0.generate();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
TestInstances testInstances1 = new TestInstances();
Instances instances0 = testInstances1.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
costSensitiveClassifier0.getOnDemandDirectory();
NaiveBayesMultinomialText naiveBayesMultinomialText6 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.LNormTipText();
naiveBayesMultinomialText3.stopwordsTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText7 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText7.normalizeDocLengthTipText();
naiveBayesMultinomialText1.useStopListTipText();
naiveBayesMultinomialText0.tokenizerTipText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText8 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText9 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText6.setNorm((-2));
naiveBayesMultinomialText9.stemmerTipText();
naiveBayesMultinomialText6.normTipText();
assertEquals((-2.0), naiveBayesMultinomialText6.getNorm(), 0.01);

naiveBayesMultinomialText5.useWordFrequenciesTipText();
naiveBayesMultinomialText3.lowercaseTokensTipText();
Random.setNextRandom((-2));
Random.setNextRandom(95);
naiveBayesMultinomialText7.tokenizerTipText();
String string0 = naiveBayesMultinomialText4.normTipText();
assertEquals("The norm of the instances after normalization.", string0);


[MASTER] 20:54:50.421 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1574196890390/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1574196890390/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:50.421 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:50.421 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:50.422 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 20:54:50.423 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1574196890390/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:50 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.0931471805599453
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       naiveBayesMultinomialText0.m_inputVector = null;
30:       naiveBayesMultinomialText0.getTokenizer();
31:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
32:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
33:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
34:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
35:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
36:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_7_1574196890390/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:50 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:50.426 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.getTokenizer();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 20:54:50.856 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1574196890835/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1574196890835/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:50.856 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:50.856 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:50.856 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 20:54:50.856 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1574196890835/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:50 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.AbstractClassifier;
16: import weka.classifiers.Classifier;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_21_tmp__ESTest extends NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.314694645759564
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
30:       naiveBayesMultinomialText0.setUseStopList(true);
31:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
32:       naiveBayesMultinomialText0.getUseStopList();
33:       AbstractClassifier.makeCopy((Classifier) null);
34:       naiveBayesMultinomialText0.listOptions();
35:       naiveBayesMultinomialText0.setOptions(stringArray0);
36:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
37:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
38:       assertEquals(3.0, double0, 0.01);
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_21_1574196890835/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:50 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:50.857 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.setUseStopList(true);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getUseStopList();
AbstractClassifier.makeCopy((Classifier) null);
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertTrue(naiveBayesMultinomialText0.getUseStopList());
assertEquals(3.0, double0, 0.01);


[MASTER] 20:54:51.099 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1574196891082/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1574196891082/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:51.099 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.099 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.100 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 20:54:51.101 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1574196891082/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_30_tmp__ESTest extends NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.5271837172395382
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
32:       FileSystemHandling.appendLineToFile(evoSuiteFile0, "ORW");
33:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
34:       try { 
35:         naiveBayesMultinomialText0.updateClassifier((Instance) null);
36:         fail("Expecting exception: NullPointerException");
37:       
38:       } catch(NullPointerException e) {
39:          //
40:          // no message in exception (getMessage() returned null)
41:          //
42:       }
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_30_1574196891082/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:51.101 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "ORW");
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.updateClassifier((Instance) null);

[MASTER] 20:54:51.279 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_37_1574196891255/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_37_1574196891255/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:51.279 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.279 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.279 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 20:54:51.279 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_37_1574196891255/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.tokenizers.Tokenizer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_37_tmp__ESTest extends NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.97379553867689
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
30:       naiveBayesMultinomialText0.m_inputVector = null;
31:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
34:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
35:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
36:       naiveBayesMultinomialText0.getStemmer();
37:       String[] stringArray0 = new String[4];
38:       stringArray0[0] = "If true then document length is normalized according to the settings for norm and lnorm";
39:       stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
40:       stringArray0[2] = "If true then document length is normalized according to the settings for norm and lnorm";
41:       stringArray0[3] = "If true then document length is normalized according to the settings for norm and lnorm";
42:       NaiveBayesMultinomialText.main(stringArray0);
43:       naiveBayesMultinomialText0.listOptions();
44:       naiveBayesMultinomialText0.setNorm((-2464));
45:       naiveBayesMultinomialText0.getStemmer();
46:       SGDText sGDText0 = new SGDText();
47:       sGDText0.getCapabilities();
48:       Tokenizer tokenizer0 = sGDText0.getTokenizer();
49:       naiveBayesMultinomialText0.setTokenizer(tokenizer0);
50:       naiveBayesMultinomialText0.normTipText();
51:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
52:       naiveBayesMultinomialText0.getStemmer();
53:       NaiveBayesMultinomialText.main(stringArray0);
54:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
55:       assertEquals((-2464.0), naiveBayesMultinomialText0.getNorm(), 0.01);
56:       assertEquals((-2464), int0);
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_37_1574196891255/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:51.280 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.getStemmer();
String[] stringArray0 = new String[4];
stringArray0[0] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[2] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[3] = "If true then document length is normalized according to the settings for norm and lnorm";
NaiveBayesMultinomialText.main(stringArray0);
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.setNorm((-2464));
naiveBayesMultinomialText0.getStemmer();
SGDText sGDText0 = new SGDText();
sGDText0.getCapabilities();
Tokenizer tokenizer0 = sGDText0.getTokenizer();
naiveBayesMultinomialText0.setTokenizer(tokenizer0);
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.getStemmer();
NaiveBayesMultinomialText.main(stringArray0);
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals((-2464.0), naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals((-2464), int0);


[MASTER] 20:54:51.373 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1574196891354/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1574196891354/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:51.373 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.373 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.373 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 20:54:51.374 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1574196891354/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.052128844641025
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       naiveBayesMultinomialText0.m_inputVector = null;
30:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
31:       naiveBayesMultinomialText0.pruneDictionary();
32:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
33:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
34:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
35:       naiveBayesMultinomialText0.getStemmer();
36:       String[] stringArray0 = new String[4];
37:       stringArray0[0] = "If true then document length is normalized according to the settings for norm and lnorm";
38:       stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
39:       stringArray0[2] = "If true then document length is normalized according to the settings for norm and lnorm";
40:       stringArray0[3] = "If true then document length is normalized according to the settings for norm and lnorm";
41:       NaiveBayesMultinomialText.main(stringArray0);
42:       naiveBayesMultinomialText0.listOptions();
43:       naiveBayesMultinomialText0.setNorm((-2464));
44:       naiveBayesMultinomialText0.getStemmer();
45:       SGDText sGDText0 = new SGDText();
46:       sGDText0.getCapabilities();
47:       sGDText0.getTokenizer();
48:       naiveBayesMultinomialText0.setMinWordFrequency((-373.3457894944309));
49:       naiveBayesMultinomialText0.setMinWordFrequency((-1.0));
50:       naiveBayesMultinomialText0.globalInfo();
51:       naiveBayesMultinomialText0.getMinWordFrequency();
52:       naiveBayesMultinomialText0.normTipText();
53:       assertEquals((-1.0), naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_41_1574196891354/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:51.374 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.getStemmer();
String[] stringArray0 = new String[4];
stringArray0[0] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[2] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[3] = "If true then document length is normalized according to the settings for norm and lnorm";
NaiveBayesMultinomialText.main(stringArray0);
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.setNorm((-2464));
naiveBayesMultinomialText0.getStemmer();
SGDText sGDText0 = new SGDText();
sGDText0.getCapabilities();
sGDText0.getTokenizer();
naiveBayesMultinomialText0.setMinWordFrequency((-373.3457894944309));
naiveBayesMultinomialText0.setMinWordFrequency((-1.0));
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.normTipText();
assertEquals((-1.0), naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 20:54:51.921 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_62_1574196891899/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_62_1574196891899/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:51.921 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.921 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.922 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 20:54:51.922 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_62_1574196891899/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.Instances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_62_tmp__ESTest extends NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=3.4424811366896733
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       byte[] byteArray0 = new byte[5];
34:       byteArray0[0] = (byte) (-82);
35:       byteArray0[1] = (byte) (-42);
36:       byteArray0[2] = (byte) (-1);
37:       byteArray0[3] = (byte)16;
38:       byteArray0[4] = (byte)115;
39:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
40:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
41:       naiveBayesMultinomialText0.setNorm(1483.01352331);
42:       naiveBayesMultinomialText0.getCapabilities();
43:       System.setCurrentTimeMillis(944L);
44:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
45:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
46:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
47:       naiveBayesMultinomialText0.setOptions(stringArray0);
48:       Random.setNextRandom(85);
49:       naiveBayesMultinomialText0.getCapabilities();
50:       System.setCurrentTimeMillis(944L);
51:       naiveBayesMultinomialText0.getNorm();
52:       naiveBayesMultinomialText0.normTipText();
53:       naiveBayesMultinomialText0.normTipText();
54:       naiveBayesMultinomialText0.getOptions();
55:       naiveBayesMultinomialText0.getNormalizeDocLength();
56:       naiveBayesMultinomialText0.globalInfo();
57:       try { 
58:         naiveBayesMultinomialText0.buildClassifier((Instances) null);
59:         fail("Expecting exception: NullPointerException");
60:       
61:       } catch(NullPointerException e) {
62:          //
63:          // no message in exception (getMessage() returned null)
64:          //
65:          verifyException("weka.core.Capabilities", e);
66:       }
67:   }
68: }
RegularFileObject[/tmp/EvoSuite_62_1574196891899/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:51.922 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
byte[] byteArray0 = new byte[5];
byteArray0[0] = (byte) (-82);
byteArray0[1] = (byte) (-42);
byteArray0[2] = (byte) (-1);
byteArray0[3] = (byte)16;
byteArray0[4] = (byte)115;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.setNorm(1483.01352331);
naiveBayesMultinomialText0.getCapabilities();
System.setCurrentTimeMillis(944L);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
Random.setNextRandom(85);
naiveBayesMultinomialText0.getCapabilities();
System.setCurrentTimeMillis(944L);
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.buildClassifier((Instances) null);

[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_64_1574196891945/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_64_1574196891945/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.java]]
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 63
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 63
[MASTER] 20:54:51.976 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 64
[MASTER] 20:54:51.977 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_64_1574196891945/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 20:54:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.classifiers.meta.CostSensitiveClassifier;
21: import weka.core.Capabilities;
22: import weka.core.Instances;
23: import weka.core.TestInstances;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_64_tmp__ESTest extends NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.582859740282525
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
36:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
37:       Instances instances0 = testInstances0.generate();
38:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(10000);
40:       naiveBayesMultinomialText1.m_inputVector = linkedHashMap0;
41:       Instances instances1 = new Instances(instances0);
42:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
44:       naiveBayesMultinomialText1.buildClassifier(instances0);
45:       assertEquals(0, capabilities0.getMinimumNumberInstances());
46:       
47:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
48:       String string0 = naiveBayesMultinomialText1.toString();
49:       assertEquals("The independent probability of a class\n--------------------------------------\nclass1\t9.0\nclass2\t4.0\nclass3\t7.0\nclass4\t4.0\n\nThe probability of a word given the class\n-----------------------------------------\n\tclass1\tclass2\tclass3\tclass4\t\nover\t2.718281828459045\t2.718281828459045\t7.38905609893065\t7.38905609893065\t\nthe\t7.38905609893065\t7.38905609893065\t2.718281828459045\t2.718281828459045\t\nThe\t7.38905609893065\t2.718281828459045\t7.38905609893065\t2.718281828459045\t\nquick\t7.38905609893065\t2.718281828459045\t7.38905609893065\t7.38905609893065\t\nlazy\t7.38905609893065\t2.718281828459045\t7.38905609893065\t2.718281828459045\t\njumps\t20.085536923187668\t7.38905609893065\t2.718281828459045\t2.718281828459045\t\nbrown\t7.38905609893065\t7.38905609893065\t2.718281828459045\t2.718281828459045\t\ndog\t7.38905609893065\t2.718281828459045\t7.38905609893065\t2.718281828459045\t\nfox\t2.718281828459045\t2.718281828459045\t7.38905609893065\t7.38905609893065\t\n", string0);
50:       
51:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
52:       costSensitiveClassifier0.getOnDemandDirectory();
53:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
54:       naiveBayesMultinomialText0.LNormTipText();
55:       naiveBayesMultinomialText3.stopwordsTipText();
56:       String string1 = naiveBayesMultinomialText2.normalizeDocLengthTipText();
57:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);
58:       
59:       naiveBayesMultinomialText3.useStopListTipText();
60:       String string2 = naiveBayesMultinomialText4.tokenizerTipText();
61:       assertEquals("The tokenizing algorithm to use on the strings.", string2);
62:       
63:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
64:       naiveBayesMultinomialText2.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
65:       NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
66:       String string3 = naiveBayesMultinomialText0.stemmerTipText();
67:       assertEquals("The stemming algorithm to use on the words.", string3);
68:       
69:       naiveBayesMultinomialText2.normTipText();
70:       naiveBayesMultinomialText2.useWordFrequenciesTipText();
71:       naiveBayesMultinomialText0.lowercaseTokensTipText();
72:       Random.setNextRandom(9);
73:       String string4 = naiveBayesMultinomialText1.minWordFrequencyTipText();
74:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);
75:       
76:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
77:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
78:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
79:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
80:   }
81: }
RegularFileObject[/tmp/EvoSuite_64_1574196891945/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 20:54:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.core.logging.Logger$Level",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.AdditionalMeasureProducer",
134:       "org.pentaho.packageManagement.PackageManager$1",
135:       "weka.attributeSelection.GreedyStepwise",
136:       "weka.core.Drawable",
137:       "weka.core.matrix.Matrix",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "weka.classifiers.meta.FilteredClassifier",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.supervised.attribute.AttributeSelection",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.PartitionGenerator",
159:       "weka.core.scripting.JythonSerializableObject",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.classifiers.trees.j48.ClassifierTree",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.classifiers.trees.j48.PruneableClassifierTree",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.attributeSelection.ASSearch",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.attributeSelection.StartSetHandler",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.estimators.KernelEstimator",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.classifiers.RandomizableClassifier",
191:       "weka.attributeSelection.RankedOutputSearch",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.core.ProtectedProperties",
196:       "weka.estimators.Estimator",
197:       "weka.core.StringLocator",
198:       "weka.core.Matchable",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.core.UnassignedClassException",
210:       "weka.classifiers.rules.ZeroR",
211:       "weka.core.stemmers.IteratedLovinsStemmer",
212:       "weka.attributeSelection.Ranker",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.core.TechnicalInformation",
215:       "weka.classifiers.Sourcable",
216:       "weka.core.RevisionHandler",
217:       "weka.classifiers.evaluation.output.prediction.PlainText",
218:       "weka.core.neighboursearch.TreePerformanceStats",
219:       "weka.core.xml.XMLSerialization",
220:       "weka.classifiers.xml.XMLClassifier",
221:       "weka.filters.Filter",
222:       "weka.filters.supervised.attribute.Discretize"
223:     );
224:   } 
225: 
226:   private static void resetClasses() {
227:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader()); 
228: 
229:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
230:       "weka.classifiers.AbstractClassifier",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
233:       "weka.core.Capabilities$Capability",
234:       "weka.core.tokenizers.Tokenizer",
235:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
236:       "weka.core.tokenizers.WordTokenizer",
237:       "weka.core.stemmers.NullStemmer",
238:       "weka.classifiers.Evaluation",
239:       "weka.core.Utils",
240:       "weka.core.Option",
241:       "weka.classifiers.RandomizableClassifier",
242:       "weka.core.Tag",
243:       "weka.classifiers.functions.SGDText",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.AbstractInstance",
251:       "weka.core.SparseInstance",
252:       "weka.core.BinarySparseInstance",
253:       "weka.core.stemmers.LovinsStemmer",
254:       "weka.core.RevisionUtils",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.BIFReader",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.core.neighboursearch.NearestNeighbourSearch",
264:       "weka.core.neighboursearch.BallTree",
265:       "weka.core.NormalizableDistance",
266:       "weka.core.EuclideanDistance",
267:       "weka.core.Range",
268:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
269:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
270:       "weka.core.neighboursearch.balltrees.BallSplitter",
271:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
272:       "weka.core.DenseInstance",
273:       "weka.core.Attribute",
274:       "weka.core.ProtectedProperties",
275:       "weka.classifiers.bayes.NaiveBayesMultinomial",
276:       "weka.core.TestInstances",
277:       "weka.core.Instances",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.SelectedTag",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.tokenizers.NGramTokenizer",
282:       "weka.core.UnassignedDatasetException",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.WrapperSubsetEval",
285:       "weka.classifiers.rules.ZeroR",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.classifiers.functions.supportVector.Kernel",
288:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.classifiers.SingleClassifierEnhancer",
294:       "weka.classifiers.misc.InputMappedClassifier",
295:       "weka.filters.Filter",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.CoverTree",
298:       "weka.core.TechnicalInformation",
299:       "weka.core.TechnicalInformation$Type",
300:       "weka.core.TechnicalInformation$Field",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.neighboursearch.LinearNNSearch",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.trees.RandomForest",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.attributeSelection.OneRAttributeEval",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.core.WekaEnumeration",
321:       "weka.core.Attribute$1",
322:       "weka.classifiers.CostMatrix",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.core.neighboursearch.balltrees.BallNode",
326:       "weka.classifiers.functions.SGD",
327:       "weka.filters.unsupervised.attribute.Remove",
328:       "weka.filters.supervised.attribute.Discretize",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.trees.J48",
334:       "weka.classifiers.lazy.IBk",
335:       "weka.classifiers.meta.CVParameterSelection",
336:       "weka.core.FastVector",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.trees.DecisionStump",
339:       "weka.classifiers.functions.SMO",
340:       "weka.classifiers.functions.supportVector.CachedKernel",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.MultilayerPerceptron",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
347:       "weka.classifiers.rules.DecisionTable",
348:       "weka.classifiers.trees.RandomTree",
349:       "weka.classifiers.functions.SimpleLogistic",
350:       "weka.classifiers.trees.m5.M5Base",
351:       "weka.classifiers.trees.M5P",
352:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.core.WekaException",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.attributeSelection.CorrelationAttributeEval",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.core.FindWithCapabilities",
363:       "weka.core.SingleIndex",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.Bagging",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.classifiers.rules.PART",
370:       "weka.classifiers.rules.part.MakeDecList",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.classifiers.functions.VotedPerceptron",
373:       "weka.classifiers.trees.LMT",
374:       "weka.classifiers.meta.RandomCommittee",
375:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
376:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.meta.RegressionByDiscretization",
380:       "weka.filters.unsupervised.attribute.Discretize",
381:       "weka.classifiers.trees.j48.ClassifierTree",
382:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
383:       "weka.classifiers.meta.LogitBoost",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.stemmers.Stemming",
386:       "weka.estimators.KernelEstimator",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.rules.OneR",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.core.SerializationHelper",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.core.ManhattanDistance",
395:       "weka.core.Javadoc",
396:       "weka.core.TechnicalInformationHandlerJavadoc",
397:       "weka.classifiers.functions.SMOreg",
398:       "weka.classifiers.functions.supportVector.RegOptimizer",
399:       "weka.classifiers.functions.supportVector.RegSMO",
400:       "weka.classifiers.functions.supportVector.RegSMOImproved",
401:       "weka.classifiers.functions.supportVector.RBFKernel",
402:       "weka.classifiers.meta.MultiClassClassifier",
403:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
404:       "weka.core.AttributeStats",
405:       "weka.classifiers.meta.FilteredClassifier",
406:       "weka.filters.supervised.attribute.AttributeSelection",
407:       "weka.attributeSelection.AttributeSelection",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.estimators.NormalEstimator",
411:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
412:       "weka.core.GlobalInfoJavadoc"
413:     );
414:   }
415: }

[MASTER] 20:54:51.978 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(10000);
naiveBayesMultinomialText1.m_inputVector = linkedHashMap0;
Instances instances1 = new Instances(instances0);
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.buildClassifier(instances0);
assertEquals(0, capabilities0.getMinimumNumberInstances());

FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
String string0 = naiveBayesMultinomialText1.toString();
assertEquals("The independent probability of a class\n--------------------------------------\nclass1\t9.0\nclass2\t4.0\nclass3\t7.0\nclass4\t4.0\n\nThe probability of a word given the class\n-----------------------------------------\n\tclass1\tclass2\tclass3\tclass4\t\nover\t2.718281828459045\t2.718281828459045\t7.38905609893065\t7.38905609893065\t\nthe\t7.38905609893065\t7.38905609893065\t2.718281828459045\t2.718281828459045\t\nThe\t7.38905609893065\t2.718281828459045\t7.38905609893065\t2.718281828459045\t\nquick\t7.38905609893065\t2.718281828459045\t7.38905609893065\t7.38905609893065\t\nlazy\t7.38905609893065\t2.718281828459045\t7.38905609893065\t2.718281828459045\t\njumps\t20.085536923187668\t7.38905609893065\t2.718281828459045\t2.718281828459045\t\nbrown\t7.38905609893065\t7.38905609893065\t2.718281828459045\t2.718281828459045\t\ndog\t7.38905609893065\t2.718281828459045\t7.38905609893065\t2.718281828459045\t\nfox\t2.718281828459045\t2.718281828459045\t7.38905609893065\t7.38905609893065\t\n", string0);

CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
costSensitiveClassifier0.getOnDemandDirectory();
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText3.stopwordsTipText();
String string1 = naiveBayesMultinomialText2.normalizeDocLengthTipText();
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string1);

naiveBayesMultinomialText3.useStopListTipText();
String string2 = naiveBayesMultinomialText4.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string2);

HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText2.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
String string3 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string3);

naiveBayesMultinomialText2.normTipText();
naiveBayesMultinomialText2.useWordFrequenciesTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
Random.setNextRandom(9);
String string4 = naiveBayesMultinomialText1.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);

naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
