* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:20:37.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:20:37.844 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:20:37.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:20:37.876 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
* Search finished after 855s and 33 generations, 28428 statements, best individual has fitness: 2368.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 629
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 608
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 112
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 396
* Generated 196 tests with total length 3389
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:40:28.434 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6670875% of time used, but only 60/196 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
[MASTER] 03:41:50.870 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5241
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:42:23.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:42:23.602 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:42:23.602 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:42:23.622 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 03:42:26.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 03:44:49.223 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:44:49.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 299s and 128 generations, 122957 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 347
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:16:00.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:16:00.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:16:00.063 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:16:00.589 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:16:01.349 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:16:01.350 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:16:02.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:16:02.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:16:02.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:16:02.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:16:02.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:16:02.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:16:02.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:16:02.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:16:02.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:16:02.975 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:16:02.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 04:16:10.583 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 04:17:21.301 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.falsePositiveRate(I)D:Zero
[MASTER] 04:17:21.304 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.falsePositiveRate(I)D
[MASTER] 04:17:21.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.falsePositiveRate(I)D
[MASTER] 04:17:21.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I34 Branch 284 IF_ICMPNE L2979 - true in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:21.308 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I70 Branch 285 IFNE L2986 - false in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:21.309 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I29 Branch 283 IF_ICMPGE L2978 - true in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:21.309 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I29 Branch 283 IF_ICMPGE L2978 - false in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:21.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I20 Branch 282 IF_ICMPEQ L2977 - false in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:21.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I15 Branch 281 IF_ICMPGE L2976 - false in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:21.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.falsePositiveRate(I)D: I15 Branch 281 IF_ICMPGE L2976 - true in context: weka.classifiers.Evaluation:falsePositiveRate(I)D
[MASTER] 04:17:38.325 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:19:57.079 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.evaluateModelOnce([DLweka/core/Instance;)D
[MASTER] 04:19:57.089 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce([DLweka/core/Instance;)D
[MASTER] 04:25:50.400 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;[Ljava/lang/String;)Ljava/lang/String;
* Search finished after 843s and 95 generations, 75402 statements, best individual has fitness: 14960.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 818
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 357
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 268
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 348
* Generated 107 tests with total length 2447
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 04:35:53.737 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7088875% of time used, but only 49/107 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 04:36:22.976 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:36:23.083 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:36:23.260 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:36:23.261 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 04:36:23.929 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 04:36:24.688 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5238
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5240
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 04:37:22.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:37:22.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:37:22.855 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:37:23.905 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:37:24.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:37:24.309 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 04:37:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 04:38:27.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 609
[MASTER] 04:38:27.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 610
[MASTER] 04:38:27.167 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch
[MASTER] 04:38:27.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 215: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp Negation of d
[MASTER] 04:38:27.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 216: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC 1 d
[MASTER] 04:38:27.192 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 217: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC -1 d
[MASTER] 04:38:27.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 04:38:27.202 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 04:38:27.205 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setCheckErrorRate(Z)V
[MASTER] 04:40:09.809 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 04:49:01.580 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 843s and 77 generations, 95561 statements, best individual has fitness: 3312.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 217
* Number of covered goals: 181
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 428
* Number of covered goals: 267
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 260
* Number of covered goals: 215
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 428
* Number of covered goals: 266
* Generated 53 tests with total length 1000
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 842s and 230 generations, 232796 statements, best individual has fitness: 12616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 253
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 553
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 76 tests with total length 1644
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 04:53:32.644 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:53:33.619 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5240
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:12:44.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:12:44.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:12:44.025 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:12:44.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:12:44.111 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:12:44.137 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 05:13:11.630 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 05:26:24.049 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 842s and 185 generations, 197999 statements, best individual has fitness: 5256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 370
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 134
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 713
* Number of covered goals: 429
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 134
* Generated 68 tests with total length 1733
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 05:29:16.992 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:29:17.312 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:29:26.514 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:29:26.516 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String[] stringArray0 = new String[6];
stringArray0[0] = "'B2of2'";
stringArray0[1] = "";
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte)33;
byteArray0[1] = (byte) (-1);
byteArray0[3] = (byte)33;
byteArray0[4] = (byte)33;
byteArray0[5] = (byte) (-63);
byteArray0[6] = (byte)33;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("'B2of2'", arrayList0, 0);
Discretize discretize0 = new Discretize();
Discretize discretize1 = new Discretize();
LinkedList<String> linkedList0 = new LinkedList<String>();
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
LinkedList<String> linkedList1 = new LinkedList<String>();
linkedList0.add("'B2of2'");
Attribute attribute0 = new Attribute("", instances0);
arrayList0.add(attribute0);
Filter.runFilter(discretize0, stringArray0);
discretize1.setInputFormat(instances0);

[MASTER] 05:29:30.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:29:30.534 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Object object0 = new Object();
Object[] objectArray0 = new Object[8];
objectArray0[0] = (Object) "AH4c;";
objectArray0[2] = (Object) "AH4c;";
ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList2 = new ArrayList<String>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) arrayList2, locale_FilteringMode0);
Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) list0, locale_FilteringMode1);
Attribute attribute0 = new Attribute("18,18", "18,18");
Instances instances0 = new Instances("?](=gf)!9ml+z", arrayList0, 1024);
Attribute attribute1 = new Attribute("weka.filters.unsupervised.attribute.Discretize", instances0);
arrayList0.add(attribute1);
Discretize discretize0 = new Discretize();
Instances instances1 = new Instances("p=E:7", arrayList0, 62);
instances0.enumerateInstances();
instances0.delete();
attribute0.setStringValue("Info (ints): ");
discretize0.setInputFormat(instances1);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5243
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:38:22.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:38:22.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:38:22.342 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:38:22.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:38:22.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:38:22.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 05:38:26.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 108
[MASTER] 05:38:26.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 148
[MASTER] 05:38:26.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 151
[MASTER] 05:38:26.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 157
[MASTER] 05:38:26.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 166
[MASTER] 05:38:26.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 169
[MASTER] 05:38:26.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 172
[MASTER] 05:38:26.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 175
[MASTER] 05:38:26.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 178
[MASTER] 05:38:26.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 181
[MASTER] 05:38:26.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 184
[MASTER] 05:38:26.686 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch
[MASTER] 05:38:26.709 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 05:38:26.709 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 05:38:26.710 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:<init>()V
[MASTER] 05:38:27.705 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 724
[MASTER] 05:38:27.705 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 725
[MASTER] 05:38:27.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch
[MASTER] 05:38:27.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 05:38:27.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 05:38:27.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 291: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_useStopList
[MASTER] 05:38:27.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 05:38:27.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 293: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp Negation of norm
[MASTER] 05:38:27.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 294: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC 1 norm
[MASTER] 05:38:27.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 295: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC -1 norm
[MASTER] 05:38:27.760 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 05:38:27.761 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 05:38:27.763 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setNormalizeDocLength(Z)V
[MASTER] 05:42:02.820 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 05:42:02.820 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 843s and 61 generations, 63873 statements, best individual has fitness: 2112.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 338
* Number of covered goals: 289
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 194
* Number of covered goals: 146
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 422
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 112
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 194
* Number of covered goals: 143
* Generated 56 tests with total length 1208
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 42%
[MASTER] 06:00:32.562 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 06:00:33.670 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1574143232883/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1574143232883/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:33.670 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:33.670 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:33.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:00:33.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:00:33.674 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1574143232883/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:32 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instance;
17: import weka.core.neighboursearch.kdtrees.KDTreeNode;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_0_tmp__ESTest extends NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.211667659113366
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.setUseStopList(true);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       naiveBayesMultinomialText0.normTipText();
33:       naiveBayesMultinomialText0.debugTipText();
34:       naiveBayesMultinomialText0.periodicPruningTipText();
35:       naiveBayesMultinomialText0.useStopListTipText();
36:       try { 
37:         naiveBayesMultinomialText0.distributionForInstance((Instance) null);
38:         fail("Expecting exception: NullPointerException");
39:       
40:       } catch(NullPointerException e) {
41:          //
42:          // no message in exception (getMessage() returned null)
43:          //
44:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_0_1574143232883/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:32 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:33.675 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.debugTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.distributionForInstance((Instance) null);

[MASTER] 06:00:33.995 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1574143233868/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1574143233868/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:33.995 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:33.995 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:33.996 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 06:00:33.996 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 06:00:33.996 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:00:33.996 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1574143233868/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:33 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_2_tmp__ESTest extends NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.6298718780844146
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       String[] stringArray0 = new String[8];
29:       naiveBayesMultinomialText0.setMinWordFrequency(17.0);
30:       stringArray0[0] = "";
31:       stringArray0[1] = "fHU 4@U:";
32:       stringArray0[2] = "";
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       stringArray0[3] = "";
36:       stringArray0[4] = "";
37:       stringArray0[5] = "say";
38:       stringArray0[6] = "";
39:       stringArray0[7] = "";
40:       naiveBayesMultinomialText0.setOptions(stringArray0);
41:       naiveBayesMultinomialText0.listOptions();
42:       assertEquals(17.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_2_1574143233868/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:33 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:33.997 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[8];
naiveBayesMultinomialText0.setMinWordFrequency(17.0);
stringArray0[0] = "";
stringArray0[1] = "fHU 4@U:";
stringArray0[2] = "";
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
stringArray0[3] = "";
stringArray0[4] = "";
stringArray0[5] = "say";
stringArray0[6] = "";
stringArray0[7] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.listOptions();
assertEquals(17.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 06:00:34.314 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1574143234276/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1574143234276/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:34.314 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:34.314 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:34.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 06:00:34.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 06:00:34.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 06:00:34.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 06:00:34.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 50
[MASTER] 06:00:34.315 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1574143234276/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:34 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.Random;
14: import org.evosuite.runtime.System;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.rules.OneR;
18: import weka.core.stemmers.NullStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_6_tmp__ESTest extends NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.6259299632878244
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
31:       naiveBayesMultinomialText0.setOptions(stringArray0);
32:       OneR oneR0 = new OneR();
33:       oneR0.getCapabilities();
34:       naiveBayesMultinomialText0.setPeriodicPruning(2049870754);
35:       naiveBayesMultinomialText0.getCapabilities();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText1.pruneDictionary();
38:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
39:       naiveBayesMultinomialText1.LNormTipText();
40:       NullStemmer nullStemmer0 = (NullStemmer)naiveBayesMultinomialText0.m_stemmer;
41:       naiveBayesMultinomialText1.setStemmer(nullStemmer0);
42:       naiveBayesMultinomialText0.minWordFrequencyTipText();
43:       naiveBayesMultinomialText0.useStopListTipText();
44:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       Integer integer0 = new Integer(1445);
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       linkedHashMap0.put(integer0, linkedHashMap1);
48:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
49:       Integer integer1 = new Integer(1431655765);
50:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
51:       naiveBayesMultinomialText0.stopwordsTipText();
52:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
53:       naiveBayesMultinomialText1.lowercaseTokensTipText();
54:       naiveBayesMultinomialText0.minWordFrequencyTipText();
55:       naiveBayesMultinomialText0.getStopwords();
56:       System.setCurrentTimeMillis(1L);
57:       Random.setNextRandom(1078);
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_6_1574143234276/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:34 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:34.317 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
OneR oneR0 = new OneR();
oneR0.getCapabilities();
naiveBayesMultinomialText0.setPeriodicPruning(2049870754);
naiveBayesMultinomialText0.getCapabilities();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.pruneDictionary();
naiveBayesMultinomialText1.useWordFrequenciesTipText();
naiveBayesMultinomialText1.LNormTipText();
NullStemmer nullStemmer0 = (NullStemmer)naiveBayesMultinomialText0.m_stemmer;
naiveBayesMultinomialText1.setStemmer(nullStemmer0);
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.useStopListTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(1445);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
Integer integer1 = new Integer(1431655765);
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.stopwordsTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.lowercaseTokensTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.getStopwords();
System.setCurrentTimeMillis(1L);
Random.setNextRandom(1078);

[MASTER] 06:00:34.586 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_10_1574143234532/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_10_1574143234532/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:34.586 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:34.586 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:34.587 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 06:00:34.587 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_10_1574143234532/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:34 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.SparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_10_tmp__ESTest extends NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.2961346570528898
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       double[] doubleArray0 = new double[1];
30:       doubleArray0[0] = (double) (-1);
31:       int[] intArray0 = new int[9];
32:       intArray0[0] = (-2870);
33:       intArray0[1] = (-1);
34:       intArray0[2] = (-1);
35:       intArray0[3] = (-1);
36:       intArray0[4] = (-44);
37:       intArray0[5] = (-1);
38:       intArray0[6] = (-2870);
39:       intArray0[7] = (-2870);
40:       intArray0[8] = (-2870);
41:       SparseInstance sparseInstance0 = new SparseInstance((-2870), doubleArray0, intArray0, (-2870));
42:       try { 
43:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
44:         fail("Expecting exception: NullPointerException");
45:       
46:       } catch(NullPointerException e) {
47:          //
48:          // no message in exception (getMessage() returned null)
49:          //
50:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
51:       }
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_10_1574143234532/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:34 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:34.588 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) (-1);
int[] intArray0 = new int[9];
intArray0[0] = (-2870);
intArray0[1] = (-1);
intArray0[2] = (-1);
intArray0[3] = (-1);
intArray0[4] = (-44);
intArray0[5] = (-1);
intArray0[6] = (-2870);
intArray0[7] = (-2870);
intArray0[8] = (-2870);
SparseInstance sparseInstance0 = new SparseInstance((-2870), doubleArray0, intArray0, (-2870));
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);

[MASTER] 06:00:34.619 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1574143234588/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1574143234588/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:34.619 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:34.619 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:34.620 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 06:00:34.621 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1574143234588/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:34 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.SparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.2961346570528898
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       double[] doubleArray0 = new double[1];
30:       doubleArray0[0] = (double) (-1);
31:       int[] intArray0 = new int[9];
32:       intArray0[0] = (-2870);
33:       intArray0[1] = (-1);
34:       intArray0[2] = (-1);
35:       intArray0[3] = (-1);
36:       intArray0[4] = (-44);
37:       intArray0[5] = (-1);
38:       intArray0[6] = (-2870);
39:       intArray0[8] = (-2870);
40:       SparseInstance sparseInstance0 = new SparseInstance((-2870), doubleArray0, intArray0, 0);
41:       try { 
42:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
43:         fail("Expecting exception: NullPointerException");
44:       
45:       } catch(NullPointerException e) {
46:          //
47:          // no message in exception (getMessage() returned null)
48:          //
49:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_11_1574143234588/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:34 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:34.622 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) (-1);
int[] intArray0 = new int[9];
intArray0[0] = (-2870);
intArray0[1] = (-1);
intArray0[2] = (-1);
intArray0[3] = (-1);
intArray0[4] = (-44);
intArray0[5] = (-1);
intArray0[6] = (-2870);
intArray0[8] = (-2870);
SparseInstance sparseInstance0 = new SparseInstance((-2870), doubleArray0, intArray0, 0);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);

[MASTER] 06:00:36.412 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1574143236388/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1574143236388/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:36.412 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:36.412 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:36.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 06:00:36.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 06:00:36.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 06:00:36.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 06:00:36.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 06:00:36.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 06:00:36.414 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1574143236388/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.Random;
14: import org.evosuite.runtime.System;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.rules.OneR;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.881766240540306
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       OneR oneR0 = new OneR();
31:       OneR oneR1 = new OneR();
32:       oneR1.getCapabilities();
33:       naiveBayesMultinomialText0.setPeriodicPruning((-3037));
34:       naiveBayesMultinomialText0.getCapabilities();
35:       naiveBayesMultinomialText0.setLowercaseTokens(false);
36:       naiveBayesMultinomialText0.pruneDictionary();
37:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText1.LNormTipText();
39:       naiveBayesMultinomialText1.minWordFrequencyTipText();
40:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
41:       naiveBayesMultinomialText2.useStopListTipText();
42:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
43:       Integer integer0 = new Integer(2497);
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
45:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap2 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
46:       linkedHashMap2.put(integer0, linkedHashMap1);
47:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
48:       Integer integer1 = new Integer(1073);
49:       linkedHashMap0.put(integer0, linkedHashMap1);
50:       naiveBayesMultinomialText2.stopwordsTipText();
51:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
52:       naiveBayesMultinomialText0.lowercaseTokensTipText();
53:       naiveBayesMultinomialText3.minWordFrequencyTipText();
54:       MockFile.createTempFile("Whether to convert all tokens to lowercase", "Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
55:       System.setCurrentTimeMillis(1406L);
56:       Random.setNextRandom((-3037));
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_25_1574143236388/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:36.415 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
OneR oneR0 = new OneR();
OneR oneR1 = new OneR();
oneR1.getCapabilities();
naiveBayesMultinomialText0.setPeriodicPruning((-3037));
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.pruneDictionary();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.LNormTipText();
naiveBayesMultinomialText1.minWordFrequencyTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.useStopListTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(2497);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap2 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap2.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
Integer integer1 = new Integer(1073);
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText2.stopwordsTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText3.minWordFrequencyTipText();
MockFile.createTempFile("Whether to convert all tokens to lowercase", "Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
System.setCurrentTimeMillis(1406L);
Random.setNextRandom((-3037));

[MASTER] 06:00:37.090 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1574143237069/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1574143237069/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:37.090 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.090 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.090 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 06:00:37.091 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1574143237069/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.AbstractClassifier;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.9808671170936414
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String[] stringArray0 = new String[3];
31:       byte[] byteArray0 = new byte[1];
32:       byteArray0[0] = (byte)16;
33:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
34:       stringArray0[0] = "NAG7li3";
35:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
36:       naiveBayesMultinomialText0.setStopwords((File) null);
37:       stringArray0[1] = "_k";
38:       naiveBayesMultinomialText0.listOptions();
39:       stringArray0[2] = "~";
40:       naiveBayesMultinomialText0.getOptions();
41:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
42:       naiveBayesMultinomialText0.m_inputVector = null;
43:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
44:       naiveBayesMultinomialText0.getPeriodicPruning();
45:       naiveBayesMultinomialText0.minWordFrequencyTipText();
46:       naiveBayesMultinomialText0.normTipText();
47:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_39_1574143237069/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:37.091 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[3];
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)16;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
stringArray0[0] = "NAG7li3";
naiveBayesMultinomialText0.m_lowercaseTokens = true;
naiveBayesMultinomialText0.setStopwords((File) null);
stringArray0[1] = "_k";
naiveBayesMultinomialText0.listOptions();
stringArray0[2] = "~";
naiveBayesMultinomialText0.getOptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.normTipText();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 06:00:37.137 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1574143237092/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1574143237092/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:37.137 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.137 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.138 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 06:00:37.139 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1574143237092/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.885677722974239
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.getCapabilities();
29:       naiveBayesMultinomialText0.m_periodicP = 609;
30:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
32:       naiveBayesMultinomialText0.m_inputVector = null;
33:       naiveBayesMultinomialText0.m_norm = (-4.57826535);
34:       naiveBayesMultinomialText0.getNormalizeDocLength();
35:       naiveBayesMultinomialText0.setUseWordFrequencies(false);
36:       naiveBayesMultinomialText0.LNormTipText();
37:       naiveBayesMultinomialText0.tokenizerTipText();
38:       String[] stringArray0 = new String[2];
39:       stringArray0[0] = "weka/core/Capabilities.props";
40:       stringArray0[1] = "weka/core/Capabilities.props";
41:       naiveBayesMultinomialText0.setOptions(stringArray0);
42:       try { 
43:         naiveBayesMultinomialText0.updateClassifier((Instance) null, false);
44:         fail("Expecting exception: NullPointerException");
45:       
46:       } catch(NullPointerException e) {
47:          //
48:          // no message in exception (getMessage() returned null)
49:          //
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_40_1574143237092/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:37.140 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.m_periodicP = 609;
naiveBayesMultinomialText0.setNormalizeDocLength(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.m_norm = (-4.57826535);
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.setUseWordFrequencies(false);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.tokenizerTipText();
String[] stringArray0 = new String[2];
stringArray0[0] = "weka/core/Capabilities.props";
stringArray0[1] = "weka/core/Capabilities.props";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.updateClassifier((Instance) null, false);

[MASTER] 06:00:37.437 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_47_1574143237387/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_47_1574143237387/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:37.437 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.437 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.437 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:00:37.438 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_47_1574143237387/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.SparseInstance;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_47_tmp__ESTest extends NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.631353359565896
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setUseStopList(true);
28:       double[] doubleArray0 = new double[8];
29:       int[] intArray0 = new int[6];
30:       intArray0[0] = 2048;
31:       intArray0[1] = (-1);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
33:       naiveBayesMultinomialText0.m_inputVector = null;
34:       intArray0[2] = 1454;
35:       intArray0[3] = 2048;
36:       intArray0[4] = (-1);
37:       intArray0[5] = 2048;
38:       SparseInstance sparseInstance0 = new SparseInstance(2048, doubleArray0, intArray0, (-2870));
39:       double[] doubleArray1 = naiveBayesMultinomialText0.m_wordsPerClass;
40:       naiveBayesMultinomialText0.getUseStopList();
41:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
42:       
43:       String[] stringArray0 = new String[6];
44:       stringArray0[0] = "}mf:o*!>=`amt";
45:       stringArray0[1] = "Incremental version of the algorithm.";
46:       stringArray0[2] = "==]!ZG";
47:       stringArray0[3] = "prc-wD@PY/\"";
48:       stringArray0[4] = "TECHREPORT";
49:       stringArray0[5] = "";
50:       naiveBayesMultinomialText0.setOptions(stringArray0);
51:       String string0 = naiveBayesMultinomialText0.periodicPruningTipText();
52:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_47_1574143237387/weka/classifiers/bayes/NaiveBayesMultinomialText_47_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_47_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:37.439 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(true);
double[] doubleArray0 = new double[8];
int[] intArray0 = new int[6];
intArray0[0] = 2048;
intArray0[1] = (-1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
intArray0[2] = 1454;
intArray0[3] = 2048;
intArray0[4] = (-1);
intArray0[5] = 2048;
SparseInstance sparseInstance0 = new SparseInstance(2048, doubleArray0, intArray0, (-2870));
double[] doubleArray1 = naiveBayesMultinomialText0.m_wordsPerClass;
naiveBayesMultinomialText0.getUseStopList();
assertTrue(naiveBayesMultinomialText0.getUseStopList());

String[] stringArray0 = new String[6];
stringArray0[0] = "}mf:o*!>=`amt";
stringArray0[1] = "Incremental version of the algorithm.";
stringArray0[2] = "==]!ZG";
stringArray0[3] = "prc-wD@PY/\"";
stringArray0[4] = "TECHREPORT";
stringArray0[5] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);
String string0 = naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);


[MASTER] 06:00:37.644 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1574143237618/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1574143237618/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:37.644 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.644 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:00:37.645 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1574143237618/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.9594045983154569
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       boolean boolean0 = true;
30:       naiveBayesMultinomialText0.setUseStopList(true);
31:       int[] intArray0 = new int[6];
32:       intArray0[0] = 2048;
33:       intArray0[1] = (-1);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
35:       naiveBayesMultinomialText0.m_inputVector = null;
36:       String[] stringArray0 = new String[2];
37:       stringArray0[0] = "-lnorm";
38:       stringArray0[1] = "weka.classifiers.bayes.NaiveBayesMultinomialText";
39:       try { 
40:         naiveBayesMultinomialText0.setOptions(stringArray0);
41:         fail("Expecting exception: NumberFormatException");
42:       
43:       } catch(NumberFormatException e) {
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_51_1574143237618/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:37.645 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
boolean boolean0 = true;
naiveBayesMultinomialText0.setUseStopList(true);
int[] intArray0 = new int[6];
intArray0[0] = 2048;
intArray0[1] = (-1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
String[] stringArray0 = new String[2];
stringArray0[0] = "-lnorm";
stringArray0[1] = "weka.classifiers.bayes.NaiveBayesMultinomialText";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 06:00:37.823 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_55_1574143237797/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_55_1574143237797/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.java]]
[MASTER] 06:00:37.823 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.823 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:00:37.823 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:00:37.823 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:00:37.824 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_55_1574143237797/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 06:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
19: import weka.core.Instance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_55_tmp__ESTest extends NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.8911601612408218
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.setUseStopList(true);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
34:       naiveBayesMultinomialText0.getTokenizer();
35:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
36:       File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
37:       File file1 = MockFile.createTempFile("zFE1k{Q(", "_", file0);
38:       naiveBayesMultinomialText0.m_stopwordsFile = file1;
39:       try { 
40:         naiveBayesMultinomialText0.distributionForInstance((Instance) null);
41:         fail("Expecting exception: NullPointerException");
42:       
43:       } catch(NullPointerException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_55_1574143237797/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 06:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.BinarySparseInstance",
125:       "weka.core.AttributeLocator",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.stemmers.LovinsStemmer",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.classifiers.functions.SMO",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.core.tokenizers.NGramTokenizer",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.classifiers.functions.supportVector.PolyKernel",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.filters.unsupervised.attribute.Remove",
194:       "weka.core.Randomizable",
195:       "weka.classifiers.functions.SGD",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.classifiers.rules.OneR",
199:       "weka.filters.unsupervised.attribute.Normalize",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.classifiers.rules.OneR$OneRRule",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter"
214:     );
215:   } 
216: 
217:   private static void resetClasses() {
218:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader()); 
219: 
220:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
221:       "weka.classifiers.AbstractClassifier",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
224:       "weka.core.Capabilities$Capability",
225:       "weka.core.tokenizers.Tokenizer",
226:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
227:       "weka.core.tokenizers.WordTokenizer",
228:       "weka.core.stemmers.NullStemmer",
229:       "weka.core.Utils",
230:       "weka.core.AbstractInstance",
231:       "weka.core.SparseInstance",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.classifiers.Evaluation",
234:       "weka.core.Option",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.BinarySparseInstance",
242:       "weka.core.UnassignedDatasetException",
243:       "weka.core.stemmers.SnowballStemmer",
244:       "weka.core.Tag",
245:       "weka.classifiers.lazy.IBk",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.LinearNNSearch",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.core.TestInstances",
259:       "weka.core.Attribute",
260:       "weka.core.ProtectedProperties",
261:       "weka.core.DenseInstance",
262:       "weka.core.tokenizers.NGramTokenizer",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.functions.SimpleLogistic",
270:       "weka.core.RevisionUtils",
271:       "weka.core.TechnicalInformation",
272:       "weka.core.TechnicalInformation$Type",
273:       "weka.core.TechnicalInformation$Field",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.core.SerializedObject",
276:       "weka.classifiers.RandomizableClassifier",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.stemmers.LovinsStemmer",
284:       "weka.core.stemmers.IteratedLovinsStemmer",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.classifiers.misc.InputMappedClassifier",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Stopwords",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.core.neighboursearch.KDTree",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
296:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
300:       "weka.classifiers.meta.Vote",
301:       "weka.core.WekaException",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.classifiers.rules.OneR",
304:       "weka.core.converters.ArffLoader$ArffReader",
305:       "weka.classifiers.bayes.net.BIFReader",
306:       "weka.classifiers.lazy.KStar",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.SelectedTag",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.CachedKernel",
314:       "weka.classifiers.functions.supportVector.Puk",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
316:       "weka.core.stemmers.Stemming",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.core.neighboursearch.TreePerformanceStats",
321:       "weka.core.FindWithCapabilities",
322:       "weka.core.SingleIndex",
323:       "weka.core.ClassDiscovery",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.rules.PART",
328:       "weka.classifiers.rules.part.MakeDecList",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.IteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.LogitBoost",
333:       "weka.classifiers.trees.DecisionStump",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.classifiers.rules.OneR$OneRRule",
337:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Stacking",
340:       "weka.core.Check",
341:       "weka.core.CheckGOE",
342:       "weka.core.CheckOptionHandler",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.core.Javadoc",
350:       "weka.core.OptionHandlerJavadoc",
351:       "weka.core.ChebyshevDistance",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.functions.SMO",
354:       "weka.filters.AllFilter",
355:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
356:       "weka.classifiers.bayes.NaiveBayesUpdateable",
357:       "weka.classifiers.meta.CVParameterSelection",
358:       "weka.core.FastVector",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomSubSpace",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.AttributeSelection",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.ASSearch",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.attributeSelection.BestFirst",
370:       "weka.classifiers.trees.RandomTree",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.attributeSelection.InfoGainAttributeEval",
375:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
376:       "weka.filters.SimpleFilter",
377:       "weka.filters.SimpleStreamFilter",
378:       "weka.filters.MultiFilter",
379:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
380:       "weka.classifiers.meta.AttributeSelectedClassifier",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.ReliefFAttributeEval"
383:     );
384:   }
385: }

[MASTER] 06:00:37.825 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.getTokenizer();
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
File file1 = MockFile.createTempFile("zFE1k{Q(", "_", file0);
naiveBayesMultinomialText0.m_stopwordsFile = file1;
naiveBayesMultinomialText0.distributionForInstance((Instance) null);

[MASTER] 06:00:51.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 06:00:51.871 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getStopwords();
SGDText sGDText0 = new SGDText();
File file0 = sGDText0.getStopwords();
MockFile mockFile0 = new MockFile("The tokenizing algorithm to use on the strings.");
File file1 = mockFile0.getCanonicalFile();
naiveBayesMultinomialText0.stopwordsTipText();
MockFile mockFile1 = new MockFile("d`uD5;, |E9{A4Bz", "xL_H yzM");
mockFile1.getCanonicalFile();
MockFile.createTempFile("d`uD5;, |E9{A4Bz", "9QOFh", file1);
File file2 = MockFile.createTempFile("d`uD5;, |E9{A4Bz", "d`uD5;, |E9{A4Bz", (File) mockFile1);
MockFile mockFile2 = new MockFile(file1, "9QOFh");
file0.toURI();
naiveBayesMultinomialText0.setStopwords(file2);
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.globalInfo();
SparseInstance sparseInstance0 = new SparseInstance(1982292598);

[MASTER] 06:00:53.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 06:00:53.711 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.createFolder(evoSuiteFile0);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
KDTree kDTree0 = new KDTree();
double[][] doubleArray0 = new double[20][3];
double[] doubleArray1 = new double[7];
doubleArray1[0] = (double) 2;
KDTreeNode kDTreeNode0 = new KDTreeNode(2, 1, 1610612736, doubleArray0, doubleArray0);
PrincipalComponents principalComponents0 = new PrincipalComponents();
PrincipalComponents principalComponents1 = new PrincipalComponents();
int[] intArray0 = new int[5];
intArray0[0] = 1;
intArray0[1] = 2045222521;
intArray0[2] = 0;
int int0 = 77;
intArray0[3] = 77;
intArray0[4] = (-783);
principalComponents1.postProcess(intArray0);
naiveBayesMultinomialText0.getMinWordFrequency();
StringReader stringReader0 = new StringReader("n5@;Z2xI~)uk6KCQ.");
BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 1610612736);

* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
