* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21005
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:37:25.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:37:25.816 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:37:25.817 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:37:26.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:37:26.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:37:26.820 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:37:28.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 12:37:28.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 12:37:28.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 12:37:28.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 12:37:28.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 12:37:28.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 12:37:28.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 12:37:28.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 12:37:28.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 12:37:28.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 12:37:28.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 12:37:31.126 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 12:37:37.030 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 845s and 86 generations, 82399 statements, best individual has fitness: 15400.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 793
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 349
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 424
* Number of covered goals: 257
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 334
* Generated 122 tests with total length 3247
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
[MASTER] 12:59:42.207 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 12:59:49.044 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:59:49.180 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:59:49.320 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:59:49.320 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 13:00:40.583 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 13:00:40.584 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TextDirectoryLoader textDirectoryLoader0 = new TextDirectoryLoader();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
TextDirectoryLoader textDirectoryLoader1 = new TextDirectoryLoader();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
FileSystemHandling.createFolder((EvoSuiteFile) null);
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
textDirectoryLoader1.getDataSet();
TestInstances testInstances0 = new TestInstances();
testInstances0.generate();
ZeroR zeroR0 = new ZeroR();
Evaluation.wekaStaticWrapper(zeroR0, ".arff");
int int0 = (-1474);
PipedReader pipedReader0 = new PipedReader(1112551770);

* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21004
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:00:48.392 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:00:48.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:00:48.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:00:48.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
* Search finished after 854s and 28 generations, 35398 statements, best individual has fitness: 2592.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 612
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 407
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 616
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 111
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 386
* Generated 172 tests with total length 3947
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:20:41.953 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6794625% of time used, but only 67/172 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 13:21:15.221 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_31_1574169675178/weka/experiment/ResultMatrix_31_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_31_1574169675178/weka/experiment/ResultMatrix_31_tmp__ESTest_scaffolding.java]]
[MASTER] 13:21:15.221 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:21:15.221 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:21:15.224 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable int1
  location: class weka.experiment.ResultMatrix_31_tmp__ESTest: 43
[MASTER] 13:21:15.224 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_31_1574169675178/weka/experiment/ResultMatrix_31_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 13:21:15 GMT 2019
4:  */
5: 
6: package weka.experiment;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.experiment.ResultMatrix;
14: import weka.experiment.ResultMatrixCSV;
15: import weka.experiment.ResultMatrixLatex;
16: import weka.experiment.ResultMatrixPlainText;
17: import weka.experiment.ResultMatrixSignificance;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class ResultMatrix_31_tmp__ESTest extends ResultMatrix_31_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.539808378243972
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
29:       resultMatrixSignificance0.setMeanPrec(2);
30:       resultMatrixSignificance0.getDefaultPrintRowNames();
31:       ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 50);
32:       resultMatrixSignificance0.setPrintColNames(true);
33:       resultMatrixPlainText0.setColNameWidth(0);
34:       ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
35:       resultMatrixLatex0.clear();
36:       resultMatrixSignificance0.getVisibleColCount();
37:       resultMatrixSignificance0.getPrintColNames();
38:       ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
39:       resultMatrixPlainText0.getMean((-2305), 661);
40:       resultMatrixSignificance0.getDefaultRowNameWidth();
41:       resultMatrixSignificance0.getRowNameWidth();
42:       int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
43:       assertFalse(int0 == int1);
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_31_1574169675178/weka/experiment/ResultMatrix_31_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 13:21:15 GMT 2019
5:  */
6: 
7: package weka.experiment;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ResultMatrix_31_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.experiment.ResultMatrix"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ResultMatrix_31_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.experiment.ResultMatrixCSV",
89:       "weka.core.OptionHandler",
90:       "weka.experiment.ResultMatrixPlainText",
91:       "weka.experiment.ResultMatrixLatex",
92:       "weka.experiment.ResultMatrixSignificance",
93:       "weka.experiment.ResultMatrix",
94:       "weka.experiment.ResultMatrixHTML",
95:       "weka.core.RevisionUtils",
96:       "weka.core.Option",
97:       "weka.core.Version",
98:       "weka.experiment.ResultMatrixGnuPlot",
99:       "weka.core.Utils",
100:       "weka.core.RevisionHandler"
101:     );
102:   } 
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ResultMatrix_31_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "weka.experiment.ResultMatrix",
109:       "weka.experiment.ResultMatrixPlainText",
110:       "weka.experiment.ResultMatrixLatex",
111:       "weka.experiment.ResultMatrixGnuPlot",
112:       "weka.experiment.ResultMatrixSignificance",
113:       "weka.core.Utils",
114:       "weka.experiment.ResultMatrixCSV",
115:       "weka.experiment.ResultMatrixHTML",
116:       "weka.core.RevisionUtils",
117:       "weka.core.Version",
118:       "weka.core.Option"
119:     );
120:   }
121: }

[MASTER] 13:21:15.225 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
resultMatrixSignificance0.setMeanPrec(2);
resultMatrixSignificance0.getDefaultPrintRowNames();
ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 50);
resultMatrixSignificance0.setPrintColNames(true);
resultMatrixPlainText0.setColNameWidth(0);
ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
resultMatrixLatex0.clear();
resultMatrixSignificance0.getVisibleColCount();
resultMatrixSignificance0.getPrintColNames();
ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
resultMatrixPlainText0.getMean((-2305), 661);
resultMatrixSignificance0.getDefaultRowNameWidth();
resultMatrixSignificance0.getRowNameWidth();
int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
assertFalse(int0 == int1);


[MASTER] 13:22:09.848 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21003
* Connecting to master process on port 21002
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:22:47.264 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:22:47.267 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:22:47.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:22:47.368 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:22:47.372 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:22:47.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 13:22:47.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:22:47.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:22:47.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
[MASTER] 13:22:47.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:22:47.925 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:22:47.925 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
[MASTER] 13:22:49.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getBins()I: Line 631
[MASTER] 13:22:49.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;: Line 1195
[MASTER] 13:22:49.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getBins()I: root-Branch
[MASTER] 13:22:49.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 13:22:49.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 251: weka.filters.unsupervised.attribute.Discretize.getBins()I:631 - InsertUnaryOp Negation
[MASTER] 13:22:49.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 252: weka.filters.unsupervised.attribute.Discretize.getBins()I:631 - InsertUnaryOp +1
[MASTER] 13:22:49.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 253: weka.filters.unsupervised.attribute.Discretize.getBins()I:631 - InsertUnaryOp -1
[MASTER] 13:22:49.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1110: weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;:1195 - ReplaceConstant - $Revision: 8964 $ -> 
[MASTER] 13:22:49.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.filters.unsupervised.attribute.Discretize.getBins()I:Positive
[MASTER] 13:22:49.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 13:22:49.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.getBins()I
[MASTER] 13:22:49.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;
[MASTER] 13:22:49.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.getBins()I
[MASTER] 13:22:49.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;
[MASTER] 13:22:49.845 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:getRevision()Ljava/lang/String;
[MASTER] 13:22:49.846 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getBins()I: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:getBins()I
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 13:22:50.578 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 13:22:50.578 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 13:22:52.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 527
[MASTER] 13:22:52.122 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 13:22:52.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 828
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 829
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 831
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 832
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 834
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 961
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 963
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 965
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 967
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 968
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 971
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 972
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 976
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 978
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 979
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 982
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 983
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 987
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 988
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 990
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 991
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 994
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 997
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 998
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 999
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1012
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1013
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1014
[MASTER] 13:22:52.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1026
[MASTER] 13:22:52.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I26 Branch 51 IFLE L968 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I43 Branch 52 IFLE L972 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I67 Branch 53 IFLE L979 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I84 Branch 54 IFLE L983 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I115 Branch 55 IFLE L991 - true
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I153 Branch 56 IFNE L998 - false
[MASTER] 13:22:52.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I236 Branch 59 IFNE L1013 - false
[MASTER] 13:22:52.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 242: weka.classifiers.bayes.NaiveBayesMultinomialText.setTokenizer(Lweka/core/tokenizers/Tokenizer;)V:555 - ReplaceVariable value -> m_tokenizer
[MASTER] 13:22:52.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 260: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_lowercaseTokens
[MASTER] 13:22:52.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 13:22:52.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 13:22:52.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 13:22:52.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 336: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 13:22:52.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 337: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceComparisonOperator != null -> = null
[MASTER] 13:22:52.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 338: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:829 - ReplaceConstant - user.dir -> 
[MASTER] 13:22:52.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 339: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:831 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 13:22:52.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 13:22:52.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 13:22:52.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 383: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:965 - ReplaceConstant - W -> 
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 384: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:967 - ReplaceConstant - P -> 
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 387: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:968 - ReplaceComparisonOperator <= -> <
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 388: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:971 - ReplaceConstant - M -> 
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 392: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:972 - ReplaceComparisonOperator <= -> <
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 394: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:976 - ReplaceConstant - normalize -> 
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 395: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:978 - ReplaceConstant - norm -> 
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 400: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:979 - ReplaceComparisonOperator <= -> <
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 403: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:982 - ReplaceConstant - lnorm -> 
[MASTER] 13:22:52.159 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 409: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:983 - ReplaceComparisonOperator <= -> <
[MASTER] 13:22:52.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 413: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:987 - ReplaceConstant - lowercase -> 
[MASTER] 13:22:52.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 414: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:988 - ReplaceConstant - stoplist -> 
[MASTER] 13:22:52.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 415: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:990 - ReplaceConstant - stopwords -> 
[MASTER] 13:22:52.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 422: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:991 - ReplaceComparisonOperator <= -> <
[MASTER] 13:22:52.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I26 Branch 51 IFLE L968 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I153 Branch 56 IFNE L998 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I115 Branch 55 IFLE L991 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I84 Branch 54 IFLE L983 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I67 Branch 53 IFLE L979 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.185 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I236 Branch 59 IFNE L1013 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:52.185 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I43 Branch 52 IFLE L972 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 13:22:55.509 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 13:22:55.511 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: Line 666
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1034
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1036
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1039
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1040
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1042
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1045
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1046
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1047
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1050
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1053
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1057
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1058
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1059
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1060
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1062
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1064
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1065
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1066
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1067
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1071
[MASTER] 13:22:55.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1074
[MASTER] 13:22:55.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 13:22:55.526 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: root-Branch
[MASTER] 13:22:55.534 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false
[MASTER] 13:22:55.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true
[MASTER] 13:22:55.538 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 13:22:55.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 273: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp Negation
[MASTER] 13:22:55.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 274: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp +1
[MASTER] 13:22:55.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 275: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp -1
[MASTER] 13:22:55.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 423: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1036 - ReplaceComparisonOperator == -> !=
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 425: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1039 - ReplaceConstant - -P -> 
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 426: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1040 - ReplaceConstant - -M -> 
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 427: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1042 - ReplaceComparisonOperator == -> !=
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1045 - ReplaceConstant - -norm -> 
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1046 - ReplaceConstant - -lnorm -> 
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1047 - ReplaceComparisonOperator == -> !=
[MASTER] 13:22:55.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1050 - ReplaceComparisonOperator == -> !=
[MASTER] 13:22:55.556 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 13:22:55.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.559 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.567 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:55.568 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 13:22:58.002 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: Line 780
[MASTER] 13:22:58.003 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 13:22:58.004 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: Line 843
[MASTER] 13:22:58.022 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: root-Branch
[MASTER] 13:22:58.038 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: root-Branch
[MASTER] 13:22:58.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 13:22:58.059 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 313: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_norm
[MASTER] 13:22:58.059 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 314: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_minWordP
[MASTER] 13:22:58.060 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_t
[MASTER] 13:22:58.061 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 316: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_leplace
[MASTER] 13:22:58.061 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 317: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - InsertUnaryOp Negation
[MASTER] 13:22:58.062 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 13:26:21.937 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 13:29:38.964 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 13:29:57.896 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 13:30:35.103 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 614s and 369 generations, 287539 statements, best individual has fitness: 7968.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 370
* Number of covered goals: 164
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 79
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 296
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 79
* Generated 59 tests with total length 1287
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 13:34:23.436 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:34:23.782 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 842s and 89 generations, 91264 statements, best individual has fitness: 1664.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 157
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 440
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 112
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 155
* Generated 65 tests with total length 1319
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 13:41:53.575 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1574170913511/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1574170913511/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.java]]
[MASTER] 13:41:53.577 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:53.577 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:53.581 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 13:41:53.581 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1574170913511/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 13:41:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.AbstractClassifier;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.bayes.NaiveBayesMultinomialUpdateable;
19: import weka.classifiers.functions.SGDText;
20: import weka.core.BinarySparseInstance;
21: import weka.core.stemmers.Stemmer;
22: import weka.filters.supervised.attribute.Discretize;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_4_tmp__ESTest extends NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=3.2696544884954752
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
35:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
36:       SGDText sGDText0 = new SGDText();
37:       Stemmer stemmer0 = sGDText0.getStemmer();
38:       naiveBayesMultinomialText0.setStemmer(stemmer0);
39:       naiveBayesMultinomialText0.m_minWordP = 5.0;
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
41:       naiveBayesMultinomialText0.setOptions(stringArray0);
42:       NaiveBayesMultinomialUpdateable naiveBayesMultinomialUpdateable0 = new NaiveBayesMultinomialUpdateable();
43:       AbstractClassifier.runClassifier(naiveBayesMultinomialUpdateable0, stringArray0);
44:       byte[] byteArray0 = new byte[7];
45:       byteArray0[0] = (byte) (-36);
46:       byteArray0[1] = (byte)0;
47:       byteArray0[2] = (byte)11;
48:       byteArray0[3] = (byte) (-36);
49:       byteArray0[4] = (byte) (-36);
50:       int[] intArray0 = new int[2];
51:       intArray0[0] = Integer.MAX_VALUE;
52:       intArray0[1] = (int) (byte)11;
53:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-825), intArray0, 22);
54:       Discretize discretize0 = new Discretize();
55:       // Undeclared exception!
56:       try { 
57:         discretize0.outputPeek();
58:         fail("Expecting exception: NullPointerException");
59:       
60:       } catch(NullPointerException e) {
61:          //
62:          // No output instance format defined
63:          //
64:          verifyException("weka.filters.Filter", e);
65:       }
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_4_1574170913511/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 13:41:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "org.bounce.net.DefaultAuthenticator",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.AttributeLocator",
129:       "weka.filters.supervised.attribute.NominalToBinary",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.attributeSelection.BestFirst",
134:       "weka.core.Summarizable",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.attributeSelection.GreedyStepwise",
139:       "weka.core.Drawable",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.classifiers.trees.REPTree",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "weka.classifiers.meta.FilteredClassifier",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.attributeSelection.AttributeSelection",
151:       "weka.classifiers.trees.lmt.ResidualModelSelection",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
159:       "weka.filters.supervised.attribute.AttributeSelection",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.classifiers.Classifier",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.attributeSelection.AttributeTransformer",
168:       "weka.core.tokenizers.WordTokenizer",
169:       "weka.classifiers.misc.SerializedClassifier",
170:       "weka.classifiers.trees.j48.ClassifierTree",
171:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
172:       "weka.attributeSelection.PrincipalComponents",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.classifiers.trees.j48.PruneableClassifierTree",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.attributeSelection.ASSearch",
179:       "weka.core.WekaPackageManager",
180:       "weka.filters.SupervisedFilter",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.classifiers.functions.SimpleLogistic",
183:       "weka.attributeSelection.StartSetHandler",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.classifiers.meta.CostSensitiveClassifier",
186:       "weka.core.Option",
187:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
188:       "weka.core.neighboursearch.PerformanceStats",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.tokenizers.AlphabeticTokenizer",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.classifiers.RandomizableClassifier",
197:       "weka.attributeSelection.RankedOutputSearch",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.core.StringLocator",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.core.neighboursearch.NearestNeighbourSearch",
207:       "weka.filters.unsupervised.attribute.Remove",
208:       "weka.core.Randomizable",
209:       "weka.classifiers.trees.LMT",
210:       "weka.classifiers.functions.SGD",
211:       "weka.core.EuclideanDistance",
212:       "weka.classifiers.meta.AttributeSelectedClassifier",
213:       "weka.core.Instances",
214:       "weka.classifiers.bayes.NaiveBayesMultinomial",
215:       "weka.core.UnassignedClassException",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
218:       "weka.filters.unsupervised.attribute.Standardize",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.Ranker",
221:       "weka.core.UnsupportedAttributeTypeException",
222:       "weka.core.TechnicalInformation",
223:       "weka.classifiers.Sourcable",
224:       "weka.core.RevisionHandler",
225:       "weka.classifiers.evaluation.output.prediction.PlainText",
226:       "weka.core.neighboursearch.TreePerformanceStats",
227:       "weka.core.xml.XMLSerialization",
228:       "weka.classifiers.xml.XMLClassifier",
229:       "weka.filters.Filter",
230:       "weka.filters.supervised.attribute.Discretize"
231:     );
232:   } 
233: 
234:   private static void resetClasses() {
235:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
236: 
237:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
238:       "weka.classifiers.AbstractClassifier",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
240:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
241:       "weka.core.Capabilities$Capability",
242:       "weka.core.tokenizers.Tokenizer",
243:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
244:       "weka.core.tokenizers.WordTokenizer",
245:       "weka.core.stemmers.NullStemmer",
246:       "weka.core.AbstractInstance",
247:       "weka.core.DenseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.Evaluation",
250:       "weka.core.Utils",
251:       "weka.core.Option",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
254:       "weka.core.Tag",
255:       "weka.classifiers.meta.CostSensitiveClassifier",
256:       "weka.classifiers.rules.ZeroR",
257:       "weka.classifiers.CostMatrix",
258:       "weka.core.RevisionUtils",
259:       "weka.core.TestInstances",
260:       "weka.core.Attribute",
261:       "weka.core.ProtectedProperties",
262:       "weka.core.Instances",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.classifiers.lazy.IBk",
271:       "weka.core.neighboursearch.NearestNeighbourSearch",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.core.NormalizableDistance",
274:       "weka.core.EuclideanDistance",
275:       "weka.core.Range",
276:       "weka.filters.Filter",
277:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
278:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.SparseInstance",
282:       "weka.core.BinarySparseInstance",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.OneRAttributeEval",
285:       "weka.attributeSelection.AttributeSelection",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.trees.REPTree",
288:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
289:       "weka.attributeSelection.PrincipalComponents",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.classifiers.misc.InputMappedClassifier",
292:       "weka.classifiers.bayes.BayesNet",
293:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
294:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.K2",
296:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
297:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
298:       "weka.classifiers.RandomizableClassifier",
299:       "weka.classifiers.functions.SGDText",
300:       "weka.classifiers.misc.SerializedClassifier",
301:       "weka.core.SerializationHelper",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.classifiers.meta.AttributeSelectedClassifier",
304:       "weka.attributeSelection.CfsSubsetEval",
305:       "weka.attributeSelection.ASSearch",
306:       "weka.attributeSelection.BestFirst",
307:       "weka.classifiers.trees.J48",
308:       "weka.core.neighboursearch.KDTree",
309:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
310:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
311:       "weka.core.stemmers.SnowballStemmer",
312:       "weka.classifiers.functions.SimpleLinearRegression",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
314:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
315:       "weka.classifiers.meta.MultiClassClassifier",
316:       "weka.classifiers.functions.Logistic",
317:       "weka.classifiers.functions.supportVector.Kernel",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.classifiers.bayes.NaiveBayesMultinomial",
320:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
321:       "weka.core.SelectedTag",
322:       "weka.attributeSelection.CorrelationAttributeEval",
323:       "weka.core.Stopwords",
324:       "weka.core.stemmers.IteratedLovinsStemmer",
325:       "weka.core.TechnicalInformation",
326:       "weka.core.TechnicalInformation$Type",
327:       "weka.core.TechnicalInformation$Field",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
330:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
331:       "weka.core.neighboursearch.balltrees.BallSplitter",
332:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
333:       "weka.core.converters.ArffLoader$ArffReader",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.functions.SimpleLogistic",
339:       "weka.classifiers.IteratedSingleClassifierEnhancer",
340:       "weka.classifiers.meta.AdditiveRegression",
341:       "weka.classifiers.trees.DecisionStump",
342:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
343:       "weka.classifiers.meta.FilteredClassifier",
344:       "weka.filters.supervised.attribute.AttributeSelection",
345:       "weka.attributeSelection.GreedyStepwise",
346:       "weka.estimators.Estimator",
347:       "weka.estimators.PoissonEstimator",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.attributeSelection.WrapperSubsetEval",
350:       "weka.classifiers.bayes.NaiveBayes",
351:       "weka.classifiers.lazy.KStar",
352:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
353:       "weka.estimators.KernelEstimator",
354:       "weka.classifiers.meta.CVParameterSelection",
355:       "weka.core.FastVector",
356:       "weka.core.WekaException",
357:       "weka.core.UnsupportedAttributeTypeException",
358:       "weka.classifiers.rules.PART",
359:       "weka.classifiers.rules.part.MakeDecList",
360:       "weka.classifiers.trees.RandomForest",
361:       "weka.classifiers.trees.RandomTree",
362:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.classifiers.functions.supportVector.CachedKernel",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.estimators.NormalEstimator",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.meta.ClassificationViaRegression",
378:       "weka.classifiers.trees.m5.M5Base",
379:       "weka.classifiers.trees.M5P",
380:       "weka.classifiers.functions.LinearRegression",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
383:       "weka.classifiers.meta.MultiScheme",
384:       "weka.classifiers.rules.DecisionTable",
385:       "weka.classifiers.rules.M5Rules",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.FindWithCapabilities",
388:       "weka.core.SingleIndex",
389:       "weka.classifiers.functions.supportVector.RBFKernel",
390:       "weka.filters.SimpleFilter",
391:       "weka.filters.SimpleStreamFilter",
392:       "weka.filters.MultiFilter",
393:       "weka.filters.AllFilter",
394:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
396:       "weka.classifiers.meta.Bagging",
397:       "weka.classifiers.functions.SMO",
398:       "weka.classifiers.functions.supportVector.StringKernel",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
401:       "weka.classifiers.meta.AdaBoostM1",
402:       "weka.classifiers.functions.VotedPerceptron",
403:       "weka.attributeSelection.ReliefFAttributeEval",
404:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
405:       "weka.classifiers.lazy.LWL",
406:       "weka.core.UnassignedClassException",
407:       "weka.classifiers.meta.LogitBoost",
408:       "weka.core.ClassDiscovery",
409:       "weka.classifiers.rules.OneR",
410:       "weka.core.AttributeStats",
411:       "weka.classifiers.trees.j48.ClassifierTree",
412:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
413:       "weka.classifiers.functions.SGD",
414:       "weka.attributeSelection.InfoGainAttributeEval",
415:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
416:     );
417:   }
418: }

[MASTER] 13:41:53.582 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
SGDText sGDText0 = new SGDText();
Stemmer stemmer0 = sGDText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
naiveBayesMultinomialText0.m_minWordP = 5.0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setOptions(stringArray0);
NaiveBayesMultinomialUpdateable naiveBayesMultinomialUpdateable0 = new NaiveBayesMultinomialUpdateable();
AbstractClassifier.runClassifier(naiveBayesMultinomialUpdateable0, stringArray0);
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-36);
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)11;
byteArray0[3] = (byte) (-36);
byteArray0[4] = (byte) (-36);
int[] intArray0 = new int[2];
intArray0[0] = Integer.MAX_VALUE;
intArray0[1] = (int) (byte)11;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-825), intArray0, 22);
Discretize discretize0 = new Discretize();
discretize0.outputPeek();

[MASTER] 13:41:54.193 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1574170914168/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1574170914168/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.java]]
[MASTER] 13:41:54.193 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:54.193 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:54.194 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 13:41:54.194 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1574170914168/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 13:41:54 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.EvoSuiteFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_23_tmp__ESTest extends NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.2698986887396755
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
31:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
32:       byte[] byteArray0 = new byte[8];
33:       byteArray0[0] = (byte) (-36);
34:       byteArray0[1] = (byte)11;
35:       byteArray0[2] = (byte)13;
36:       byteArray0[3] = (byte)13;
37:       byteArray0[4] = (byte)13;
38:       byteArray0[5] = (byte)86;
39:       byteArray0[6] = (byte) (-36);
40:       byteArray0[7] = (byte)22;
41:       naiveBayesMultinomialText0.setNorm((byte) (-36));
42:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
43:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
44:       naiveBayesMultinomialText1.setOptions(stringArray0);
45:       assertEquals((-36.0), naiveBayesMultinomialText0.getNorm(), 0.01);
46:       assertFalse(naiveBayesMultinomialText1.getUseStopList());
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_23_1574170914168/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 13:41:54 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "org.bounce.net.DefaultAuthenticator",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.AttributeLocator",
129:       "weka.filters.supervised.attribute.NominalToBinary",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.attributeSelection.BestFirst",
134:       "weka.core.Summarizable",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.attributeSelection.GreedyStepwise",
139:       "weka.core.Drawable",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.classifiers.trees.REPTree",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "weka.classifiers.meta.FilteredClassifier",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.attributeSelection.AttributeSelection",
151:       "weka.classifiers.trees.lmt.ResidualModelSelection",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
159:       "weka.filters.supervised.attribute.AttributeSelection",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.classifiers.Classifier",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.attributeSelection.AttributeTransformer",
168:       "weka.core.tokenizers.WordTokenizer",
169:       "weka.classifiers.misc.SerializedClassifier",
170:       "weka.classifiers.trees.j48.ClassifierTree",
171:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
172:       "weka.attributeSelection.PrincipalComponents",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.classifiers.trees.j48.PruneableClassifierTree",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.attributeSelection.ASSearch",
179:       "weka.core.WekaPackageManager",
180:       "weka.filters.SupervisedFilter",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.classifiers.functions.SimpleLogistic",
183:       "weka.attributeSelection.StartSetHandler",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.classifiers.meta.CostSensitiveClassifier",
186:       "weka.core.Option",
187:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
188:       "weka.core.neighboursearch.PerformanceStats",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.tokenizers.AlphabeticTokenizer",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.classifiers.RandomizableClassifier",
197:       "weka.attributeSelection.RankedOutputSearch",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.core.StringLocator",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.core.neighboursearch.NearestNeighbourSearch",
207:       "weka.filters.unsupervised.attribute.Remove",
208:       "weka.core.Randomizable",
209:       "weka.classifiers.trees.LMT",
210:       "weka.classifiers.functions.SGD",
211:       "weka.core.EuclideanDistance",
212:       "weka.classifiers.meta.AttributeSelectedClassifier",
213:       "weka.core.Instances",
214:       "weka.classifiers.bayes.NaiveBayesMultinomial",
215:       "weka.core.UnassignedClassException",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
218:       "weka.filters.unsupervised.attribute.Standardize",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.Ranker",
221:       "weka.core.UnsupportedAttributeTypeException",
222:       "weka.core.TechnicalInformation",
223:       "weka.classifiers.Sourcable",
224:       "weka.core.RevisionHandler",
225:       "weka.classifiers.evaluation.output.prediction.PlainText",
226:       "weka.core.neighboursearch.TreePerformanceStats",
227:       "weka.core.xml.XMLSerialization",
228:       "weka.classifiers.xml.XMLClassifier",
229:       "weka.filters.Filter",
230:       "weka.filters.supervised.attribute.Discretize"
231:     );
232:   } 
233: 
234:   private static void resetClasses() {
235:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
236: 
237:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
238:       "weka.classifiers.AbstractClassifier",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
240:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
241:       "weka.core.Capabilities$Capability",
242:       "weka.core.tokenizers.Tokenizer",
243:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
244:       "weka.core.tokenizers.WordTokenizer",
245:       "weka.core.stemmers.NullStemmer",
246:       "weka.core.AbstractInstance",
247:       "weka.core.DenseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.Evaluation",
250:       "weka.core.Utils",
251:       "weka.core.Option",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
254:       "weka.core.Tag",
255:       "weka.classifiers.meta.CostSensitiveClassifier",
256:       "weka.classifiers.rules.ZeroR",
257:       "weka.classifiers.CostMatrix",
258:       "weka.core.RevisionUtils",
259:       "weka.core.TestInstances",
260:       "weka.core.Attribute",
261:       "weka.core.ProtectedProperties",
262:       "weka.core.Instances",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.classifiers.lazy.IBk",
271:       "weka.core.neighboursearch.NearestNeighbourSearch",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.core.NormalizableDistance",
274:       "weka.core.EuclideanDistance",
275:       "weka.core.Range",
276:       "weka.filters.Filter",
277:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
278:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.SparseInstance",
282:       "weka.core.BinarySparseInstance",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.OneRAttributeEval",
285:       "weka.attributeSelection.AttributeSelection",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.trees.REPTree",
288:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
289:       "weka.attributeSelection.PrincipalComponents",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.classifiers.misc.InputMappedClassifier",
292:       "weka.classifiers.bayes.BayesNet",
293:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
294:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.K2",
296:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
297:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
298:       "weka.classifiers.RandomizableClassifier",
299:       "weka.classifiers.functions.SGDText",
300:       "weka.classifiers.misc.SerializedClassifier",
301:       "weka.core.SerializationHelper",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.classifiers.meta.AttributeSelectedClassifier",
304:       "weka.attributeSelection.CfsSubsetEval",
305:       "weka.attributeSelection.ASSearch",
306:       "weka.attributeSelection.BestFirst",
307:       "weka.classifiers.trees.J48",
308:       "weka.core.neighboursearch.KDTree",
309:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
310:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
311:       "weka.core.stemmers.SnowballStemmer",
312:       "weka.classifiers.functions.SimpleLinearRegression",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
314:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
315:       "weka.classifiers.meta.MultiClassClassifier",
316:       "weka.classifiers.functions.Logistic",
317:       "weka.classifiers.functions.supportVector.Kernel",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.classifiers.bayes.NaiveBayesMultinomial",
320:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
321:       "weka.core.SelectedTag",
322:       "weka.attributeSelection.CorrelationAttributeEval",
323:       "weka.core.Stopwords",
324:       "weka.core.stemmers.IteratedLovinsStemmer",
325:       "weka.core.TechnicalInformation",
326:       "weka.core.TechnicalInformation$Type",
327:       "weka.core.TechnicalInformation$Field",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
330:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
331:       "weka.core.neighboursearch.balltrees.BallSplitter",
332:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
333:       "weka.core.converters.ArffLoader$ArffReader",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.functions.SimpleLogistic",
339:       "weka.classifiers.IteratedSingleClassifierEnhancer",
340:       "weka.classifiers.meta.AdditiveRegression",
341:       "weka.classifiers.trees.DecisionStump",
342:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
343:       "weka.classifiers.meta.FilteredClassifier",
344:       "weka.filters.supervised.attribute.AttributeSelection",
345:       "weka.attributeSelection.GreedyStepwise",
346:       "weka.estimators.Estimator",
347:       "weka.estimators.PoissonEstimator",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.attributeSelection.WrapperSubsetEval",
350:       "weka.classifiers.bayes.NaiveBayes",
351:       "weka.classifiers.lazy.KStar",
352:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
353:       "weka.estimators.KernelEstimator",
354:       "weka.classifiers.meta.CVParameterSelection",
355:       "weka.core.FastVector",
356:       "weka.core.WekaException",
357:       "weka.core.UnsupportedAttributeTypeException",
358:       "weka.classifiers.rules.PART",
359:       "weka.classifiers.rules.part.MakeDecList",
360:       "weka.classifiers.trees.RandomForest",
361:       "weka.classifiers.trees.RandomTree",
362:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.classifiers.functions.supportVector.CachedKernel",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.estimators.NormalEstimator",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.meta.ClassificationViaRegression",
378:       "weka.classifiers.trees.m5.M5Base",
379:       "weka.classifiers.trees.M5P",
380:       "weka.classifiers.functions.LinearRegression",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
383:       "weka.classifiers.meta.MultiScheme",
384:       "weka.classifiers.rules.DecisionTable",
385:       "weka.classifiers.rules.M5Rules",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.FindWithCapabilities",
388:       "weka.core.SingleIndex",
389:       "weka.classifiers.functions.supportVector.RBFKernel",
390:       "weka.filters.SimpleFilter",
391:       "weka.filters.SimpleStreamFilter",
392:       "weka.filters.MultiFilter",
393:       "weka.filters.AllFilter",
394:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
396:       "weka.classifiers.meta.Bagging",
397:       "weka.classifiers.functions.SMO",
398:       "weka.classifiers.functions.supportVector.StringKernel",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
401:       "weka.classifiers.meta.AdaBoostM1",
402:       "weka.classifiers.functions.VotedPerceptron",
403:       "weka.attributeSelection.ReliefFAttributeEval",
404:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
405:       "weka.classifiers.lazy.LWL",
406:       "weka.core.UnassignedClassException",
407:       "weka.classifiers.meta.LogitBoost",
408:       "weka.core.ClassDiscovery",
409:       "weka.classifiers.rules.OneR",
410:       "weka.core.AttributeStats",
411:       "weka.classifiers.trees.j48.ClassifierTree",
412:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
413:       "weka.classifiers.functions.SGD",
414:       "weka.attributeSelection.InfoGainAttributeEval",
415:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
416:     );
417:   }
418: }

[MASTER] 13:41:54.195 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte) (-36);
byteArray0[1] = (byte)11;
byteArray0[2] = (byte)13;
byteArray0[3] = (byte)13;
byteArray0[4] = (byte)13;
byteArray0[5] = (byte)86;
byteArray0[6] = (byte) (-36);
byteArray0[7] = (byte)22;
naiveBayesMultinomialText0.setNorm((byte) (-36));
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setOptions(stringArray0);
assertEquals((-36.0), naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText1.getUseStopList());


[MASTER] 13:41:54.423 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_32_1574170914402/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_32_1574170914402/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.java]]
[MASTER] 13:41:54.423 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:54.423 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:54.424 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 13:41:54.424 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_32_1574170914402/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 13:41:54 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.classifiers.functions.SGDText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_32_tmp__ESTest extends NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.8347596008839733
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.getOptions();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
34:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
35:       byte[] byteArray0 = new byte[8];
36:       byteArray0[0] = (byte) (-36);
37:       byteArray0[1] = (byte)11;
38:       byteArray0[2] = (byte)13;
39:       byteArray0[3] = (byte)13;
40:       byteArray0[4] = (byte)13;
41:       byteArray0[5] = (byte)86;
42:       byteArray0[6] = (byte) (-36);
43:       SGDText sGDText0 = new SGDText();
44:       File file0 = sGDText0.getStopwords();
45:       File file1 = MockFile.createTempFile("Asyp)\"GhB2SzDT7", "Asyp)\"GhB2SzDT7", file0);
46:       naiveBayesMultinomialText0.setStopwords(file1);
47:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_32_1574170914402/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 13:41:54 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "org.bounce.net.DefaultAuthenticator",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.AttributeLocator",
129:       "weka.filters.supervised.attribute.NominalToBinary",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.attributeSelection.BestFirst",
134:       "weka.core.Summarizable",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.attributeSelection.GreedyStepwise",
139:       "weka.core.Drawable",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.classifiers.trees.REPTree",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "weka.classifiers.meta.FilteredClassifier",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.attributeSelection.AttributeSelection",
151:       "weka.classifiers.trees.lmt.ResidualModelSelection",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
159:       "weka.filters.supervised.attribute.AttributeSelection",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.classifiers.Classifier",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.attributeSelection.AttributeTransformer",
168:       "weka.core.tokenizers.WordTokenizer",
169:       "weka.classifiers.misc.SerializedClassifier",
170:       "weka.classifiers.trees.j48.ClassifierTree",
171:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
172:       "weka.attributeSelection.PrincipalComponents",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.classifiers.trees.j48.PruneableClassifierTree",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.attributeSelection.ASSearch",
179:       "weka.core.WekaPackageManager",
180:       "weka.filters.SupervisedFilter",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.classifiers.functions.SimpleLogistic",
183:       "weka.attributeSelection.StartSetHandler",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.classifiers.meta.CostSensitiveClassifier",
186:       "weka.core.Option",
187:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
188:       "weka.core.neighboursearch.PerformanceStats",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.tokenizers.AlphabeticTokenizer",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.classifiers.RandomizableClassifier",
197:       "weka.attributeSelection.RankedOutputSearch",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.core.StringLocator",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.core.neighboursearch.NearestNeighbourSearch",
207:       "weka.filters.unsupervised.attribute.Remove",
208:       "weka.core.Randomizable",
209:       "weka.classifiers.trees.LMT",
210:       "weka.classifiers.functions.SGD",
211:       "weka.core.EuclideanDistance",
212:       "weka.classifiers.meta.AttributeSelectedClassifier",
213:       "weka.core.Instances",
214:       "weka.classifiers.bayes.NaiveBayesMultinomial",
215:       "weka.core.UnassignedClassException",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
218:       "weka.filters.unsupervised.attribute.Standardize",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.Ranker",
221:       "weka.core.UnsupportedAttributeTypeException",
222:       "weka.core.TechnicalInformation",
223:       "weka.classifiers.Sourcable",
224:       "weka.core.RevisionHandler",
225:       "weka.classifiers.evaluation.output.prediction.PlainText",
226:       "weka.core.neighboursearch.TreePerformanceStats",
227:       "weka.core.xml.XMLSerialization",
228:       "weka.classifiers.xml.XMLClassifier",
229:       "weka.filters.Filter",
230:       "weka.filters.supervised.attribute.Discretize"
231:     );
232:   } 
233: 
234:   private static void resetClasses() {
235:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader()); 
236: 
237:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
238:       "weka.classifiers.AbstractClassifier",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
240:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
241:       "weka.core.Capabilities$Capability",
242:       "weka.core.tokenizers.Tokenizer",
243:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
244:       "weka.core.tokenizers.WordTokenizer",
245:       "weka.core.stemmers.NullStemmer",
246:       "weka.core.AbstractInstance",
247:       "weka.core.DenseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.Evaluation",
250:       "weka.core.Utils",
251:       "weka.core.Option",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
254:       "weka.core.Tag",
255:       "weka.classifiers.meta.CostSensitiveClassifier",
256:       "weka.classifiers.rules.ZeroR",
257:       "weka.classifiers.CostMatrix",
258:       "weka.core.RevisionUtils",
259:       "weka.core.TestInstances",
260:       "weka.core.Attribute",
261:       "weka.core.ProtectedProperties",
262:       "weka.core.Instances",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.classifiers.lazy.IBk",
271:       "weka.core.neighboursearch.NearestNeighbourSearch",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.core.NormalizableDistance",
274:       "weka.core.EuclideanDistance",
275:       "weka.core.Range",
276:       "weka.filters.Filter",
277:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
278:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.SparseInstance",
282:       "weka.core.BinarySparseInstance",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.OneRAttributeEval",
285:       "weka.attributeSelection.AttributeSelection",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.trees.REPTree",
288:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
289:       "weka.attributeSelection.PrincipalComponents",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.classifiers.misc.InputMappedClassifier",
292:       "weka.classifiers.bayes.BayesNet",
293:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
294:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.K2",
296:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
297:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
298:       "weka.classifiers.RandomizableClassifier",
299:       "weka.classifiers.functions.SGDText",
300:       "weka.classifiers.misc.SerializedClassifier",
301:       "weka.core.SerializationHelper",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.classifiers.meta.AttributeSelectedClassifier",
304:       "weka.attributeSelection.CfsSubsetEval",
305:       "weka.attributeSelection.ASSearch",
306:       "weka.attributeSelection.BestFirst",
307:       "weka.classifiers.trees.J48",
308:       "weka.core.neighboursearch.KDTree",
309:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
310:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
311:       "weka.core.stemmers.SnowballStemmer",
312:       "weka.classifiers.functions.SimpleLinearRegression",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
314:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
315:       "weka.classifiers.meta.MultiClassClassifier",
316:       "weka.classifiers.functions.Logistic",
317:       "weka.classifiers.functions.supportVector.Kernel",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.classifiers.bayes.NaiveBayesMultinomial",
320:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
321:       "weka.core.SelectedTag",
322:       "weka.attributeSelection.CorrelationAttributeEval",
323:       "weka.core.Stopwords",
324:       "weka.core.stemmers.IteratedLovinsStemmer",
325:       "weka.core.TechnicalInformation",
326:       "weka.core.TechnicalInformation$Type",
327:       "weka.core.TechnicalInformation$Field",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
330:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
331:       "weka.core.neighboursearch.balltrees.BallSplitter",
332:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
333:       "weka.core.converters.ArffLoader$ArffReader",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.functions.SimpleLogistic",
339:       "weka.classifiers.IteratedSingleClassifierEnhancer",
340:       "weka.classifiers.meta.AdditiveRegression",
341:       "weka.classifiers.trees.DecisionStump",
342:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
343:       "weka.classifiers.meta.FilteredClassifier",
344:       "weka.filters.supervised.attribute.AttributeSelection",
345:       "weka.attributeSelection.GreedyStepwise",
346:       "weka.estimators.Estimator",
347:       "weka.estimators.PoissonEstimator",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.attributeSelection.WrapperSubsetEval",
350:       "weka.classifiers.bayes.NaiveBayes",
351:       "weka.classifiers.lazy.KStar",
352:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
353:       "weka.estimators.KernelEstimator",
354:       "weka.classifiers.meta.CVParameterSelection",
355:       "weka.core.FastVector",
356:       "weka.core.WekaException",
357:       "weka.core.UnsupportedAttributeTypeException",
358:       "weka.classifiers.rules.PART",
359:       "weka.classifiers.rules.part.MakeDecList",
360:       "weka.classifiers.trees.RandomForest",
361:       "weka.classifiers.trees.RandomTree",
362:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.classifiers.functions.supportVector.CachedKernel",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.estimators.NormalEstimator",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.meta.ClassificationViaRegression",
378:       "weka.classifiers.trees.m5.M5Base",
379:       "weka.classifiers.trees.M5P",
380:       "weka.classifiers.functions.LinearRegression",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
383:       "weka.classifiers.meta.MultiScheme",
384:       "weka.classifiers.rules.DecisionTable",
385:       "weka.classifiers.rules.M5Rules",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.FindWithCapabilities",
388:       "weka.core.SingleIndex",
389:       "weka.classifiers.functions.supportVector.RBFKernel",
390:       "weka.filters.SimpleFilter",
391:       "weka.filters.SimpleStreamFilter",
392:       "weka.filters.MultiFilter",
393:       "weka.filters.AllFilter",
394:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
396:       "weka.classifiers.meta.Bagging",
397:       "weka.classifiers.functions.SMO",
398:       "weka.classifiers.functions.supportVector.StringKernel",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
401:       "weka.classifiers.meta.AdaBoostM1",
402:       "weka.classifiers.functions.VotedPerceptron",
403:       "weka.attributeSelection.ReliefFAttributeEval",
404:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
405:       "weka.classifiers.lazy.LWL",
406:       "weka.core.UnassignedClassException",
407:       "weka.classifiers.meta.LogitBoost",
408:       "weka.core.ClassDiscovery",
409:       "weka.classifiers.rules.OneR",
410:       "weka.core.AttributeStats",
411:       "weka.classifiers.trees.j48.ClassifierTree",
412:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
413:       "weka.classifiers.functions.SGD",
414:       "weka.attributeSelection.InfoGainAttributeEval",
415:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
416:     );
417:   }
418: }

[MASTER] 13:41:54.424 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getOptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte) (-36);
byteArray0[1] = (byte)11;
byteArray0[2] = (byte)13;
byteArray0[3] = (byte)13;
byteArray0[4] = (byte)13;
byteArray0[5] = (byte)86;
byteArray0[6] = (byte) (-36);
SGDText sGDText0 = new SGDText();
File file0 = sGDText0.getStopwords();
File file1 = MockFile.createTempFile("Asyp)\"GhB2SzDT7", "Asyp)\"GhB2SzDT7", file0);
naiveBayesMultinomialText0.setStopwords(file1);
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_57_1574170915080/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_57_1574170915080/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.java]]
[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 13:41:55.103 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_57_1574170915080/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 19 13:41:55 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.net.MockURI;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.classifiers.meta.CostSensitiveClassifier;
20: import weka.core.Instances;
21: import weka.core.TestInstances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_57_tmp__ESTest extends NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.2698606991330728
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       TestInstances testInstances0 = new TestInstances();
34:       Instances instances0 = testInstances0.generate();
35:       naiveBayesMultinomialText0.buildClassifier(instances0);
36:       double[] doubleArray0 = new double[9];
37:       doubleArray0[0] = (double) (-2);
38:       doubleArray0[1] = (double) (-1);
39:       doubleArray0[2] = (double) (-2);
40:       doubleArray0[3] = 15.0;
41:       doubleArray0[4] = (double) (-2);
42:       TestInstances testInstances1 = new TestInstances();
43:       testInstances1.setNumRelationalNominal((-2));
44:       testInstances0.setNumClasses((-2));
45:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
46:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
47:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
48:       testInstances1.setNumRelationalDate((-1));
49:       testInstances1.setClassType(2);
50:       costSensitiveClassifier0.setDebug(true);
51:       costSensitiveClassifier0.setSeed(10000);
52:       costSensitiveClassifier0.setSeed((-1));
53:       // Undeclared exception!
54:       try { 
55:         naiveBayesMultinomialText0.toString();
56:         fail("Expecting exception: NullPointerException");
57:       
58:       } catch(NullPointerException e) {
59:          //
60:          // no message in exception (getMessage() returned null)
61:          //
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_57_1574170915080/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 19 13:41:55 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
107:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "org.bounce.net.DefaultAuthenticator",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.core.Utils",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.BinarySparseInstance",
128:       "weka.core.AttributeLocator",
129:       "weka.filters.supervised.attribute.NominalToBinary",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.attributeSelection.BestFirst",
134:       "weka.core.Summarizable",
135:       "weka.core.AdditionalMeasureProducer",
136:       "weka.core.neighboursearch.balltrees.BallNode",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.attributeSelection.GreedyStepwise",
139:       "weka.core.Drawable",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.classifiers.trees.REPTree",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "weka.classifiers.meta.FilteredClassifier",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.attributeSelection.AttributeSelection",
151:       "weka.classifiers.trees.lmt.ResidualModelSelection",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
159:       "weka.filters.supervised.attribute.AttributeSelection",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.classifiers.Classifier",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.attributeSelection.AttributeTransformer",
168:       "weka.core.tokenizers.WordTokenizer",
169:       "weka.classifiers.misc.SerializedClassifier",
170:       "weka.classifiers.trees.j48.ClassifierTree",
171:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
172:       "weka.attributeSelection.PrincipalComponents",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.classifiers.trees.j48.PruneableClassifierTree",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.attributeSelection.ASSearch",
179:       "weka.core.WekaPackageManager",
180:       "weka.filters.SupervisedFilter",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.classifiers.functions.SimpleLogistic",
183:       "weka.attributeSelection.StartSetHandler",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.classifiers.meta.CostSensitiveClassifier",
186:       "weka.core.Option",
187:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
188:       "weka.core.neighboursearch.PerformanceStats",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.tokenizers.AlphabeticTokenizer",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.classifiers.RandomizableClassifier",
197:       "weka.attributeSelection.RankedOutputSearch",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.core.StringLocator",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.core.neighboursearch.NearestNeighbourSearch",
207:       "weka.filters.unsupervised.attribute.Remove",
208:       "weka.core.Randomizable",
209:       "weka.classifiers.trees.LMT",
210:       "weka.classifiers.functions.SGD",
211:       "weka.core.EuclideanDistance",
212:       "weka.classifiers.meta.AttributeSelectedClassifier",
213:       "weka.core.Instances",
214:       "weka.classifiers.bayes.NaiveBayesMultinomial",
215:       "weka.core.UnassignedClassException",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
218:       "weka.filters.unsupervised.attribute.Standardize",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.Ranker",
221:       "weka.core.UnsupportedAttributeTypeException",
222:       "weka.core.TechnicalInformation",
223:       "weka.classifiers.Sourcable",
224:       "weka.core.RevisionHandler",
225:       "weka.classifiers.evaluation.output.prediction.PlainText",
226:       "weka.core.neighboursearch.TreePerformanceStats",
227:       "weka.core.xml.XMLSerialization",
228:       "weka.classifiers.xml.XMLClassifier",
229:       "weka.filters.Filter",
230:       "weka.filters.supervised.attribute.Discretize"
231:     );
232:   } 
233: 
234:   private static void resetClasses() {
235:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.class.getClassLoader()); 
236: 
237:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
238:       "weka.classifiers.AbstractClassifier",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
240:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
241:       "weka.core.Capabilities$Capability",
242:       "weka.core.tokenizers.Tokenizer",
243:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
244:       "weka.core.tokenizers.WordTokenizer",
245:       "weka.core.stemmers.NullStemmer",
246:       "weka.core.AbstractInstance",
247:       "weka.core.DenseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.Evaluation",
250:       "weka.core.Utils",
251:       "weka.core.Option",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
254:       "weka.core.Tag",
255:       "weka.classifiers.meta.CostSensitiveClassifier",
256:       "weka.classifiers.rules.ZeroR",
257:       "weka.classifiers.CostMatrix",
258:       "weka.core.RevisionUtils",
259:       "weka.core.TestInstances",
260:       "weka.core.Attribute",
261:       "weka.core.ProtectedProperties",
262:       "weka.core.Instances",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.classifiers.lazy.IBk",
271:       "weka.core.neighboursearch.NearestNeighbourSearch",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.core.NormalizableDistance",
274:       "weka.core.EuclideanDistance",
275:       "weka.core.Range",
276:       "weka.filters.Filter",
277:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
278:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
279:       "weka.core.tokenizers.AlphabeticTokenizer",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.SparseInstance",
282:       "weka.core.BinarySparseInstance",
283:       "weka.attributeSelection.ASEvaluation",
284:       "weka.attributeSelection.OneRAttributeEval",
285:       "weka.attributeSelection.AttributeSelection",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.classifiers.trees.REPTree",
288:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
289:       "weka.attributeSelection.PrincipalComponents",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.classifiers.misc.InputMappedClassifier",
292:       "weka.classifiers.bayes.BayesNet",
293:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
294:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.K2",
296:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
297:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
298:       "weka.classifiers.RandomizableClassifier",
299:       "weka.classifiers.functions.SGDText",
300:       "weka.classifiers.misc.SerializedClassifier",
301:       "weka.core.SerializationHelper",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.classifiers.meta.AttributeSelectedClassifier",
304:       "weka.attributeSelection.CfsSubsetEval",
305:       "weka.attributeSelection.ASSearch",
306:       "weka.attributeSelection.BestFirst",
307:       "weka.classifiers.trees.J48",
308:       "weka.core.neighboursearch.KDTree",
309:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
310:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
311:       "weka.core.stemmers.SnowballStemmer",
312:       "weka.classifiers.functions.SimpleLinearRegression",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
314:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
315:       "weka.classifiers.meta.MultiClassClassifier",
316:       "weka.classifiers.functions.Logistic",
317:       "weka.classifiers.functions.supportVector.Kernel",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.classifiers.bayes.NaiveBayesMultinomial",
320:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
321:       "weka.core.SelectedTag",
322:       "weka.attributeSelection.CorrelationAttributeEval",
323:       "weka.core.Stopwords",
324:       "weka.core.stemmers.IteratedLovinsStemmer",
325:       "weka.core.TechnicalInformation",
326:       "weka.core.TechnicalInformation$Type",
327:       "weka.core.TechnicalInformation$Field",
328:       "weka.core.neighboursearch.BallTree",
329:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
330:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
331:       "weka.core.neighboursearch.balltrees.BallSplitter",
332:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
333:       "weka.core.converters.ArffLoader$ArffReader",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.functions.SimpleLogistic",
339:       "weka.classifiers.IteratedSingleClassifierEnhancer",
340:       "weka.classifiers.meta.AdditiveRegression",
341:       "weka.classifiers.trees.DecisionStump",
342:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
343:       "weka.classifiers.meta.FilteredClassifier",
344:       "weka.filters.supervised.attribute.AttributeSelection",
345:       "weka.attributeSelection.GreedyStepwise",
346:       "weka.estimators.Estimator",
347:       "weka.estimators.PoissonEstimator",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.attributeSelection.WrapperSubsetEval",
350:       "weka.classifiers.bayes.NaiveBayes",
351:       "weka.classifiers.lazy.KStar",
352:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
353:       "weka.estimators.KernelEstimator",
354:       "weka.classifiers.meta.CVParameterSelection",
355:       "weka.core.FastVector",
356:       "weka.core.WekaException",
357:       "weka.core.UnsupportedAttributeTypeException",
358:       "weka.classifiers.rules.PART",
359:       "weka.classifiers.rules.part.MakeDecList",
360:       "weka.classifiers.trees.RandomForest",
361:       "weka.classifiers.trees.RandomTree",
362:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.classifiers.functions.SMOreg",
368:       "weka.classifiers.functions.supportVector.RegOptimizer",
369:       "weka.classifiers.functions.supportVector.RegSMO",
370:       "weka.classifiers.functions.supportVector.RegSMOImproved",
371:       "weka.classifiers.functions.supportVector.CachedKernel",
372:       "weka.classifiers.functions.supportVector.PolyKernel",
373:       "weka.estimators.NormalEstimator",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.meta.ClassificationViaRegression",
378:       "weka.classifiers.trees.m5.M5Base",
379:       "weka.classifiers.trees.M5P",
380:       "weka.classifiers.functions.LinearRegression",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
383:       "weka.classifiers.meta.MultiScheme",
384:       "weka.classifiers.rules.DecisionTable",
385:       "weka.classifiers.rules.M5Rules",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.FindWithCapabilities",
388:       "weka.core.SingleIndex",
389:       "weka.classifiers.functions.supportVector.RBFKernel",
390:       "weka.filters.SimpleFilter",
391:       "weka.filters.SimpleStreamFilter",
392:       "weka.filters.MultiFilter",
393:       "weka.filters.AllFilter",
394:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
395:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
396:       "weka.classifiers.meta.Bagging",
397:       "weka.classifiers.functions.SMO",
398:       "weka.classifiers.functions.supportVector.StringKernel",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
401:       "weka.classifiers.meta.AdaBoostM1",
402:       "weka.classifiers.functions.VotedPerceptron",
403:       "weka.attributeSelection.ReliefFAttributeEval",
404:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
405:       "weka.classifiers.lazy.LWL",
406:       "weka.core.UnassignedClassException",
407:       "weka.classifiers.meta.LogitBoost",
408:       "weka.core.ClassDiscovery",
409:       "weka.classifiers.rules.OneR",
410:       "weka.core.AttributeStats",
411:       "weka.classifiers.trees.j48.ClassifierTree",
412:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
413:       "weka.classifiers.functions.SGD",
414:       "weka.attributeSelection.InfoGainAttributeEval",
415:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
416:     );
417:   }
418: }

[MASTER] 13:41:55.104 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
double[] doubleArray0 = new double[9];
doubleArray0[0] = (double) (-2);
doubleArray0[1] = (double) (-1);
doubleArray0[2] = (double) (-2);
doubleArray0[3] = 15.0;
doubleArray0[4] = (double) (-2);
TestInstances testInstances1 = new TestInstances();
testInstances1.setNumRelationalNominal((-2));
testInstances0.setNumClasses((-2));
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
testInstances1.setNumRelationalDate((-1));
testInstances1.setClassType(2);
costSensitiveClassifier0.setDebug(true);
costSensitiveClassifier0.setSeed(10000);
costSensitiveClassifier0.setSeed((-1));
naiveBayesMultinomialText0.toString();

* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21004
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:42:38.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:42:38.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:42:38.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:42:39.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:42:39.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:42:39.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 13:42:42.308 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 13:42:42.308 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 13:42:42.312 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 13:42:42.316 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 13:42:42.316 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 13:42:42.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 13:42:42.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 13:42:42.327 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 13:42:42.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 13:42:43.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.getConsequent()D: Line 1107
[MASTER] 13:42:43.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1116
[MASTER] 13:42:43.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1117
[MASTER] 13:42:43.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1118
[MASTER] 13:42:43.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1119
[MASTER] 13:42:43.083 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1149
[MASTER] 13:42:43.083 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1152
[MASTER] 13:42:43.084 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: root-Branch
[MASTER] 13:42:43.084 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.getConsequent()D: root-Branch
[MASTER] 13:42:43.084 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true
[MASTER] 13:42:43.084 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.rules.JRip$RipperRule.getConsequent()D:1107 - InsertUnaryOp Negation
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1117 - ReplaceVariable copy -> this
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1118 - ReplaceVariable copy -> this
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 432: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1119 - ReplaceVariable copy -> this
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 449: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1149 - ReplaceComparisonOperator != null -> = null
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 453: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceComparisonOperator <= -> <
[MASTER] 13:42:43.087 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 455: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceConstant - 0 -> 1
[MASTER] 13:42:43.090 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 13:42:43.090 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.copy()Ljava/lang/Object;
[MASTER] 13:42:43.091 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 13:42:43.091 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.copy()Ljava/lang/Object;
[MASTER] 13:42:43.092 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true in context: 
[MASTER] 13:42:43.092 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: root-Branch in context: weka.classifiers.rules.JRip$RipperRule:copy()Ljava/lang/Object;
[MASTER] 13:42:43.092 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true in context: 
[MASTER] 13:42:45.036 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 13:42:45.862 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 378
[MASTER] 13:42:45.864 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 384
[MASTER] 13:42:45.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 390
[MASTER] 13:42:45.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 396
[MASTER] 13:42:45.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 412
[MASTER] 13:42:45.867 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 413
[MASTER] 13:42:45.867 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 414
[MASTER] 13:42:45.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 415
[MASTER] 13:42:45.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 416
[MASTER] 13:42:45.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 417
[MASTER] 13:42:45.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 419
[MASTER] 13:42:45.870 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 422
[MASTER] 13:42:45.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 425
[MASTER] 13:42:45.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 428
[MASTER] 13:42:45.872 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 429
[MASTER] 13:42:45.872 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 431
[MASTER] 13:42:45.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;: Line 1052
[MASTER] 13:42:45.880 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - false
[MASTER] 13:42:45.880 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - false
[MASTER] 13:42:45.880 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - false
[MASTER] 13:42:45.880 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - false
[MASTER] 13:42:45.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I93 Branch 7 IFEQ L419 - true
[MASTER] 13:42:45.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I105 Branch 8 IFNE L422 - true
[MASTER] 13:42:45.882 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I117 Branch 9 IFNE L425 - true
[MASTER] 13:42:45.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - true
[MASTER] 13:42:45.884 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - false
[MASTER] 13:42:45.885 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;: root-Branch
[MASTER] 13:42:45.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 53: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:377 - ReplaceComparisonOperator == -> >=
[MASTER] 13:42:45.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 65: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:383 - ReplaceVariable minNoString -> numFoldsString
[MASTER] 13:42:45.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 67: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:383 - ReplaceComparisonOperator == -> >=
[MASTER] 13:42:45.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 69: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:384 - ReplaceVariable minNoString -> numFoldsString
[MASTER] 13:42:45.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 79: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceVariable seedString -> minNoString
[MASTER] 13:42:45.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 80: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceVariable seedString -> numFoldsString
[MASTER] 13:42:45.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 82: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceComparisonOperator == -> >=
[MASTER] 13:42:45.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 84: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:390 - ReplaceVariable seedString -> minNoString
[MASTER] 13:42:45.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 85: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:390 - ReplaceVariable seedString -> numFoldsString
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 94: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceVariable runString -> numFoldsString
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 95: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceVariable runString -> minNoString
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 96: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceVariable runString -> seedString
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 98: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceComparisonOperator == -> >=
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 100: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:396 - ReplaceVariable runString -> numFoldsString
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 101: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:396 - ReplaceVariable runString -> minNoString
[MASTER] 13:42:45.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 102: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:396 - ReplaceVariable runString -> seedString
[MASTER] 13:42:45.898 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 125: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 0
[MASTER] 13:42:45.899 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 126: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 1
[MASTER] 13:42:45.899 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 127: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> -1
[MASTER] 13:42:45.900 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 128: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 10
[MASTER] 13:42:45.900 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 129: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 12
[MASTER] 13:42:45.901 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 130: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:413 - ReplaceConstant - 0 -> 1
[MASTER] 13:42:45.901 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 131: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 132: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 133: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.921 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 134: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - ReplaceConstant - -F -> 
[MASTER] 13:42:45.921 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 135: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.922 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 136: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.927 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 137: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 138: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp Negation
[MASTER] 13:42:45.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 139: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp +1
[MASTER] 13:42:45.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 140: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp -1
[MASTER] 13:42:45.930 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 141: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.931 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 142: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.931 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 143: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.932 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 144: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - ReplaceConstant - -N -> 
[MASTER] 13:42:45.933 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 145: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.933 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 146: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.934 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 147: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.934 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 148: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp Negation
[MASTER] 13:42:45.935 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 149: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.936 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 150: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.936 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 151: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.937 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 152: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - ReplaceConstant - -O -> 
[MASTER] 13:42:45.937 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 153: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.938 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 154: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.938 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 155: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.939 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 156: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp Negation
[MASTER] 13:42:45.939 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 157: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp +1
[MASTER] 13:42:45.940 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 158: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp -1
[MASTER] 13:42:45.940 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 159: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.941 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 160: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 161: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 162: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - ReplaceConstant - -S -> 
[MASTER] 13:42:45.943 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 163: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp Negation of current
[MASTER] 13:42:45.943 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 164: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC 1 current
[MASTER] 13:42:45.944 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 165: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC -1 current
[MASTER] 13:42:45.944 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 166: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 13:42:45.945 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 167: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp Negation
[MASTER] 13:42:45.945 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 168: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:419 - InsertUnaryOp Negation
[MASTER] 13:42:45.946 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 169: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:419 - ReplaceComparisonOperator == -> !=
[MASTER] 13:42:45.946 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 174: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:422 - InsertUnaryOp Negation
[MASTER] 13:42:45.947 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 175: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:422 - ReplaceComparisonOperator != -> ==
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 986: weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;:1052 - ReplaceConstant -  =  -> 
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 987: weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;:1052 - ReplaceVariable value -> cover
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 988: weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;:1052 - ReplaceVariable value -> accu
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 989: weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;:1052 - ReplaceVariable value -> accuRate
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 990: weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;:1052 - ReplaceVariable value -> maxInfoGain
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 991: weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;:1052 - InsertUnaryOp Negation
[MASTER] 13:42:45.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 13:42:45.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.966 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.toString()Ljava/lang/String;
[MASTER] 13:42:45.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttr()Lweka/core/Attribute;
[MASTER] 13:42:45.969 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.970 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.toString()Ljava/lang/String;
[MASTER] 13:42:45.971 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttr()Lweka/core/Attribute;
[MASTER] 13:42:45.971 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 13:42:45.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 13:42:45.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I117 Branch 9 IFNE L425 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 13:42:45.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 13:42:45.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.toString()Ljava/lang/String;: root-Branch in context: 
[MASTER] 13:42:45.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I93 Branch 7 IFEQ L419 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.974 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I105 Branch 8 IFNE L422 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.977 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - false in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 13:42:45.979 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttr()Lweka/core/Attribute;: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttr()Lweka/core/Attribute;
[MASTER] 13:50:48.906 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 842s and 219 generations, 228562 statements, best individual has fitness: 12384.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 259
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 567
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Generated 73 tests with total length 1653
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 13:58:32.436 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:58:33.407 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21006
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:17:22.511 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:17:22.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:17:22.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:17:22.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 14:17:25.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 14:20:41.657 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:20:41.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 268s and 128 generations, 123602 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 433
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21003
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1025
* Starting evolution
* Search finished after 843s and 90 generations, 117702 statements, best individual has fitness: 2824.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 65 tests with total length 1321
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
