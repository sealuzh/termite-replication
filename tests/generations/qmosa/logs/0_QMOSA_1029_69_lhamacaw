* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: macaw.businessLayer.SupportingDocument
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 14424
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:04:35.607 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:04:35.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:04:35.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:04:35.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:04:35.613 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:04:35.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:04:35.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:04:35.620 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:04:35.626 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:04:35.724 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:04:35.725 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:04:35.726 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:04:35.737 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:04:35.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:04:35.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class macaw.businessLayer.SupportingDocument
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/69_lhamacaw/src/main/java/macaw/businessLayer/SupportingDocument.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Search finished after 841s and 415 generations, 516831 statements, best individual has fitness: 88.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 104
* Number of covered goals: 104
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 129
* Number of covered goals: 125
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 79%
* Total number of goals: 34
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Generated 23 tests with total length 480
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 45%
* Compiling and checking tests
* Writing JUnit test case 'SupportingDocument_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/69_lhamacaw/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: macaw.businessLayer.Variable
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 14424
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:28:04.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:28:04.361 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:28:04.361 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:28:04.411 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:28:04.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:28:04.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:28:04.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:28:04.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:28:04.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:28:04.427 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:28:04.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:28:04.431 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:28:04.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:28:04.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:28:04.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class macaw.businessLayer.Variable
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/69_lhamacaw/src/main/java/macaw/businessLayer/Variable.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 01:28:11.519 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;:Null
[MASTER] 01:28:11.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 01:28:11.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.clone()Ljava/lang/Object;
[MASTER] 01:28:11.522 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 01:28:11.523 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;: root-Branch in context: macaw.businessLayer.Variable:getAlternativeVariable()Lmacaw/businessLayer/Variable;
* Search finished after 843s and 112 generations, 114223 statements, best individual has fitness: 656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 412
* Number of covered goals: 397
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 153
* Number of covered goals: 149
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 533
* Number of covered goals: 519
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 116
* Number of covered goals: 71
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 153
* Number of covered goals: 149
* Generated 123 tests with total length 2564
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
[MASTER] 01:46:02.692 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:46:02.693 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
String string0 = null;
DerivedVariable derivedVariable0 = new DerivedVariable();
rawVariable0.cloneAttributes(derivedVariable0);
User user0 = new User(string0, string0);
Object object0 = new Object();
Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
String string1 = "NON_EXISTENT_ALIAS_FILE_PATH";
User user1 = new User(string0, string1);
String string2 = "4=;\\%6)!";
MockDate mockDate0 = new MockDate(string2);
String string3 = "vCop jBY3j";
String string4 = "UNABLE_TO_GET_CATEGORIES";
User user2 = new User(string3, string4);
RawVariable rawVariable1 = new RawVariable();
Variable.detectFieldChanges(user2, rawVariable1, rawVariable1);
User user3 = new User();
long long0 = (-1L);
long long1 = 688L;
MockDate mockDate1 = new MockDate(long1);
int int0 = 39;
int int1 = 762;
int int2 = (-973);
int int3 = 7;
int int4 = 171;
int int5 = (-3459);
MockDate mockDate2 = new MockDate(int0, int1, int2, int3, int4, int5);
MockDate mockDate3 = new MockDate(long0);
Date date0 = null;
mockDate3.before(date0);
Object object1 = new Object();
String string5 = "Jj9nM,a3@ff2#";
String string6 = "variable.saveChanges.valueChanged";
User user4 = new User(string5, string6);
RawVariable rawVariable2 = new RawVariable();
Variable.detectFieldChanges(user3, rawVariable1, rawVariable1);

[MASTER] 01:46:07.020 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:46:07.022 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
String string0 = "F";
rawVariable0.setLabel("F");
rawVariable0.clone();
String string1 = null;
User user0 = new User(string1, string0);
user0.setAddressLine1(string0);
RawVariable rawVariable1 = new RawVariable();
Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
User user1 = new User();
long long0 = (-1L);
MockDate mockDate0 = new MockDate(long0);
SupportingDocument supportingDocument0 = new SupportingDocument();
user1.setPassword(string1);
SupportingDocument supportingDocument1 = new SupportingDocument();
SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
SupportingDocument supportingDocument2 = new SupportingDocument();
SupportingDocument supportingDocument3 = new SupportingDocument();
SupportingDocument supportingDocument4 = new SupportingDocument();
User user2 = new User();
SupportingDocument supportingDocument5 = new SupportingDocument();
String string2 = ".ZHz~6P\\6f>";
SupportingDocument supportingDocument6 = new SupportingDocument();
supportingDocument1.setDescription(string1);
SupportingDocument supportingDocument7 = new SupportingDocument();
supportingDocument6.setDescription(string0);
SupportingDocument supportingDocument8 = new SupportingDocument();
SupportingDocument supportingDocument9 = new SupportingDocument();
supportingDocument0.setFileName(string2);
SupportingDocument supportingDocument10 = new SupportingDocument();
supportingDocument10.setDescription(string2);
SupportingDocument supportingDocument11 = new SupportingDocument();
SupportingDocument supportingDocument12 = new SupportingDocument();
SupportingDocument supportingDocument13 = new SupportingDocument();
SupportingDocument supportingDocument14 = new SupportingDocument();
Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable1);
rawVariable1.getAlternativeVariable();

* Writing JUnit test case 'Variable_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/69_lhamacaw/evosuite-tests
* Done!

* Computation finished
