/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:12:07 GMT 2018
 */

package com.liferay.portal.model.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.messaging.Message;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.LayoutSetBranch;
import com.liferay.portal.model.LayoutSetBranchWrapper;
import com.liferay.portal.model.Team;
import com.liferay.portal.model.TeamSoap;
import com.liferay.portal.model.TeamWrapper;
import com.liferay.portal.model.Website;
import com.liferay.portal.model.WebsiteWrapper;
import com.liferay.portal.model.impl.TeamImpl;
import com.liferay.portal.model.impl.TeamModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import java.io.Serializable;
import java.lang.reflect.Proxy;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.time.Day;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TeamModelImpl_ESTest extends TeamModelImpl_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      // Undeclared exception!
      try { 
        teamImpl0.setExpandoBridgeAttributes((ServiceContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      String string0 = teamModelImpl0.toXmlString();
      assertEquals("<model><model-name>com.liferay.portal.model.Team</model-name><column><column-name>teamId</column-name><column-value><![CDATA[0]]></column-value></column><column><column-name>companyId</column-name><column-value><![CDATA[0]]></column-value></column><column><column-name>userId</column-name><column-value><![CDATA[0]]></column-value></column><column><column-name>userName</column-name><column-value><![CDATA[]]></column-value></column><column><column-name>createDate</column-name><column-value><![CDATA[null]]></column-value></column><column><column-name>modifiedDate</column-name><column-value><![CDATA[null]]></column-value></column><column><column-name>groupId</column-name><column-value><![CDATA[0]]></column-value></column><column><column-name>name</column-name><column-value><![CDATA[]]></column-value></column><column><column-name>description</column-name><column-value><![CDATA[]]></column-value></column></model>", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      // Undeclared exception!
      try { 
        teamImpl0.setPrimaryKeyObj((Serializable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.model.impl.TeamModelImpl", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      teamModelImpl0.toString();
      TeamModelImpl.toModel((TeamSoap) null);
      TeamWrapper teamWrapper0 = new TeamWrapper((Team) null);
      // Undeclared exception!
      try { 
        teamModelImpl0.equals(teamWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.model.TeamWrapper", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      teamModelImpl0.toString();
      teamModelImpl0.toCacheModel();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      teamModelImpl0.getOriginalName();
      teamModelImpl0.setName("");
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          TeamImpl teamImpl0 = new TeamImpl();
          Website website0 = mock(Website.class, new ViolatedAssumptionAnswer());
          doReturn(0L).when(website0).getClassNameId();
          doReturn(0L).when(website0).getClassPK();
          doReturn(0L).when(website0).getCompanyId();
          doReturn((Date) null).when(website0).getCreateDate();
          doReturn((Date) null).when(website0).getModifiedDate();
          doReturn(false).when(website0).getPrimary();
          doReturn(0).when(website0).getTypeId();
          doReturn((String) null).when(website0).getUrl();
          doReturn(0L).when(website0).getUserId();
          doReturn((String) null).when(website0).getUserName();
          doReturn(0L).when(website0).getWebsiteId();
          WebsiteWrapper websiteWrapper0 = new WebsiteWrapper(website0);
          Map<String, Object> map0 = websiteWrapper0.getModelAttributes();
          teamImpl0.setModelAttributes(map0);
          teamImpl0.toCacheModel();
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      Map<String, Object> map0 = teamModelImpl0.getModelAttributes();
      teamModelImpl0.getUserName();
      teamModelImpl0.setModelAttributes(map0);
      teamModelImpl0.toCacheModel();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0688846458275627
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.setUserUuid("%Qz/_b-,Xvc=i");
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = TeamModelImpl.MAPPING_TABLE_USERGROUPS_TEAMS_NAME;
      ExpandoBridgeFactoryUtil expandoBridgeFactoryUtil0 = new ExpandoBridgeFactoryUtil();
      String string1 = TeamModelImpl.MAPPING_TABLE_USERGROUPS_TEAMS_NAME;
      ExpandoBridgeFactoryUtil expandoBridgeFactoryUtil1 = new ExpandoBridgeFactoryUtil();
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      teamModelImpl0.getOriginalGroupId();
      TeamModelImpl teamModelImpl1 = new TeamModelImpl();
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      TeamSoap[] teamSoapArray0 = new TeamSoap[4];
      TeamSoap teamSoap0 = TeamSoap.toSoapModel(teamImpl0);
      teamSoapArray0[0] = teamSoap0;
      TeamSoap teamSoap1 = new TeamSoap();
      teamSoapArray0[1] = teamSoap1;
      TeamSoap teamSoap2 = new TeamSoap();
      teamSoap2.setUserName(" ORDER BY team.name ASC");
      teamSoapArray0[2] = teamSoap2;
      TeamSoap teamSoap3 = new TeamSoap();
      teamSoapArray0[3] = teamSoap3;
      TeamModelImpl.toModels(teamSoapArray0);
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.setName((String) null);
      teamImpl0.toEscapedModel();
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0688846458275627
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.toEscapedModel();
      teamImpl0.toEscapedModel();
      teamImpl0.toCacheModel();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      teamModelImpl0.getOriginalName();
      teamModelImpl0.getModelAttributes();
      teamModelImpl0.hashCode();
      teamModelImpl0.getGroupId();
      teamModelImpl0.getModelClass();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2757106856671507
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      LayoutSetBranch layoutSetBranch0 = mock(LayoutSetBranch.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(layoutSetBranch0).getSettings();
      doReturn((String) null).when(layoutSetBranch0).getColorSchemeId();
      doReturn(0L).when(layoutSetBranch0).getCompanyId();
      doReturn((Date) null).when(layoutSetBranch0).getCreateDate();
      doReturn((String) null).when(layoutSetBranch0).getCss();
      doReturn((String) null).when(layoutSetBranch0).getDescription();
      doReturn(0L).when(layoutSetBranch0).getGroupId();
      doReturn(0L).when(layoutSetBranch0).getLayoutSetBranchId();
      doReturn(false).when(layoutSetBranch0).getLayoutSetPrototypeLinkEnabled();
      doReturn((String) null).when(layoutSetBranch0).getLayoutSetPrototypeUuid();
      doReturn(false).when(layoutSetBranch0).getLogo();
      doReturn(0L).when(layoutSetBranch0).getLogoId();
      doReturn(false).when(layoutSetBranch0).getMaster();
      doReturn((Date) null).when(layoutSetBranch0).getModifiedDate();
      doReturn((String) null).when(layoutSetBranch0).getName();
      doReturn(false).when(layoutSetBranch0).getPrivateLayout();
      doReturn((String) null).when(layoutSetBranch0).getThemeId();
      doReturn(0L).when(layoutSetBranch0).getUserId();
      doReturn((String) null).when(layoutSetBranch0).getUserName();
      doReturn((String) null).when(layoutSetBranch0).getWapColorSchemeId();
      doReturn((String) null).when(layoutSetBranch0).getWapThemeId();
      LayoutSetBranchWrapper layoutSetBranchWrapper0 = new LayoutSetBranchWrapper(layoutSetBranch0);
      LayoutSetBranchWrapper layoutSetBranchWrapper1 = new LayoutSetBranchWrapper(layoutSetBranchWrapper0);
      LayoutSetBranchWrapper layoutSetBranchWrapper2 = new LayoutSetBranchWrapper(layoutSetBranchWrapper1);
      Map<String, Object> map0 = layoutSetBranchWrapper2.getModelAttributes();
      teamModelImpl0.setModelAttributes(map0);
      teamModelImpl0.toCacheModel();
      teamModelImpl0.setModelAttributes(map0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      teamImpl0.setPrimaryKey(166L);
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.51208443796189
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.setGroupId((-1452L));
      Proxy proxy0 = (Proxy)teamImpl0.toEscapedModel();
      TeamWrapper teamWrapper0 = new TeamWrapper((Team) proxy0);
      TeamWrapper teamWrapper1 = new TeamWrapper((Team) proxy0);
      boolean boolean0 = TeamModelImpl.ENTITY_CACHE_ENABLED;
      TeamModelImpl.toModels((TeamSoap[]) null);
      CacheModel<Team> cacheModel0 = teamImpl0.toCacheModel();
      teamImpl0.toCacheModel();
      teamImpl0.toCacheModel();
      teamImpl0.equals(cacheModel0);
      TeamImpl teamImpl1 = new TeamImpl();
      teamImpl1.toCacheModel();
      teamImpl0.toCacheModel();
      System.setCurrentTimeMillis(794L);
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      teamImpl1.setModelAttributes(hashMap0);
      teamImpl1.setDescription("Team");
      teamImpl1.toCacheModel();
      TeamWrapper teamWrapper2 = new TeamWrapper(teamImpl1);
      TeamWrapper teamWrapper3 = new TeamWrapper(teamImpl0);
      teamImpl0.equals(teamWrapper3);
      System.setCurrentTimeMillis(2L);
      Long long0 = new Long(0L);
      teamImpl0.equals(long0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0688846458275627
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.getModelClassName();
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      TeamImpl teamImpl0 = new TeamImpl();
      TeamWrapper teamWrapper0 = new TeamWrapper(teamImpl0);
      teamModelImpl0.compareTo((Team) teamWrapper0);
      Object object0 = teamModelImpl0.clone();
      teamModelImpl0.equals(object0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      TeamModelImpl.NAME_COLUMN_BITMASK = 0L;
      Message message0 = new Message();
      message0.getString("liferayDataSource");
      message0.getValues();
      teamModelImpl0.getCompanyId();
      teamModelImpl0.getColumnBitmask();
      teamModelImpl0.getColumnBitmask();
      teamModelImpl0.getGroupId();
      teamModelImpl0.getCompanyId();
      // Undeclared exception!
      try { 
        teamModelImpl0.getUserUuid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.util.PortalUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      TeamImpl teamImpl0 = (TeamImpl)teamModelImpl0.clone();
      teamImpl0.setDescription("liferaySessionFactory");
      TeamImpl teamImpl1 = new TeamImpl();
      teamImpl1.setName("liferayTransactionManager");
      CacheModel<Team> cacheModel0 = teamImpl0.toCacheModel();
      teamImpl0.compareTo((Team) teamImpl1);
      TeamSoap teamSoap0 = new TeamSoap();
      teamModelImpl0.equals(cacheModel0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      TeamImpl teamImpl0 = (TeamImpl)teamModelImpl0.clone();
      teamImpl0.setName("create table UserGroups_Teams (userGroupId LONG not null,teamId LONG not null,primary key (userGroupId, teamId))");
      teamImpl0.toCacheModel();
      teamImpl0.clone();
      teamImpl0.equals(teamModelImpl0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4583113296830845
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TeamImpl teamImpl0 = new TeamImpl();
      TeamImpl teamImpl1 = new TeamImpl();
      teamImpl1.setUserName(";Q7bj*9lV%");
      teamImpl1.toCacheModel();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      Map<String, Object> map0 = new Hashtable<String, Object>();
      String string0 = TeamModelImpl.TABLE_SQL_DROP;
      teamModelImpl0.setModelAttributes(map0);
      TeamImpl teamImpl0 = (TeamImpl)teamModelImpl0.clone();
      teamModelImpl0.getPrimaryKeyObj();
      teamModelImpl0.setDescription("drop table Team");
      TeamImpl teamImpl1 = new TeamImpl();
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      teamModelImpl0.equals((Object) null);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.725261109623292
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TeamModelImpl teamModelImpl0 = new TeamModelImpl();
      Day day0 = new Day();
      Date date0 = day0.getStart();
      LayoutSetBranch layoutSetBranch0 = mock(LayoutSetBranch.class, new ViolatedAssumptionAnswer());
      doReturn("liferayDataSource").when(layoutSetBranch0).getSettings();
      doReturn("").when(layoutSetBranch0).getColorSchemeId();
      doReturn(0L).when(layoutSetBranch0).getCompanyId();
      doReturn(date0).when(layoutSetBranch0).getCreateDate();
      doReturn("Users_Teams").when(layoutSetBranch0).getCss();
      doReturn((String) null).when(layoutSetBranch0).getDescription();
      doReturn((-1221L)).when(layoutSetBranch0).getGroupId();
      doReturn((-1221L)).when(layoutSetBranch0).getLayoutSetBranchId();
      doReturn(true).when(layoutSetBranch0).getLayoutSetPrototypeLinkEnabled();
      doReturn((String) null).when(layoutSetBranch0).getLayoutSetPrototypeUuid();
      doReturn(true).when(layoutSetBranch0).getLogo();
      doReturn(1L).when(layoutSetBranch0).getLogoId();
      doReturn(true).when(layoutSetBranch0).getMaster();
      doReturn(date0).when(layoutSetBranch0).getModifiedDate();
      doReturn("Y{=Q+\u0007_j_'_B").when(layoutSetBranch0).getName();
      doReturn(true).when(layoutSetBranch0).getPrivateLayout();
      doReturn("Y{=Q+\u0007_j_'_B").when(layoutSetBranch0).getThemeId();
      doReturn((-1974L)).when(layoutSetBranch0).getUserId();
      doReturn((String) null).when(layoutSetBranch0).getUserName();
      doReturn("liferaySessionFactory").when(layoutSetBranch0).getWapColorSchemeId();
      doReturn("UserGroups_Teams").when(layoutSetBranch0).getWapThemeId();
      LayoutSetBranchWrapper layoutSetBranchWrapper0 = new LayoutSetBranchWrapper(layoutSetBranch0);
      Map<String, Object> map0 = layoutSetBranchWrapper0.getModelAttributes();
      teamModelImpl0.setModelAttributes(map0);
      System.setCurrentTimeMillis(0L);
      TeamImpl teamImpl0 = new TeamImpl();
      teamImpl0.toCacheModel();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6393405872324323
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis((-2488L));
      TeamImpl teamImpl0 = new TeamImpl();
      ServiceContext serviceContext0 = new ServiceContext();
      LayoutSetBranch layoutSetBranch0 = mock(LayoutSetBranch.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(layoutSetBranch0).getCreateDate();
      LayoutSetBranchWrapper layoutSetBranchWrapper0 = new LayoutSetBranchWrapper(layoutSetBranch0);
      layoutSetBranchWrapper0.getCreateDate();
      teamImpl0.getOriginalName();
      teamImpl0.getCreateDate();
      layoutSetBranchWrapper0.setLogoId(2L);
      Date date0 = serviceContext0.getModifiedDate((Date) null);
      teamImpl0.setCreateDate(date0);
      Integer integer0 = new Integer(3385);
      teamImpl0.equals(integer0);
      System.setCurrentTimeMillis((-2488L));
      System.setCurrentTimeMillis(2000L);
      teamImpl0.toCacheModel();
      System.setCurrentTimeMillis((-2488L));
      teamImpl0.getPrimaryKeyObj();
      teamImpl0.toCacheModel();
      System.setCurrentTimeMillis(1215L);
      teamImpl0.toCacheModel();
      teamImpl0.equals("liferaySessionFactory");
      System.setCurrentTimeMillis(2000L);
      teamImpl0.equals(date0);
  }
}
