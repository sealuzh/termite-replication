/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:23:22 GMT 2018
 */

package org.pdfsam.guiclient.commons.panels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Component;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.business.listeners.CleanClosedTabbedPanelListener;
import org.pdfsam.guiclient.commons.panels.CloseableTabbedPane;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CloseableTabbedPane_ESTest extends CloseableTabbedPane_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane(1575);
      CleanClosedTabbedPanelListener cleanClosedTabbedPanelListener0 = new CleanClosedTabbedPanelListener(closeableTabbedPane0);
      closeableTabbedPane0.removeCloseableTabbedPaneListener(cleanClosedTabbedPanelListener0);
      assertFalse(closeableTabbedPane0.getIgnoreRepaint());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      CloseableTabbedPane.CloseableTabbedPaneUI closeableTabbedPane_CloseableTabbedPaneUI0 = closeableTabbedPane0.new CloseableTabbedPaneUI((-1984917300));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane(1486);
      MouseEvent mouseEvent0 = new MouseEvent(closeableTabbedPane0, 1486, 1486, 1486, 1486, 1486, 46, false);
      closeableTabbedPane0.mouseClicked(mouseEvent0);
      assertEquals(1486, mouseEvent0.getX());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane(3006);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(closeableTabbedPane0, 3006, 3006, 3006, 3006, 3006, 3006, false, 3006, 3006, 3006);
      closeableTabbedPane0.mouseMoved(mouseWheelEvent0);
      assertEquals(3006, mouseWheelEvent0.getY());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      Rectangle rectangle0 = closeableTabbedPane0.getVisibleRect();
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane.CloseableMetalTabbedPaneUI closeableTabbedPane_CloseableMetalTabbedPaneUI0 = closeableTabbedPane0.new CloseableMetalTabbedPaneUI();
      // Undeclared exception!
      try { 
        closeableTabbedPane_CloseableMetalTabbedPaneUI0.layoutLabel(0, (FontMetrics) null, 0, (String) null, imageIcon0, rectangle0, rectangle0, rectangle0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.panels.CloseableTabbedPane$CloseableMetalTabbedPaneUI", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon(imageIcon0);
      Rectangle rectangle0 = closeableTabbedPane0.getVisibleRect();
      Rectangle rectangle1 = new Rectangle((-4596), 0);
      rectangle0.setFrame((Rectangle2D) rectangle1);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(closeableTabbedPane0, 0, 2677L, 0, (-4596), 0, 0, false, 0, (-40), (-40));
      closeableTabbedPane0.mouseEntered(mouseWheelEvent0);
      assertEquals(0, mouseWheelEvent0.getClickCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("CEA", (Component) defaultTreeCellRenderer0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultTreeCellRenderer0, 9, 9, 9, 9, 9, 9, false, 9, 9, 9);
      closeableTabbedPane0.mouseMoved(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isAltGraphDown());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane(0);
      MouseEvent mouseEvent0 = new MouseEvent(closeableTabbedPane0, 0, 0, 0, 0, 0, 0, true);
      closeableTabbedPane0.mouseDragged(mouseEvent0);
      closeableTabbedPane0.mousePressed(mouseEvent0);
      assertEquals(0, mouseEvent0.getID());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.getCloseableTabbedPaneListener();
      Graphics graphics0 = closeableTabbedPane0.getGraphics();
      assertNull(graphics0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.setCloseIcons(imageIcon0, imageIcon0, imageIcon0);
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon(imageIcon0);
      int int0 = closeableTabbedPane_CloseTabIcon0.getIconWidth();
      assertEquals(15, int0);
      assertEquals(16, closeableTabbedPane_CloseTabIcon0.getIconHeight());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane(2902);
      closeableTabbedPane0.fireCloseTab(2902);
      closeableTabbedPane0.fireCloseTab(119);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(closeableTabbedPane0, 0, 0, 2902, 2902, 0, (-3143), (-3143), (-1), true, (MenuElement[]) null, menuSelectionManager0);
      closeableTabbedPane0.mouseReleased(menuDragMouseEvent0);
      assertEquals(2902, menuDragMouseEvent0.getX());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7721393884375285
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      closeableTabbedPane0.addTab("org.pdfsam.guiclient.commons.panels.CloseableTabbedPane$CloseTabIcon", (Component) defaultTreeCellRenderer0);
      closeableTabbedPane0.mouseExited((MouseEvent) null);
      assertTrue(closeableTabbedPane0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      Rectangle rectangle0 = closeableTabbedPane0.getVisibleRect();
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane.CloseableTabbedPaneUI closeableTabbedPane_CloseableTabbedPaneUI0 = closeableTabbedPane0.new CloseableTabbedPaneUI();
      // Undeclared exception!
      try { 
        closeableTabbedPane_CloseableTabbedPaneUI0.layoutLabel(0, (FontMetrics) null, 0, "", imageIcon0, rectangle0, rectangle0, rectangle0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.panels.CloseableTabbedPane$CloseableTabbedPaneUI", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.setCloseIcons(imageIcon0, imageIcon0, imageIcon0);
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon(imageIcon0);
      // Undeclared exception!
      try { 
        closeableTabbedPane_CloseTabIcon0.paintIcon(closeableTabbedPane0, (Graphics) null, (-1340), (-1340));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.ImageIcon", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9518484392238882
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CleanClosedTabbedPanelListener cleanClosedTabbedPanelListener0 = new CleanClosedTabbedPanelListener(closeableTabbedPane0);
      closeableTabbedPane0.addCloseableTabbedPaneListener(cleanClosedTabbedPanelListener0);
      closeableTabbedPane0.addTab("", (Component) null);
      boolean boolean0 = closeableTabbedPane0.fireCloseTab(0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.setCloseIcons((Icon) null, imageIcon0, imageIcon0);
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon((Icon) null);
      closeableTabbedPane0.getGraphics();
      // Undeclared exception!
      try { 
        closeableTabbedPane_CloseTabIcon0.paintIcon(closeableTabbedPane0, (Graphics) null, 929, 929);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.panels.CloseableTabbedPane$CloseTabIcon", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5810937501718239
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.setCloseIcons((Icon) null, (Icon) null, imageIcon0);
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon(imageIcon0);
      // Undeclared exception!
      try { 
        closeableTabbedPane_CloseTabIcon0.paintIcon(closeableTabbedPane0, (Graphics) null, (-1340), (-1340));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.panels.CloseableTabbedPane$CloseTabIcon", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1493916578406216
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("@c&", (Component) defaultTreeCellRenderer0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultTreeCellRenderer0, 503, 503, 13, 13, 13, 13, true, 503, 13, 13);
      closeableTabbedPane0.mouseMoved(mouseWheelEvent0);
      assertEquals(503L, mouseWheelEvent0.getWhen());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.075845178591953
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("it under the terms of the GNU General PublicLicense as publshed by\n", (Component) defaultTreeCellRenderer0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultTreeCellRenderer0, 506, 506, 19, 19, 19, 19, true, 506, 19, 19);
      closeableTabbedPane0.mouseMoved(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isAltGraphDown());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3030924037617193
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon(icon0);
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      Graphics graphics0 = bufferedImage0.getGraphics();
      closeableTabbedPane_CloseTabIcon0.paintIcon(defaultTreeCellRenderer0, graphics0, 0, 7);
      assertEquals(16, closeableTabbedPane_CloseTabIcon0.getIconHeight());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("C[O", (Component) defaultTreeCellRenderer0);
      ImageIcon imageIcon0 = new ImageIcon();
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon(imageIcon0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        closeableTabbedPane_CloseTabIcon0.paintIcon(closeableTabbedPane0, debugGraphics0, 4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.159588814308626
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      CloseableTabbedPane.CloseTabIcon closeableTabbedPane_CloseTabIcon0 = closeableTabbedPane0.new CloseTabIcon((Icon) null);
      BufferedImage bufferedImage0 = new BufferedImage(9, 9, 9);
      Graphics graphics0 = bufferedImage0.getGraphics();
      closeableTabbedPane_CloseTabIcon0.paintIcon(closeableTabbedPane0, graphics0, 9, 7);
      assertEquals(16, closeableTabbedPane_CloseTabIcon0.getIconHeight());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.113719106506649
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("]l&", (Component) defaultTreeCellRenderer0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultTreeCellRenderer0, 506, 506, 13, 13, 13, 13, true, 506, 13, 13);
      closeableTabbedPane0.mouseMoved(mouseWheelEvent0);
      assertTrue(mouseWheelEvent0.isMetaDown());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7716239556773663
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("C_O", (Component) defaultTreeCellRenderer0);
      closeableTabbedPane0.addTab("C_O", (Icon) null, (Component) defaultTreeCellRenderer0);
      closeableTabbedPane0.mouseExited((MouseEvent) null);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.162556836233132
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CloseableTabbedPane closeableTabbedPane0 = new CloseableTabbedPane();
      closeableTabbedPane0.addTab("` und0r the erms of the GNU General PublicLicense as pubshed y\n", (Component) defaultTreeCellRenderer0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultTreeCellRenderer0, 500, 500, 10, 10, 10, 10, true, 500, 10, 10);
      closeableTabbedPane0.mouseMoved(mouseWheelEvent0);
      assertEquals(100, mouseWheelEvent0.getUnitsToScroll());
  }
}
