/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:19:52 GMT 2018
 */

package weka.estimators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.clusterers.EM;
import weka.clusterers.SimpleKMeans;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.core.TestInstances;
import weka.estimators.CheckEstimator;
import weka.estimators.Estimator;
import weka.estimators.NormalEstimator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckEstimator_ESTest extends CheckEstimator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckEstimator.main((String[]) null);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6453483530817465
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      // Undeclared exception!
      try { 
        checkEstimator0.canSplitUpClass((-9), (-9));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-9' unknown!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.printAttributeSummary(2, 2);
      assertFalse(checkEstimator0.getDebug());
      assertFalse(checkEstimator0.getSilent());
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.getDebug());
      assertEquals(100, checkEstimator0.getNumInstances());
      
      CheckEstimator.EstTypes checkEstimator_EstTypes0 = new CheckEstimator.EstTypes();
      String string0 = checkEstimator_EstTypes0.getRevision();
      assertEquals("8034", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1496070846975623
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.EstTypes checkEstimator_EstTypes0 = new CheckEstimator.EstTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.testsPerClassType(2474, checkEstimator_EstTypes0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2474' unknown!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckEstimator.EstTypes checkEstimator_EstTypes0 = new CheckEstimator.EstTypes(false, false, false);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.getPostProcessor();
      checkEstimator0.setPostProcessor((CheckEstimator.PostProcessor) null);
      checkEstimator0.listOptions();
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.getDebug());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.593372795445466
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.hasClasspathProblems();
      checkEstimator0.canSplitUpClass(2, 2);
      System.setCurrentTimeMillis(2846L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.canHandleNClasses(checkEstimator_AttrTypes0, 83);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: No type set.
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.388209223164952
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      // Undeclared exception!
      try { 
        checkEstimator0.instanceWeights(checkEstimator_AttrTypes0, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.estimators.NormalEstimator: Cannot handle any class attribute!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes1 = new CheckEstimator.AttrTypes(checkEstimator_AttrTypes0);
      assertFalse(checkEstimator_AttrTypes1.equals((Object)checkEstimator_AttrTypes0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      String string0 = checkEstimator0.getRevision();
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertFalse(checkEstimator0.getDebug());
      assertEquals(100, checkEstimator0.getNumInstances());
      assertEquals("8034", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      String string0 = checkEstimator_AttrTypes0.getRevision();
      assertEquals("8034", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.424690360884648
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(3);
      boolean[] booleanArray0 = checkEstimator0.canHandleZeroTraining(checkEstimator_AttrTypes0, 3);
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getDebug());
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes((-681));
      Vector vector0 = checkEstimator_AttrTypes0.getVectorOfAttrTypes();
      assertEquals("[]", vector0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3152098139135626
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      checkEstimator0.canHandleZeroTraining(checkEstimator_AttrTypes0, 0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.println();
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.getDebug());
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8444024508651222
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setSilent(true);
      checkEstimator0.doTests();
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4932975843170073
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      int int0 = 1;
      Integer integer0 = new Integer(1);
      checkEstimator0.print(integer0);
      CheckEstimator.PostProcessor checkEstimator_PostProcessor0 = checkEstimator0.m_PostProcessor;
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(1);
      int int1 = 0;
      checkEstimator_AttrTypes0.getVectorOfAttrTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.instanceWeights(checkEstimator_AttrTypes0, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.estimators.NormalEstimator: Cannot handle binary attributes!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.424690360884648
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(3);
      // Undeclared exception!
      try { 
        checkEstimator0.instanceWeights(checkEstimator_AttrTypes0, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.estimators.NormalEstimator: Cannot handle date attributes!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0790184969820253
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      boolean[] booleanArray0 = checkEstimator0.datasetIntegrity(checkEstimator_AttrTypes0, 2, false, false);
      assertEquals(2, booleanArray0.length);
      assertFalse(checkEstimator0.getDebug());
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.084278335689022
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(2);
      boolean[] booleanArray0 = checkEstimator0.datasetIntegrity(checkEstimator_AttrTypes0, 2, true, true);
      assertEquals(2, booleanArray0.length);
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.printAttributeSummary(3, 0);
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.getDebug());
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.PostProcessor checkEstimator_PostProcessor0 = checkEstimator0.new PostProcessor();
      checkEstimator_PostProcessor0.getRevision();
      checkEstimator0.doTests();
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.914775127897765
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.PostProcessor checkEstimator_PostProcessor0 = checkEstimator0.new PostProcessor();
      checkEstimator_PostProcessor0.getRevision();
      checkEstimator0.setPostProcessor(checkEstimator_PostProcessor0);
      assertEquals(100, checkEstimator0.getNumInstances());
      
      checkEstimator0.doTests();
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9886747376342768
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      assertFalse(checkEstimator0.getDebug());
      assertEquals(100, checkEstimator0.getNumInstances());
      
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      boolean[] booleanArray0 = checkEstimator0.correctBuildInitialisation(checkEstimator_AttrTypes0, 3);
      assertFalse(checkEstimator0.getSilent());
      assertEquals(2, booleanArray0.length);
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.printAttributeSummary(308, 308);
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertFalse(checkEstimator0.getSilent());
      
      CheckEstimator.EstTypes checkEstimator_EstTypes0 = new CheckEstimator.EstTypes();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(4);
      Vector vector0 = checkEstimator_AttrTypes0.getVectorOfAttrTypes();
      assertEquals("[4]", vector0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8864851602714514
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(4);
      // Undeclared exception!
      try { 
        checkEstimator0.instanceWeights(checkEstimator_AttrTypes0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.10519668504839
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(2);
      checkEstimator0.datasetIntegrity(checkEstimator_AttrTypes0, 2, false, false);
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6768898735148872
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.canHandleMissing(checkEstimator_AttrTypes0, 18, false, false, 18);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '18' unknown!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3711408831523784
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(1);
      checkEstimator0.canHandleMissing(checkEstimator_AttrTypes0, 1, true, true, 1);
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getSilent());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9002560512685369
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      Vector vector0 = checkEstimator_AttrTypes0.getVectorOfAttrTypes();
      assertEquals("[0]", vector0.toString());
      
      CheckEstimator checkEstimator0 = new CheckEstimator();
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.printAttributeSummary(3, 3);
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertFalse(checkEstimator0.getSilent());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      // Undeclared exception!
      try { 
        checkEstimator0.canHandleMissing((CheckEstimator.AttrTypes) null, 0, true, false, 68);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      String[] stringArray0 = checkEstimator0.getOptions();
      assertEquals(4, stringArray0.length);
      
      NormalEstimator normalEstimator0 = (NormalEstimator)checkEstimator0.m_Estimator;
      Vector<EM> vector0 = new Vector<EM>();
      checkEstimator0.testWithTestValues(normalEstimator0, vector0);
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertEquals(1.0E-6, normalEstimator0.getPrecision(), 0.01);
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2187798454504213
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.m_NumInstances = 0;
      checkEstimator0.canSplitUpClass(0, 0);
      Random.setNextRandom((-653));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TestInstances testInstances0 = new TestInstances();
      testInstances0.getData();
      double[] doubleArray0 = new double[0];
      try { 
        CheckEstimator.getMinMax((Instances) null, (-1), doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error in Program, privat method getMinMax
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5074547001670706
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(4);
      // Undeclared exception!
      try { 
        checkEstimator0.incrementingEquality(checkEstimator_AttrTypes0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.estimators.NormalEstimator: Cannot handle relational attributes!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.270283886969418
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(2);
      checkEstimator_AttrTypes0.nominal = true;
      // Undeclared exception!
      try { 
        checkEstimator0.incrementingEquality(checkEstimator_AttrTypes0, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Expected to have only one type set used wrongly.
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.289681972496156
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      checkEstimator_AttrTypes0.relational = true;
      // Undeclared exception!
      try { 
        checkEstimator0.incrementingEquality(checkEstimator_AttrTypes0, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Expected to have only one type set used wrongly.
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.582306344313967
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      boolean[] booleanArray0 = checkEstimator0.canSplitUpClass(3, 3);
      assertEquals(100, checkEstimator0.getNumInstances());
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4496924351204084
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      boolean[] booleanArray0 = checkEstimator0.canSplitUpClass(4, 4);
      assertEquals(100, checkEstimator0.getNumInstances());
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      String[] stringArray0 = checkEstimator0.getOptions();
      try { 
        checkEstimator0.setOptions(stringArray0);
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.506454537863645
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(2);
      checkEstimator_AttrTypes0.getVectorOfAttrTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.incrementingEquality(checkEstimator_AttrTypes0, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.estimators.NormalEstimator: Cannot handle string attributes!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.556183821230542
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.canHandleClassAsNthAttribute(checkEstimator_AttrTypes0, 83, 83, 83, 83);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '83' unknown!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.273255988698174
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(1);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      boolean[] booleanArray0 = checkEstimator0.canHandleZeroTraining(checkEstimator_AttrTypes0, 1);
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.662247729572388
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      CheckEstimator checkEstimator0 = new CheckEstimator();
      boolean[] booleanArray0 = checkEstimator0.canSplitUpClass(0, 1);
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray0));
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Integer integer0 = new Integer((-15));
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes((-15));
      checkEstimator_AttrTypes0.relational = true;
      Vector<Object> vector0 = new Vector<Object>();
      boolean boolean0 = checkEstimator_AttrTypes0.oneIsSet();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.4940727799942466
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(3);
      checkEstimator_AttrTypes0.getVectorOfAttrTypes();
      // Undeclared exception!
      try { 
        checkEstimator0.incrementingEquality(checkEstimator_AttrTypes0, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.estimators.NormalEstimator: Cannot handle date attributes!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TestInstances testInstances0 = new TestInstances();
      Instances instances0 = testInstances0.generate(" ");
      CheckEstimator checkEstimator0 = new CheckEstimator();
      Instances instances1 = new Instances(instances0, 213);
      try { 
        checkEstimator0.compareDatasets(instances0, instances1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // number of instances has changed
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertEquals(100, checkEstimator0.getNumInstances());
      
      Integer integer0 = new Integer(1);
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(1);
      Vector<Object> vector0 = new Vector<Object>();
      boolean boolean0 = checkEstimator_AttrTypes0.oneIsSet();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4179727690607136
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(2);
      boolean[] booleanArray0 = checkEstimator0.canEstimate(checkEstimator_AttrTypes0, false, 2);
      assertTrue(Arrays.equals(new boolean[] {false, true}, booleanArray0));
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6387969305833854
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes((-1));
      // Undeclared exception!
      try { 
        checkEstimator0.canHandleClassAsNthAttribute(checkEstimator_AttrTypes0, (-1), (-1), (-1), (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1' unknown!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.330732276322296
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(1);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.canSplitUpClass(checkEstimator_AttrTypes0, 1);
      checkEstimator0.canSplitUpClass(1, 1);
      CheckEstimator.PostProcessor checkEstimator_PostProcessor0 = checkEstimator0.new PostProcessor();
      assertFalse(checkEstimator0.getSilent());
      assertEquals(100, checkEstimator0.getNumInstances());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TestInstances testInstances0 = new TestInstances();
      Instances instances0 = testInstances0.generate();
      Instances instances1 = testInstances0.generate();
      CheckEstimator checkEstimator0 = new CheckEstimator();
      try { 
        checkEstimator0.compareDatasets(instances0, instances1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // instances have changed
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SimpleKMeans simpleKMeans0 = new SimpleKMeans();
      simpleKMeans0.getClusterCentroids();
      try { 
        CheckEstimator.getMinMax((Instances) null, 3, (double[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error in Program, privat method getMinMax
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TestInstances testInstances0 = new TestInstances();
      Instances instances0 = testInstances0.generate();
      CheckEstimator checkEstimator0 = new CheckEstimator();
      Instances instances1 = testInstances0.generate("@relation");
      try { 
        checkEstimator0.compareDatasets(instances0, instances1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // header has been modified
         // Attributes differ at position 1:
         // Names differ: @relationNominal1 != Nominal1
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8746228488493983
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.printAttributeSummary(37, 37);
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes1 = new CheckEstimator.AttrTypes(37);
      // Undeclared exception!
      try { 
        checkEstimator0.canHandleMissing(checkEstimator_AttrTypes1, 100, true, false, 100);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '100' unknown!
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      assertFalse(checkEstimator0.getSilent());
      
      checkEstimator0.setSilent(true);
      checkEstimator0.getOptions();
      assertTrue(checkEstimator0.getSilent());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.7549967581308246
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.printAttributeSummary(3, 4);
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getSilent());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2573775069377553
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      checkEstimator_AttrTypes0.nominal = true;
      // Undeclared exception!
      try { 
        checkEstimator0.instanceWeights(checkEstimator_AttrTypes0, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Expected to have only one type set used wrongly.
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9433483923290392
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      assertFalse(checkEstimator0.getSilent());
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
      
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(3);
      boolean boolean0 = checkEstimator_AttrTypes0.oneIsSet();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.6615632381579821
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(2);
      boolean boolean0 = checkEstimator_AttrTypes0.oneIsSet();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9498689656300794
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.EstTypes checkEstimator_EstTypes0 = new CheckEstimator.EstTypes();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = checkEstimator0.testsPerClassType(1, checkEstimator_EstTypes0);
      checkEstimator_AttrTypes0.numeric = true;
      boolean[] booleanArray0 = checkEstimator0.correctBuildInitialisation(checkEstimator_AttrTypes0, 1);
      assertEquals(2, booleanArray0.length);
      
      boolean boolean0 = checkEstimator_AttrTypes0.oneIsSet();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1216233382942833
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(3);
      checkEstimator_AttrTypes0.string = true;
      // Undeclared exception!
      try { 
        checkEstimator0.instanceWeights(checkEstimator_AttrTypes0, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Expected to have only one type set used wrongly.
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8360406249414276
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setDebug(true);
      checkEstimator0.doTests();
      assertTrue(checkEstimator0.getDebug());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setDebug(true);
      checkEstimator0.getOptions();
      assertTrue(checkEstimator0.getDebug());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.409942067362578
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.canSplitUpClass(checkEstimator_AttrTypes0, 0);
      checkEstimator0.listOptions();
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getSilent());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.m_Estimator = null;
      checkEstimator0.doTests();
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.hasClasspathProblems());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.2869898268948234
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setDebug(true);
      // Undeclared exception!
      try { 
        checkEstimator0.correctBuildInitialisation(checkEstimator_AttrTypes0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.estimators.CheckEstimator", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.3367518711090263
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes();
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setDebug(true);
      checkEstimator0.datasetIntegrity(checkEstimator_AttrTypes0, 0, true, true);
      assertTrue(checkEstimator0.getDebug());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5643848707077814
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setDebug(true);
      checkEstimator0.canHandleNClasses(checkEstimator_AttrTypes0, 95);
      assertTrue(checkEstimator0.getDebug());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.54737210381317
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CheckEstimator.AttrTypes checkEstimator_AttrTypes0 = new CheckEstimator.AttrTypes(0);
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator_AttrTypes0.getRevision();
      checkEstimator0.setDebug(true);
      checkEstimator0.canHandleClassAsNthAttribute(checkEstimator_AttrTypes0, 0, 0, 0, 0);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.347215529191517
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setDebug(true);
      checkEstimator0.canSplitUpClass(0, 0);
      assertTrue(checkEstimator0.getDebug());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setEstimator((Estimator) null);
      checkEstimator0.listOptions();
      checkEstimator0.listOptions();
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.getSilent());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TestInstances testInstances0 = new TestInstances();
      testInstances0.generate();
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setEstimator((Estimator) null);
      String[] stringArray0 = checkEstimator0.getOptions();
      assertEquals(2, stringArray0.length);
      
      boolean[] booleanArray0 = checkEstimator0.canTakeOptions();
      assertEquals(100, checkEstimator0.getNumInstances());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      checkEstimator0.setEstimator((Estimator) null);
      checkEstimator0.setDebug(true);
      checkEstimator0.incrementalEstimator();
      int[] intArray0 = new int[4];
      intArray0[0] = 120;
      intArray0[1] = 120;
      intArray0[2] = 120;
      intArray0[3] = 120;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(120, intArray0, 3082);
      binarySparseInstance0.toString();
      // Undeclared exception!
      try { 
        binarySparseInstance0.relationalValue(29);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CheckEstimator checkEstimator0 = new CheckEstimator();
      TestInstances testInstances0 = new TestInstances();
      Instances instances0 = testInstances0.generate();
      SparseInstance sparseInstance0 = new SparseInstance(98);
      instances0.add((Instance) sparseInstance0);
      checkEstimator0.compareDatasets(instances0, instances0);
      assertFalse(checkEstimator0.getSilent());
      assertFalse(checkEstimator0.hasClasspathProblems());
      assertEquals(100, checkEstimator0.getNumInstances());
  }
}
