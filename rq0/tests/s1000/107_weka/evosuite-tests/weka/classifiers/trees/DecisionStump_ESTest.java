/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 13:52:34 GMT 2018
 */

package weka.classifiers.trees;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.classifiers.Classifier;
import weka.classifiers.meta.CostSensitiveClassifier;
import weka.classifiers.trees.DecisionStump;
import weka.classifiers.trees.J48;
import weka.core.Attribute;
import weka.core.Capabilities;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DecisionStump_ESTest extends DecisionStump_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[6];
      double double0 = decisionStump0.variance(doubleArray0, doubleArray1, doubleArray1);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      SparseInstance sparseInstance0 = new SparseInstance(0);
      try { 
        decisionStump0.distributionForInstance(sparseInstance0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      Capabilities capabilities0 = decisionStump0.getCapabilities();
      assertEquals(1, capabilities0.getMinimumNumberInstances());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DecisionStump.main((String[]) null);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      SparseInstance sparseInstance0 = new SparseInstance(65);
      try { 
        decisionStump0.distributionForInstance(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.trees.DecisionStump", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      String string0 = decisionStump0.getRevision();
      assertEquals("9171", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      String string0 = decisionStump0.globalInfo();
      assertEquals("Class for building and using a decision stump. Usually used in conjunction with a boosting algorithm. Does regression (based on mean-squared error) or classification (based on entropy). Missing is treated as a separate value.", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("-},@wyzP+X <k", linkedList0);
      // Undeclared exception!
      try { 
        decisionStump0.sourceClass(attribute0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      String string0 = decisionStump0.toString();
      assertEquals("Decision Stump: No model built yet.", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      Attribute attribute0 = new Attribute("^9`5@B-AYZx/-");
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        decisionStump0.sourceClass(attribute0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.classifiers.trees.DecisionStump", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      double[][] doubleArray0 = new double[7][0];
      double[] doubleArray1 = new double[5];
      doubleArray1[1] = 1887.9850102092855;
      // Undeclared exception!
      try { 
        decisionStump0.variance(doubleArray0, doubleArray1, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.classifiers.trees.DecisionStump", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
      decisionStump0.m_ZeroR = (Classifier) costSensitiveClassifier0;
      String string0 = decisionStump0.toString();
      assertNotNull(string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      J48 j48_0 = new J48();
      decisionStump0.m_ZeroR = (Classifier) j48_0;
      try { 
        decisionStump0.distributionForInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.trees.J48", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("_:>Z", arrayList0, 6);
      decisionStump0.m_Instances = instances0;
      double double0 = decisionStump0.findSplitNumericNumeric(6);
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("a>", arrayList0, 6);
      Attribute attribute0 = new Attribute(".bsi", 6);
      arrayList0.add(attribute0);
      decisionStump0.m_Instances = instances0;
      String string0 = decisionStump0.toString();
      assertEquals("Can't print decision stump classifier!", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DecisionStump decisionStump0 = new DecisionStump();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("a>", arrayList0, 6);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute(".arff", linkedList0, 6);
      arrayList0.add(attribute0);
      decisionStump0.m_Instances = instances0;
      String string0 = decisionStump0.toString();
      assertEquals("Can't print decision stump classifier!", string0);
  }
}
