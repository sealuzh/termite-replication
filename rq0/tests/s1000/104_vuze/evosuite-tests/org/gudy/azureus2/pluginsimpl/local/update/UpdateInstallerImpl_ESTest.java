/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:19:53 GMT 2018
 */

package org.gudy.azureus2.pluginsimpl.local.update;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aelitis.azureus.core.AzureusCore;
import com.aelitis.azureus.core.impl.AzureusCoreImpl;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.gudy.azureus2.plugins.update.UpdatableComponent;
import org.gudy.azureus2.plugins.update.UpdateInstaller;
import org.gudy.azureus2.plugins.update.UpdateInstallerListener;
import org.gudy.azureus2.pluginsimpl.local.update.UpdatableComponentImpl;
import org.gudy.azureus2.pluginsimpl.local.update.UpdateCheckInstanceImpl;
import org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl;
import org.gudy.azureus2.pluginsimpl.local.update.UpdateManagerImpl;
import org.gudy.azureus2.ui.swt.update.UpdateProgressWindow;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UpdateInstallerImpl_ESTest extends UpdateInstallerImpl_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
      updateInstallerImpl0.getInstallDir();
      UpdateInstallerImpl.checkForFailedInstalls(updateManagerImpl0);
      UpdateInstallerImpl.checkForFailedInstalls(updateManagerImpl0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstaller updateInstaller0 = updateManagerImpl0.createInstaller();
      // Undeclared exception!
      try { 
        updateInstaller0.installNow((UpdateInstallerListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
      updateInstallerImpl0.getUserDir();
      UpdateInstallerImpl updateInstallerImpl1 = (UpdateInstallerImpl)updateManagerImpl0.createInstaller();
      UpdatableComponentImpl[] updatableComponentImplArray0 = new UpdatableComponentImpl[1];
      UpdatableComponentImpl updatableComponentImpl0 = new UpdatableComponentImpl((UpdatableComponent) null, false);
      updatableComponentImplArray0[0] = updatableComponentImpl0;
      UpdateCheckInstanceImpl updateCheckInstanceImpl0 = new UpdateCheckInstanceImpl(updateManagerImpl0, (byte)4, "cO0%_>+q1r*i;387*p", updatableComponentImplArray0);
      UpdateInstallerImpl updateInstallerImpl2 = (UpdateInstallerImpl)updateCheckInstanceImpl0.createInstaller();
      updateManagerImpl0.removeInstaller(updateInstallerImpl2);
      updateInstallerImpl1.appendAction("cO0%_>+q1r*i;387*p");
      UpdateProgressWindow updateProgressWindow0 = new UpdateProgressWindow();
      updateManagerImpl0.removeListener(updateProgressWindow0);
      UpdateInstallerListener updateInstallerListener0 = mock(UpdateInstallerListener.class, new ViolatedAssumptionAnswer());
      try { 
        updateInstallerImpl0.installNow(updateInstallerListener0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Other installers exist - aborting
         //
         verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          // Undeclared exception!
          try { 
            updateInstallerImpl0.installNow((UpdateInstallerListener) null);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2293362159076602
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          // Undeclared exception!
          try { 
            updateInstallerImpl0.addRemoveAction((String) null);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        updateInstallerImpl0.addResource("", (InputStream) sequenceInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // UpdateInstaller: resource addition fails
         //
         verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          updateInstallerImpl0.destroy();
          updateInstallerImpl0.destroy();
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
      updateInstallerImpl0.addMoveAction("eIg^!Rv1'/ol/;6", "Update strs");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          FileSystemHandling.shouldAllThrowIOExceptions();
          updateInstallerImpl0.addMoveAction(";Ivsh9UA/T", ";Ivsh9UA/T");
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          updateInstallerImpl0.getUserDir();
          UpdateInstaller updateInstaller0 = updateManagerImpl0.createInstaller();
          updateInstaller0.addMoveAction("Failed to write actions file", "/home/ubuntu/.azureus");
          assertNotSame(updateInstaller0, updateInstallerImpl0);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5403058252265167
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
      updateInstallerImpl0.addMoveAction("JBTyO5yj/*", "JBTyO5yj/*");
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          updateInstallerImpl0.addMoveAction("chmod,", "`>4=  GN(eO+<z");
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = null;
      try {
        updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Failed to create a temporary installation dir
         //
         verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AzureusCore azureusCore0 = AzureusCoreImpl.create();
          UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl(azureusCore0);
          UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
          updateInstallerImpl0.addChangeRightsAction("Checking progress", "Checking progress");
          UpdateInstallerImpl.checkForFailedInstalls(updateManagerImpl0);
          try { 
            updateInstallerImpl0.appendAction("Checking progress");
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Failed to write actions file
             //
             verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateManagerImpl updateManagerImpl0 = new UpdateManagerImpl((AzureusCore) null);
      UpdateInstallerImpl updateInstallerImpl0 = new UpdateInstallerImpl(updateManagerImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.azureus/updates/inst_1/install.act.utf8");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        updateInstallerImpl0.addMoveAction("org.eclipse.swt.internal.cocoa.NSImage", "org.eclipse.swt.internal.cocoa.NSImage");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to write actions file
         //
         verifyException("org.gudy.azureus2.pluginsimpl.local.update.UpdateInstallerImpl", e);
      }
  }
}
