/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:09:57 GMT 2018
 */

package com.aelitis.azureus.core.devices.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aelitis.azureus.core.devices.DeviceMediaRenderer;
import com.aelitis.azureus.core.devices.impl.DeviceDriveManager;
import com.aelitis.azureus.core.devices.impl.DeviceManagerImpl;
import com.aelitis.azureus.core.devices.impl.DeviceMediaRendererImpl;
import com.aelitis.azureus.core.devices.impl.DeviceMediaRendererManual;
import com.aelitis.azureus.core.drivedetector.DriveDetectedInfo;
import com.aelitis.azureus.core.drivedetector.DriveDetectorFactory;
import com.aelitis.azureus.core.drivedetector.impl.DriveDetectedInfoImpl;
import java.io.File;
import java.util.HashMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeviceDriveManager_ESTest extends DeviceDriveManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
      DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
      File file0 = null;
      HashMap<String, DeviceMediaRendererImpl> hashMap0 = new HashMap<String, DeviceMediaRendererImpl>();
      DriveDetectedInfoImpl driveDetectedInfoImpl0 = new DriveDetectedInfoImpl(file0, hashMap0);
      deviceDriveManager0.driveRemoved(driveDetectedInfoImpl0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
      DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
      deviceDriveManager0.driveDetected((DriveDetectedInfo) null);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
      DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
      deviceDriveManager0.search();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
      DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
      File file0 = deviceManagerImpl0.getDefaultWorkingDirectory();
      deviceDriveManager0.unMapDevice(file0);
      DeviceMediaRenderer deviceMediaRenderer0 = deviceDriveManager0.getDeviceMediaRendererByClassification("g[X#;kBz3Z-");
      assertNull(deviceMediaRenderer0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
          DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
          DeviceMediaRendererManual deviceMediaRendererManual0 = deviceDriveManager0.addDevice((String) null, (String) null, (File) null, (File) null, false);
          assertNull(deviceMediaRendererManual0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7481554572476763
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
          DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
          DriveDetectorFactory.getDeviceDetector();
          File file0 = MockFile.createTempFile("o;mHB__O?z]8", "o;mHB__O?z]8");
          DeviceMediaRendererManual deviceMediaRendererManual0 = deviceDriveManager0.addDevice("o;mHB__O?z]8", "o;mHB__O?z]8", file0, file0, true);
          deviceMediaRendererManual0.isAlive();
          MockError mockError0 = new MockError();
          deviceDriveManager0.mapDevice(deviceMediaRendererManual0, file0, file0);
          deviceDriveManager0.unMapDevice(file0);
          assertEquals(0L, file0.length());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
          DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
          deviceDriveManager0.addDevice("a^'dB~9+", "a^'dB~9+", (File) null, (File) null, false);
          // Undeclared exception!
          try { 
            deviceDriveManager0.addDevice("a^'dB~9+", "a^'dB~9+", (File) null, (File) null, false);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("com.aelitis.azureus.core.devices.impl.DeviceDriveManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
          DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
          deviceDriveManager0.addDevice("Xbox 360", "Xbox 360", (File) null, (File) null, true);
          DeviceMediaRenderer deviceMediaRenderer0 = deviceDriveManager0.getDeviceMediaRendererByClassification("Product Name");
          assertNull(deviceMediaRenderer0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6114722042607261
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          DeviceManagerImpl deviceManagerImpl0 = new DeviceManagerImpl();
          DeviceDriveManager deviceDriveManager0 = new DeviceDriveManager(deviceManagerImpl0);
          File file0 = deviceManagerImpl0.getDefaultWorkingDirectory();
          deviceDriveManager0.addDevice("K+6%eSZ-K[3#bb[@", "l|", file0, file0, false);
          DeviceMediaRendererManual deviceMediaRendererManual0 = deviceDriveManager0.addDevice("l|", "K+6%eSZ-K[3#bb[@", file0, file0, false);
          assertEquals("l|", deviceMediaRendererManual0.getName());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
