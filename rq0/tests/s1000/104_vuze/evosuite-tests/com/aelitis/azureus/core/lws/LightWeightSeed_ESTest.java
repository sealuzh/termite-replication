/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:28:15 GMT 2018
 */

package com.aelitis.azureus.core.lws;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aelitis.azureus.core.lws.LightWeightSeed;
import com.aelitis.azureus.core.lws.LightWeightSeedAdapter;
import com.aelitis.azureus.core.lws.LightWeightSeedManager;
import com.aelitis.azureus.core.networkmanager.ConnectionEndpoint;
import com.aelitis.azureus.core.networkmanager.impl.NetworkConnectionImpl;
import com.aelitis.azureus.core.networkmanager.impl.tcp.ProtocolEndpointTCP;
import com.aelitis.azureus.core.networkmanager.impl.tcp.TCPTransportImpl;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTMessageDecoder;
import com.aelitis.azureus.core.peermanager.messaging.bittorrent.BTMessageEncoder;
import java.io.File;
import java.net.InetSocketAddress;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.gudy.azureus2.core3.disk.DiskManagerReadRequest;
import org.gudy.azureus2.core3.disk.DiskManagerReadRequestListener;
import org.gudy.azureus2.core3.logging.LogRelation;
import org.gudy.azureus2.core3.peer.PEPeer;
import org.gudy.azureus2.core3.torrent.TOTorrent;
import org.gudy.azureus2.core3.util.AEDiagnostics;
import org.gudy.azureus2.core3.util.HashWrapper;
import org.gudy.azureus2.plugins.download.savelocation.SaveLocationChange;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LightWeightSeed_ESTest extends LightWeightSeed_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("LWS: ");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "LWS: ", (HashWrapper) null, uRL0, mockFile0, (LightWeightSeedAdapter) null);
      Class<Integer> class0 = Integer.class;
      lightWeightSeed0.queryForClass(class0);
      lightWeightSeed0.checkDeactivation();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-21);
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      SaveLocationChange saveLocationChange0 = new SaveLocationChange();
      File file0 = saveLocationChange0.download_location;
      BTMessageDecoder bTMessageDecoder0 = new BTMessageDecoder();
      ProtocolEndpointTCP protocolEndpointTCP0 = mock(ProtocolEndpointTCP.class, new ViolatedAssumptionAnswer());
      doReturn((ConnectionEndpoint) null).when(protocolEndpointTCP0).getConnectionEndpoint();
      byte[][] byteArray1 = new byte[2][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      TCPTransportImpl tCPTransportImpl0 = new TCPTransportImpl(protocolEndpointTCP0, true, true, byteArray1);
      BTMessageEncoder bTMessageEncoder0 = new BTMessageEncoder();
      NetworkConnectionImpl networkConnectionImpl0 = new NetworkConnectionImpl(tCPTransportImpl0, bTMessageEncoder0, bTMessageDecoder0);
      File file1 = saveLocationChange0.torrent_location;
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, (String) null, hashWrapper0, (URL) null, (File) null, lightWeightSeedAdapter0);
      lightWeightSeed0.manualRoute(networkConnectionImpl0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-124);
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-124);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-124);
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("Au{']@Iv,kEH", "Au{']@Iv,kEH");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager lightWeightSeedManager1 = new LightWeightSeedManager();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      doReturn((TOTorrent) null).when(lightWeightSeedAdapter0).getTorrent(any(byte[].class) , any(java.net.URL.class) , any(java.io.File.class));
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "Au{']@Iv,kEH", hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.getSize();
      // Undeclared exception!
      try { 
        lightWeightSeed0.getTOTorrent(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Torrent not available
         //
         verifyException("com.aelitis.azureus.core.lws.LightWeightSeed", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B`x)&yb|");
      URL uRL0 = MockURL.getHttpExample();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "B`x)&yb|", (HashWrapper) null, uRL0, mockFile0, lightWeightSeedAdapter0);
      // Undeclared exception!
      try { 
        lightWeightSeed0.activate("B`x)&yb|", (byte) (-112));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aelitis.azureus.core.lws.LightWeightSeed", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2275247137250096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("1^%8|FrkXc", "1^%8|FrkXc");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed((LightWeightSeedManager) null, "1^%8|FrkXc", hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.start();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LightWeightSeedManager lightWeightSeedManager0 = new LightWeightSeedManager();
      LightWeightSeedManager.getSingleton();
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed((LightWeightSeedManager) null, "}7KCKltfb|g_Zpm*zjD", (HashWrapper) null, (URL) null, (File) null, (LightWeightSeedAdapter) null);
      lightWeightSeed0.isPeerSourceEnabled("}7KCKltfb|g_Zpm*zjD");
      // Undeclared exception!
      try { 
        lightWeightSeed0.activateRequest((InetSocketAddress) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aelitis.azureus.core.lws.LightWeightSeed", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LightWeightSeedManager lightWeightSeedManager0 = new LightWeightSeedManager();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-54);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-54);
      MockFile mockFile0 = new MockFile("d$1j", "d$1j");
      URL uRL0 = mockFile0.toURL();
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, (String) null, hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.ensureActive("d$1j", (byte)34);
      Class<Integer> class0 = Integer.class;
      lightWeightSeed0.queryForClass(class0);
      LightWeightSeedAdapter lightWeightSeedAdapter1 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed1 = new LightWeightSeed(lightWeightSeedManager0, "d$1j", hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter1);
      lightWeightSeed1.getDescription();
      System.setCurrentTimeMillis((byte)0);
      LogRelation logRelation0 = lightWeightSeed1.getRelation();
      assertSame(logRelation0, lightWeightSeed1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)87;
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("Tracker[");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "", hashWrapper0, uRL0, mockFile0, (LightWeightSeedAdapter) null);
      lightWeightSeed0.ensureActive((String) null, (byte) (-125));
      lightWeightSeed0.getQueryableInterfaces();
      File file0 = lightWeightSeed0.getDataLocation();
      assertFalse(file0.isDirectory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.649158683274018
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("1^%8|FrkXc");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "1^%8|FrkXc", hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.start();
      lightWeightSeed0.ensureActive("1^%8|FrkXc", (byte) (-71));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9661755171495707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("' failed - already running");
      URL uRL0 = MockURL.getHttpExample();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "' failed - already running", hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.start();
      lightWeightSeed0.start();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B`x)&fb|");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed((LightWeightSeedManager) null, "B`x)&fb|", (HashWrapper) null, uRL0, mockFile0, lightWeightSeedAdapter0);
      // Undeclared exception!
      try { 
        lightWeightSeed0.getRelationText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aelitis.azureus.core.lws.LightWeightSeed", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("k[");
      LightWeightSeedManager lightWeightSeedManager0 = new LightWeightSeedManager();
      URL uRL0 = MockURL.getHttpExample();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "k[", hashWrapper0, uRL0, mockFile0, lightWeightSeedAdapter0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("k[", 0);
      lightWeightSeed0.activateRequest(mockInetSocketAddress0);
      lightWeightSeed0.start();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B`x)&yb|", "B`x)&yb|");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed((LightWeightSeedManager) null, "B`x)&yb|", (HashWrapper) null, uRL0, mockFile0, lightWeightSeedAdapter0);
      AEDiagnostics.flushPendingLogs();
      // Undeclared exception!
      try { 
        lightWeightSeed0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aelitis.azureus.core.lws.LightWeightSeed", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LightWeightSeedManager lightWeightSeedManager0 = new LightWeightSeedManager();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      MockFile mockFile0 = new MockFile(") nx0mDH1Y");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager.getSingleton();
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      mockFile0.getAbsoluteFile();
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "", hashWrapper0, uRL0, mockFile0, (LightWeightSeedAdapter) null);
      lightWeightSeed0.ensureActive("rk", (byte)0);
      lightWeightSeed0.start();
      hashWrapper0.toBase32String();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((byte)0);
      lightWeightSeed0.deactivateRequest(mockInetSocketAddress0);
      assertEquals(0, mockInetSocketAddress0.getPort());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B`x)&yb|", "B`x)&yb|");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "B`x)&yb|", (HashWrapper) null, uRL0, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.getTorrent();
      // Undeclared exception!
      try { 
        lightWeightSeed0.start();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.aelitis.azureus.core.lws.LightWeightSeed", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("PiecesView.DistributionView.RarestAvl");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "PiecesView.DistributionView.RarestAvl", (HashWrapper) null, uRL0, mockFile0, lightWeightSeedAdapter0);
      DiskManagerReadRequestListener diskManagerReadRequestListener0 = mock(DiskManagerReadRequestListener.class, new ViolatedAssumptionAnswer());
      lightWeightSeed0.enqueueReadRequest((PEPeer) null, (DiskManagerReadRequest) null, diskManagerReadRequestListener0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.131829652586911
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("1^%8|FrkXc", "1^%8|FrkXc");
      URL uRL0 = mockFile0.toURL();
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "1^%8|FrkXc", hashWrapper0, uRL0, mockFile0, (LightWeightSeedAdapter) null);
      lightWeightSeed0.start();
      lightWeightSeed0.stop();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1006789212792607
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HashWrapper hashWrapper0 = new HashWrapper(byteArray0);
      MockFile mockFile0 = new MockFile("");
      LightWeightSeedManager lightWeightSeedManager0 = LightWeightSeedManager.getSingleton();
      mockFile0.setLastModified(0L);
      LightWeightSeedAdapter lightWeightSeedAdapter0 = mock(LightWeightSeedAdapter.class, new ViolatedAssumptionAnswer());
      LightWeightSeed lightWeightSeed0 = new LightWeightSeed(lightWeightSeedManager0, "", hashWrapper0, (URL) null, mockFile0, lightWeightSeedAdapter0);
      lightWeightSeed0.start();
      lightWeightSeed0.start();
  }
}
