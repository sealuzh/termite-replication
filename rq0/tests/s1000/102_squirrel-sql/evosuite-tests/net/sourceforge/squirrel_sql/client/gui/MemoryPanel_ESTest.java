/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 13:47:48 GMT 2018
 */

package net.sourceforge.squirrel_sql.client.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.MemoryPanel;
import net.sourceforge.squirrel_sql.client.resources.SquirrelResources;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemoryPanel_ESTest extends MemoryPanel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IApplication iApplication0 = mock(IApplication.class, new ViolatedAssumptionAnswer());
      doReturn((SquirrelResources) null).when(iApplication0).getResources();
      MemoryPanel memoryPanel0 = null;
      try {
        memoryPanel0 = new MemoryPanel(iApplication0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.gui.MemoryPanel", e);
      }
  }
}
