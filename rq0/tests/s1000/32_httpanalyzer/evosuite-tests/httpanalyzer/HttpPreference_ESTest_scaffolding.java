/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Aug 07 13:43:11 GMT 2018
 */

package httpanalyzer;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class HttpPreference_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "httpanalyzer.HttpPreference"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/32_httpanalyzer"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(HttpPreference_ESTest_scaffolding.class.getClassLoader() ,
      "httpanalyzer.HttpAnalyzerView",
      "org.jdesktop.application.AbstractBean",
      "httpanalyzer.HttpPreference",
      "org.jdesktop.application.View",
      "org.jdesktop.application.FrameView"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(HttpPreference_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "httpanalyzer.HttpPreference",
      "org.jdesktop.application.Task$BlockingScope",
      "org.jdesktop.application.AbstractBean",
      "org.jdesktop.application.Application",
      "org.jdesktop.application.SingleFrameApplication",
      "httpanalyzer.HttpAnalyzerApp",
      "org.jdesktop.application.AbstractBean$EDTPropertyChangeSupport",
      "org.jdesktop.application.ApplicationContext",
      "org.jdesktop.application.ResourceManager",
      "org.jdesktop.application.ActionManager",
      "org.jdesktop.application.LocalStorage",
      "org.jdesktop.application.SessionStorage",
      "org.jdesktop.application.SessionStorage$WindowProperty",
      "org.jdesktop.application.SessionStorage$TabbedPaneProperty",
      "org.jdesktop.application.SessionStorage$SplitPaneProperty",
      "org.jdesktop.application.SessionStorage$TableProperty",
      "org.jdesktop.application.TaskService",
      "org.jdesktop.application.TaskService$TaskPCL",
      "org.jdesktop.application.View",
      "org.jdesktop.application.FrameView",
      "httpanalyzer.HttpAnalyzerView",
      "org.jdesktop.beansbinding.BindingGroup",
      "org.jdesktop.application.ResourceConverter$BooleanResourceConverter",
      "org.jdesktop.application.ResourceConverter$INumberResourceConverter",
      "org.jdesktop.application.ResourceConverter$IntegerResourceConverter",
      "org.jdesktop.application.ResourceConverter$MessageFormatResourceConverter",
      "org.jdesktop.application.ResourceConverter$NumberResourceConverter",
      "org.jdesktop.application.ResourceConverter$FloatResourceConverter",
      "org.jdesktop.application.ResourceConverter$DoubleResourceConverter",
      "org.jdesktop.application.ResourceConverter$LongResourceConverter",
      "org.jdesktop.application.ResourceConverter$ShortResourceConverter",
      "org.jdesktop.application.ResourceConverter$ByteResourceConverter",
      "org.jdesktop.application.ResourceConverter$URLResourceConverter",
      "org.jdesktop.application.ResourceConverter$URIResourceConverter",
      "org.jdesktop.application.ResourceConverter",
      "org.jdesktop.application.ResourceMap$ColorStringConverter",
      "org.jdesktop.application.ResourceMap$IconStringConverter",
      "org.jdesktop.application.ResourceMap$ImageStringConverter",
      "org.jdesktop.application.ResourceMap$FontStringConverter",
      "org.jdesktop.application.ResourceMap$KeyStrokeStringConverter",
      "org.jdesktop.application.ResourceMap$DimensionStringConverter",
      "org.jdesktop.application.ResourceMap$PointStringConverter",
      "org.jdesktop.application.ResourceMap$RectangleStringConverter",
      "org.jdesktop.application.ResourceMap$InsetsStringConverter",
      "org.jdesktop.application.ResourceMap$EmptyBorderStringConverter",
      "org.jdesktop.application.ResourceMap",
      "httpanalyzer.HttpAnalyzerView$4",
      "httpanalyzer.HttpAnalyzerView$5",
      "org.jdesktop.application.ApplicationActionMap",
      "org.jdesktop.application.ApplicationAction",
      "org.jdesktop.application.MnemonicText",
      "org.jdesktop.application.Application$1",
      "httpanalyzer.HttpFileUtils",
      "httpanalyzer.HttpFileUtils$MyTxtFilter",
      "httpanalyzer.HttpFileUtils$MyXmlFilter"
    );
  }
}
