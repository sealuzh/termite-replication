/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:36:07 GMT 2018
 */

package dk.statsbiblioteket.summa.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dk.statsbiblioteket.summa.common.Logging;
import dk.statsbiblioteket.summa.common.Record;
import dk.statsbiblioteket.summa.common.filter.Payload;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.impl.Jdk13LumberjackLogger;
import org.apache.commons.logging.impl.Jdk14Logger;
import org.apache.commons.logging.impl.Log4JLogger;
import org.apache.commons.logging.impl.NoOpLog;
import org.apache.commons.logging.impl.SLF4JLocationAwareLog;
import org.apache.commons.logging.impl.SimpleLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Logging_ESTest extends Logging_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("");
      Object[] objectArray0 = new Object[1];
      Logging.log((Log) jdk13LumberjackLogger0, logging_LogLevel0, "", objectArray0);
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Logging logging0 = new Logging();
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.fatal("process", "process", (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Logging logging0 = new Logging();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.TRACE;
      Logging.logProcess("fatal", "process", logging_LogLevel0, "fatal");
      Logging.log("process", logging0.fatalLog, logging_LogLevel0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Logging logging0 = new Logging();
      MockException mockException0 = new MockException("process");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      MockException mockException1 = new MockException(mockException0);
      Logging.logProcess("fatal", "process", logging_LogLevel0, "", (Throwable) mockException1);
      Logging.log((Throwable) mockException0, logging0.fatalLog, logging_LogLevel0);
      assertFalse(mockException0.equals((Object)mockException1));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Record record0 = new Record();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.DEBUG;
      MockThrowable mockThrowable0 = new MockThrowable(";");
      Logging.logProcess(";", "ValidationState", logging_LogLevel0, record0, (Throwable) mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: ;", mockThrowable0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9649629230074277
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Record record0 = new Record();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.INFO;
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.logProcess(";", "ValidationState", logging_LogLevel0, record0, (Throwable) mockThrowable0);
      assertEquals(1392409281320L, record0.getLastModified());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.INFO;
      // Undeclared exception!
      try { 
        Logging.log("j>g5X%", (Log) null, logging_LogLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dk.statsbiblioteket.summa.common.Logging", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Logging logging0 = new Logging();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Logging.log("fatal", logging0.processLog, logging_LogLevel0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Logging.fatal("' with values [", "' with values [");
      MockException mockException0 = new MockException("' with values [");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.INFO;
      boolean boolean0 = Logging.isProcessLogLevel(logging_LogLevel0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Logging.logProcess(";", ";", logging_LogLevel0, record0, (Throwable) mockThrowable0);
      assertNull(record0.getId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("#ZD-[|A&NQ5=f'vD");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      Logging.log("#ZD-[|A&NQ5=f'vD", (Log) jdk13LumberjackLogger0, logging_LogLevel0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "P\\_sn9J_x}u19rwpKK0";
      Logging.getSnippet("P_sn9J_x}u19rwpKK0", 6);
      Logging logging0 = new Logging();
      Logging.fatal(logging0.processLog, "fatal", ">`^vA");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.INFO;
      Throwable throwable0 = null;
      Logging.log("process", logging0.fatalLog, logging_LogLevel0, (Throwable) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        Logging.LogLevel.valueOf("P_sn9J_x}u19rwpKK0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant dk.statsbiblioteket.summa.common.Logging.LogLevel.P_sn9J_x}u19rwpKK0
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Logging logging0 = new Logging();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.DEBUG;
      MockException mockException0 = new MockException("fatal");
      Logging.log(logging0.fatalLog, logging_LogLevel0, (Throwable) mockException0, "fatal", (Object[]) null);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Logging logging0 = new Logging();
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Logging.log("fatal", logging0.fatalLog, logging_LogLevel0, (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Logging.getSnippet((String) null);
      Logging.LogLevel.values();
      // Undeclared exception!
      try { 
        Logging.LogLevel.valueOf("[null]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant dk.statsbiblioteket.summa.common.Logging.LogLevel.[null]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Logging logging0 = new Logging();
      MockException mockException0 = new MockException();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      Logging.logProcess((String) null, (String) null, logging_LogLevel0, "", (Throwable) mockException0);
      Logging.LogLevel logging_LogLevel1 = Logging.LogLevel.INFO;
      Logging.log((Throwable) mockException0, logging0.fatalLog, logging_LogLevel1);
      assertFalse(logging_LogLevel1.equals((Object)logging_LogLevel0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9164648855394713
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable("ValidationState");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.TRACE;
      Logging.logProcess(";", "ValidationState", logging_LogLevel0, record0, (Throwable) mockThrowable0);
      assertFalse(record0.hasMeta());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Logging logging0 = new Logging();
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      Logging.fatal(logging0.processLog, "", "", (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      MockException mockException0 = new MockException();
      Logging.logProcess("+)U%Sj", "+)U%Sj", logging_LogLevel0, (Payload) null, (Throwable) mockException0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Payload payload0 = new Payload(mockFileInputStream0);
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Logging.logProcess("", "filename", logging_LogLevel0, payload0);
      assertFalse(payload0.hasData());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable("ValidationState");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      Logging.logProcess(";", "ValidationState", logging_LogLevel0, record0, (Throwable) mockThrowable0);
      assertFalse(record0.isHasRelations());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.887694275799104
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable(";");
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("ValidationState");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Logging.log((Log) jdk14Logger0, logging_LogLevel0, (Throwable) mockThrowable0, "ValidationState", (Object[]) null);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: ;", mockThrowable0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      // Undeclared exception!
      try { 
        Logging.logProcess(";", ";", logging_LogLevel0, record0, (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Logging.logProcess("KTv-?pxuVht;X", "KTv-?pxuVht;X", logging_LogLevel0, (Record) null, (Throwable) null);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable("ValidationState");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Logging.logProcess(";", "ValidationState", logging_LogLevel0, (Record) null, (Throwable) mockThrowable0);
      assertEquals("ValidationState", mockThrowable0.getMessage());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Logging.fatal((String) null, "process");
      MockException mockException0 = new MockException("process");
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Record record0 = new Record();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.DEBUG;
      MockThrowable mockThrowable0 = new MockThrowable(";");
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("ValidationState");
      Logging.log((Log) jdk14Logger0, logging_LogLevel0, (Throwable) mockThrowable0, ";", (Object[]) null);
      assertEquals(";", mockThrowable0.getMessage());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8982053397041498
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("|?&@rz%9y");
      MockException mockException0 = new MockException("|?&@rz%9y");
      Object[] objectArray0 = new Object[1];
      Logging.log((Log) jdk13LumberjackLogger0, logging_LogLevel0, (Throwable) mockException0, "|?&@rz%9y", objectArray0);
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Logging logging0 = new Logging();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.TRACE;
      Logging.logProcess((String) null, "process", logging_LogLevel0, (Payload) null);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      boolean boolean0 = Logging.isProcessLogLevel(logging_LogLevel0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      boolean boolean0 = Logging.isProcessLogLevel(logging_LogLevel0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8981370031878679
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable(";");
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("ValidationState");
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Object[] objectArray0 = new Object[0];
      Logging.log((Log) jdk14Logger0, logging_LogLevel0, (Throwable) mockThrowable0, "ValidationState", objectArray0);
      assertEquals(";", mockThrowable0.getMessage());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.DEBUG;
      boolean boolean0 = Logging.isProcessLogLevel(logging_LogLevel0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      boolean boolean0 = Logging.isProcessLogLevel(logging_LogLevel0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      Logging.logProcess((String) null, "ValidationState", logging_LogLevel0, record0, (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6095464819696321
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Logging logging0 = new Logging();
      Record record0 = Record.createDeletedRecord("fatal", "fatal");
      Payload payload0 = new Payload(record0);
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      // Undeclared exception!
      try { 
        Logging.logProcess("luceneDocument", "searchDescriptor", logging_LogLevel0, payload0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Logging.logProcess((String) null, ",At;S9>)z@V.q'-}=", logging_LogLevel0, (Payload) null);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Record record0 = new Record();
      MockThrowable mockThrowable0 = new MockThrowable();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      // Undeclared exception!
      try { 
        Logging.logProcess((String) null, ";", logging_LogLevel0, record0, (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Logging logging0 = new Logging();
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte) (-56);
      byteArray0[6] = (byte) (-24);
      byteArray0[7] = (byte) (-24);
      byteArray0[8] = (byte)3;
      Record record0 = new Record("dot-end", "fatal", byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Payload payload0 = new Payload(byteArrayInputStream0, (Record) null);
      Payload payload1 = payload0.clone();
      payload1.setRecord(record0);
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Logging.logProcess("filename", "csv", logging_LogLevel0, payload1);
      Log4JLogger log4JLogger0 = new Log4JLogger();
      Logging.LogLevel.values();
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        Logging.log((Throwable) mockThrowable0, (Log) log4JLogger0, logging_LogLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Record record0 = new Record();
      SimpleLog simpleLog0 = new SimpleLog(";");
      MockException mockException0 = new MockException();
      simpleLog0.setLevel((-1));
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.ERROR;
      Object[] objectArray0 = new Object[0];
      Logging.log((Log) simpleLog0, logging_LogLevel0, (Throwable) mockException0, "ValidationState", objectArray0);
      assertTrue(simpleLog0.isTraceEnabled());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.8982053397041498
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Record record0 = new Record();
      SimpleLog simpleLog0 = new SimpleLog(";");
      MockException mockException0 = new MockException("ValidationState");
      simpleLog0.setLevel(5);
      Object[] objectArray0 = new Object[17];
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      Logging.log((Log) simpleLog0, logging_LogLevel0, (Throwable) mockException0, ";", objectArray0);
      assertEquals(1, SimpleLog.LOG_LEVEL_TRACE);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.8981370031878679
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Record record0 = new Record();
      SimpleLog simpleLog0 = new SimpleLog("ValidationState");
      MockException mockException0 = new MockException("ValidationState");
      simpleLog0.setLevel(4);
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) simpleLog0;
      Logging.log((Log) simpleLog0, logging_LogLevel0, (Throwable) mockException0, "", objectArray0);
      assertEquals(0, SimpleLog.LOG_LEVEL_ALL);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.8018185525433373
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog("/4*R#0+w");
      MockException mockException0 = new MockException((String) null);
      simpleLog0.setLevel(2);
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.WARN;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) logging_LogLevel0;
      Logging.log((Log) simpleLog0, logging_LogLevel0, (Throwable) mockException0, "/4*R#0+w", objectArray0);
      assertEquals(3, objectArray0.length);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog("/4*R#0+w");
      MockException mockException0 = new MockException((String) null);
      simpleLog0.setLevel(2);
      Object[] objectArray0 = new Object[3];
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.TRACE;
      Logging.log((Log) simpleLog0, logging_LogLevel0, (Throwable) mockException0, (String) null, objectArray0);
      assertEquals(2, simpleLog0.getLevel());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2335827656236988
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockException mockException0 = new MockException();
      SimpleLog simpleLog0 = new SimpleLog("3ox2");
      simpleLog0.setLevel(6);
      simpleLog0.debug((Object) mockException0, (Throwable) mockException0);
      Object[] objectArray0 = new Object[9];
      MockException mockException1 = new MockException();
      Logging.LogLevel logging_LogLevel0 = Logging.LogLevel.FATAL;
      Logging.log((Log) simpleLog0, logging_LogLevel0, (Throwable) mockException1, "", objectArray0);
      NoOpLog noOpLog0 = new NoOpLog("");
      Logging.LogLevel logging_LogLevel1 = Logging.LogLevel.ERROR;
      Logging.log((Throwable) mockException0, (Log) noOpLog0, logging_LogLevel1);
      assertFalse(mockException0.equals((Object)mockException1));
  }
}
