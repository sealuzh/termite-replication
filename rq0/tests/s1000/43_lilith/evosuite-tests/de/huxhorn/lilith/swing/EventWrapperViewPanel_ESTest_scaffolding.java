/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Aug 07 14:31:57 GMT 2018
 */

package de.huxhorn.lilith.swing;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class EventWrapperViewPanel_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "de.huxhorn.lilith.swing.EventWrapperViewPanel"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/43_lilith"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
    java.lang.System.setProperty("sun.jnu.encoding", "UTF-8"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EventWrapperViewPanel_ESTest_scaffolding.class.getClassLoader() ,
      "de.huxhorn.lilith.data.logging.LoggingEvent",
      "de.huxhorn.lilith.conditions.EventContainsCondition",
      "de.huxhorn.sulky.tasks.Task",
      "de.huxhorn.sulky.tasks.TaskListener",
      "de.huxhorn.sulky.conditions.ConditionGroup",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindResultListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$ReplaceFilterAction",
      "de.huxhorn.sulky.tasks.AbstractProgressingCallable",
      "de.huxhorn.lilith.data.eventsource.SourceIdentifier",
      "de.huxhorn.sulky.conditions.Condition",
      "org.xhtmlrenderer.simple.XHTMLPanel",
      "de.huxhorn.lilith.debug.DebugProgressingCallable",
      "de.huxhorn.sulky.buffers.ResetOperation",
      "org.xhtmlrenderer.swing.RootPanel",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$MyFocusTraversalPolicy",
      "de.huxhorn.lilith.swing.table.model.BufferTableModel",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$CloseFindAction",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$TableRowSelectionListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$EventViewMouseListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$SplitPaneListener",
      "de.huxhorn.lilith.swing.table.ColorsProvider",
      "org.xhtmlrenderer.extend.NamespaceHandler",
      "org.xhtmlrenderer.swing.NoNamespaceHandler",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindPreviousAction",
      "org.xhtmlrenderer.simple.extend.XhtmlNamespaceHandler",
      "de.huxhorn.lilith.engine.EventSource",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$StatusTableModelListener",
      "org.xhtmlrenderer.simple.extend.XhtmlCssOnlyNamespaceHandler",
      "org.xhtmlrenderer.swing.SelectionHighlighter$CopyAction",
      "org.xhtmlrenderer.extend.UserInterface",
      "de.huxhorn.lilith.conditions.LilithCondition",
      "de.huxhorn.lilith.conditions.GroovyCondition",
      "de.huxhorn.sulky.tasks.TaskManager",
      "de.huxhorn.sulky.tasks.ProgressingCallable",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindTextFieldListener",
      "de.huxhorn.lilith.swing.ViewContainer",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$MessageFocusListener",
      "de.huxhorn.lilith.swing.TabbedLoggingViewContainer",
      "de.huxhorn.lilith.buffers.SoftReferenceCachingBuffer",
      "de.huxhorn.lilith.swing.table.LoggingEventViewTable",
      "de.huxhorn.lilith.conditions.MessageContainsCondition",
      "de.huxhorn.lilith.swing.LoggingViewState",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindTypeSelectionActionListener",
      "de.huxhorn.lilith.swing.table.EventWrapperViewTable",
      "de.huxhorn.sulky.buffers.DisposeOperation",
      "org.xhtmlrenderer.swing.SelectionHighlighter",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$TableMouseListener",
      "org.xhtmlrenderer.swing.FSMouseListener",
      "de.huxhorn.lilith.conditions.LoggerEqualsCondition",
      "de.huxhorn.sulky.conditions.Or",
      "org.xhtmlrenderer.swing.BasicPanel",
      "de.huxhorn.lilith.swing.TabbedPaneViewContainer",
      "de.huxhorn.lilith.swing.table.model.EventWrapperTableModel",
      "de.huxhorn.sulky.buffers.Buffer",
      "de.huxhorn.lilith.swing.MainFrame",
      "de.huxhorn.lilith.engine.impl.EventSourceImpl",
      "org.xhtmlrenderer.simple.extend.FormSubmissionListener",
      "de.huxhorn.lilith.swing.TabbedAccessViewContainer",
      "de.huxhorn.lilith.swing.table.model.RowBasedTableModel",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$1",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$ScrollbarChangeListner",
      "de.huxhorn.lilith.buffers.FilteringBuffer",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$EventWrapperViewChangeListener",
      "de.huxhorn.lilith.swing.LoggingEventViewPanel",
      "org.xhtmlrenderer.simple.FSScrollPane",
      "de.huxhorn.lilith.swing.AccessEventViewPanel",
      "de.huxhorn.lilith.data.eventsource.EventWrapper",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindNextAction"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("de.huxhorn.lilith.swing.EventWrapperViewPanel", false, EventWrapperViewPanel_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("de.huxhorn.sulky.tasks.Task", false, EventWrapperViewPanel_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EventWrapperViewPanel_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "de.huxhorn.lilith.swing.EventWrapperViewPanel",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindResultListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$StatusTableModelListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$TableRowSelectionListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$EventViewMouseListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$MessageFocusListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$SplitPaneListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$ScrollbarChangeListner",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$TableMouseListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$EventWrapperViewChangeListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$MyFocusTraversalPolicy",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$CloseFindAction",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindTypeSelectionActionListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindPreviousAction",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindNextAction",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$ReplaceFilterAction",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$FindTextFieldListener",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$ScrollToBottomRunnable",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel$SelectFirstEventRunnable",
      "de.huxhorn.sulky.swing.KeyStrokes",
      "de.huxhorn.sulky.formatting.HumanReadable$Unit",
      "de.huxhorn.sulky.formatting.HumanReadable",
      "de.huxhorn.lilith.data.eventsource.TransferSizeInfo",
      "de.huxhorn.lilith.data.logging.LoggingEvent$Level",
      "de.huxhorn.lilith.swing.table.ColorScheme",
      "de.huxhorn.lilith.data.access.HttpStatus$Type",
      "de.huxhorn.lilith.swing.ApplicationPreferences",
      "de.huxhorn.lilith.swing.SplashScreen",
      "de.huxhorn.lilith.data.eventsource.EventIdentifier",
      "de.huxhorn.lilith.data.eventsource.EventWrapper",
      "de.huxhorn.lilith.swing.MainFrame",
      "de.huxhorn.sulky.tasks.AbstractProgressingCallable",
      "de.huxhorn.lilith.debug.DebugProgressingCallable",
      "de.huxhorn.sulky.buffers.SerializingFileBuffer",
      "de.huxhorn.sulky.buffers.SoftReferenceCachingBuffer$ReferenceQueueRunnable",
      "de.huxhorn.sulky.buffers.SoftReferenceCachingBuffer",
      "de.huxhorn.sulky.conditions.BooleanValues",
      "de.huxhorn.lilith.engine.impl.EventSourceImpl",
      "de.huxhorn.lilith.swing.LoggingEventViewPanel",
      "de.huxhorn.sulky.conditions.And",
      "org.xhtmlrenderer.swing.NaiveUserAgent",
      "org.xhtmlrenderer.layout.SharedContext",
      "org.xhtmlrenderer.context.AWTFontResolver",
      "org.xhtmlrenderer.swing.SwingReplacedElementFactory",
      "org.xhtmlrenderer.simple.extend.DefaultFormSubmissionListener",
      "org.xhtmlrenderer.context.StyleReference",
      "org.xhtmlrenderer.context.StylesheetFactoryImpl",
      "org.xhtmlrenderer.context.StylesheetFactoryImpl$1",
      "org.xhtmlrenderer.css.parser.CSSParser",
      "org.xhtmlrenderer.context.StylesheetFactoryImpl$2",
      "org.xhtmlrenderer.css.parser.Lexer",
      "org.xhtmlrenderer.util.XRLog",
      "org.xhtmlrenderer.util.Configuration",
      "org.xhtmlrenderer.DefaultCSSMarker",
      "org.xhtmlrenderer.util.GeneralUtil",
      "org.xhtmlrenderer.util.JDKXRLogger",
      "org.xhtmlrenderer.swing.Java2DTextRenderer",
      "org.xhtmlrenderer.render.RenderingContext",
      "de.huxhorn.lilith.data.eventsource.SourceIdentifier",
      "de.huxhorn.sulky.buffers.BasicBufferIterator",
      "de.huxhorn.sulky.io.IOUtilities",
      "de.huxhorn.lilith.conditions.MessageContainsCondition",
      "de.huxhorn.lilith.conditions.EventContainsCondition",
      "de.huxhorn.lilith.swing.table.model.BufferTableModel",
      "de.huxhorn.lilith.swing.table.model.EventWrapperTableModel",
      "de.huxhorn.lilith.swing.table.model.BufferTableModel$TableChangeDetectionRunnable",
      "de.huxhorn.lilith.conditions.GroovyCondition",
      "de.huxhorn.sulky.buffers.BlockingCircularBuffer",
      "de.huxhorn.sulky.buffers.OverwritingCircularBuffer",
      "de.huxhorn.sulky.codec.DelegatingCodecBase",
      "de.huxhorn.sulky.codec.CompressingSerializableCodec",
      "de.huxhorn.sulky.codec.SerializableEncoder",
      "de.huxhorn.sulky.codec.SerializableDecoder",
      "de.huxhorn.sulky.codec.filebuffer.DefaultFileHeaderStrategy",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataCodec",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataEncoder",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataDecoder",
      "de.huxhorn.sulky.codec.filebuffer.CodecFileBuffer",
      "de.huxhorn.sulky.codec.filebuffer.DefaultIndexStrategy",
      "de.huxhorn.lilith.swing.AccessEventViewPanel",
      "org.xhtmlrenderer.swing.RootPanel",
      "org.xhtmlrenderer.swing.BasicPanel",
      "org.xhtmlrenderer.simple.XHTMLPanel",
      "org.xhtmlrenderer.swing.ScalableXHTMLPanel",
      "org.xhtmlrenderer.swing.MouseTracker",
      "org.xhtmlrenderer.swing.BasicPanel$1",
      "org.xhtmlrenderer.swing.HoverListener",
      "org.xhtmlrenderer.swing.LinkListener",
      "org.xhtmlrenderer.swing.CursorListener",
      "org.xhtmlrenderer.simple.XHTMLPanel$1",
      "de.huxhorn.sulky.conditions.Not",
      "de.huxhorn.lilith.conditions.LoggerEqualsCondition",
      "de.huxhorn.lilith.swing.LoggingViewState",
      "de.huxhorn.lilith.swing.ViewContainer",
      "de.huxhorn.lilith.swing.TabbedPaneViewContainer",
      "de.huxhorn.lilith.swing.TabbedAccessViewContainer",
      "org.apache.commons.io.IOUtils",
      "de.huxhorn.sulky.codec.SerializableCodec",
      "org.xhtmlrenderer.layout.LayoutContext",
      "org.xhtmlrenderer.context.ContentFunctionFactory",
      "org.xhtmlrenderer.context.ContentFunctionFactory$PageNumberFunction",
      "org.xhtmlrenderer.context.ContentFunctionFactory$PageCounterFunction",
      "org.xhtmlrenderer.context.ContentFunctionFactory$PagesCounterFunction",
      "org.xhtmlrenderer.context.ContentFunctionFactory$TargetCounterFunction",
      "org.xhtmlrenderer.context.ContentFunctionFactory$LeaderFunction",
      "org.xhtmlrenderer.layout.StyleTracker",
      "org.xhtmlrenderer.css.parser.property.AbstractPropertyBuilder",
      "org.xhtmlrenderer.css.constants.IdentValue",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$SingleIdent",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$GenericBorderStyle",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$GenericBorderWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LengthLikeWithIdent",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LengthLikeWithAuto",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LengthLike",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$NonNegativeLengthLike",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$GenericColor",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Color",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BackgroundColor",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$GenericURIWithNone",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BackgroundImage",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BackgroundRepeat",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BackgroundAttachment",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BackgroundPosition",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderCollapse",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Length",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSBorderSpacingHorizontal",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSBorderSpacingVertical",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSFontMetricSrc",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSKeepWithInline",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSPageWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSPageHeight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSPageSequence",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSPDFFontEmbed",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSPDFFontEncoding",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSPageOrientation",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSTablePaginate",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSTextDecorationExtent",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Bottom",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$CaptionSide",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Clear",
      "org.xhtmlrenderer.css.parser.property.ContentPropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.CounterPropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.CounterPropertyBuilder$CounterIncrement",
      "org.xhtmlrenderer.css.parser.property.CounterPropertyBuilder$CounterReset",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Cursor",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Display",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$EmptyCells",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Float",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FontStyle",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FontVariant",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FontWeight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FontSize",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LineHeight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FontFamily",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$ColOrRowSpan",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSTableCellColspan",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$FSTableCellRowspan",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Height",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Left",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LengthWithIdent",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LengthWithNormal",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LetterSpacing",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$ListStyleType",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$ListStylePosition",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$ListStyleImage",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$LengthLikeWithNone",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MaxHeight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MaxWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MinHeight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MinWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PlainInteger",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Orphans",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Overflow",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Page",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PageBreakAfter",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PageBreakBefore",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PageBreakInside",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Position",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Right",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Src",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$TableLayout",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$TextAlign",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$TextDecoration",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$TextIndent",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$TextTransform",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Top",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$VerticalAlign",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Visibility",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$WhiteSpace",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Widows",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$Width",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$WordSpacing",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$ZIndex",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderTopColor",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderLeftColor",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderBottomColor",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderTopStyle",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderRightStyle",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderBottomStyle",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderLeftStyle",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderTopWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderRightWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderBottomWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$BorderLeftWidth",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MarginTop",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MarginRight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MarginBottom",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$MarginLeft",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PaddingTop",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PaddingRight",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PaddingBottom",
      "org.xhtmlrenderer.css.parser.property.PrimitivePropertyBuilders$PaddingLeft",
      "org.xhtmlrenderer.css.parser.property.BackgroundPropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.OneToFourPropertyBuilders$OneToFourPropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.OneToFourPropertyBuilders$BorderWidth",
      "org.xhtmlrenderer.css.parser.property.OneToFourPropertyBuilders$BorderStyle",
      "org.xhtmlrenderer.css.parser.property.BorderPropertyBuilders$BorderSidePropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.BorderPropertyBuilders$Border",
      "org.xhtmlrenderer.css.parser.property.BorderPropertyBuilders$BorderTop",
      "org.xhtmlrenderer.css.parser.property.BorderPropertyBuilders$BorderRight",
      "org.xhtmlrenderer.css.parser.property.BorderPropertyBuilders$BorderBottom",
      "org.xhtmlrenderer.css.parser.property.BorderPropertyBuilders$BorderLeft",
      "org.xhtmlrenderer.css.parser.property.OneToFourPropertyBuilders$BorderColor",
      "org.xhtmlrenderer.css.parser.property.BorderSpacingPropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.FontPropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.ListStylePropertyBuilder",
      "org.xhtmlrenderer.css.parser.property.OneToFourPropertyBuilders$Margin",
      "org.xhtmlrenderer.css.parser.property.OneToFourPropertyBuilders$Padding",
      "org.xhtmlrenderer.css.parser.property.SizePropertyBuilder",
      "org.xhtmlrenderer.css.constants.CSSName$1",
      "org.xhtmlrenderer.css.parser.Token",
      "org.xhtmlrenderer.css.parser.PropertyValue",
      "org.xhtmlrenderer.css.sheet.PropertyDeclaration",
      "org.xhtmlrenderer.css.style.derived.DerivedValueFactory",
      "org.xhtmlrenderer.css.style.DerivedValue",
      "org.xhtmlrenderer.css.style.derived.LengthValue",
      "org.xhtmlrenderer.css.style.derived.StringValue",
      "org.xhtmlrenderer.css.style.derived.NumberValue",
      "org.xhtmlrenderer.css.parser.FSRGBColor",
      "org.xhtmlrenderer.css.parser.property.Conversions",
      "org.xhtmlrenderer.css.style.derived.ListValue",
      "org.xhtmlrenderer.css.style.derived.ColorValue",
      "org.xhtmlrenderer.css.constants.CSSName",
      "de.huxhorn.lilith.buffers.FilteringBuffer",
      "de.huxhorn.lilith.swing.ApplicationPreferences$SourceFiltering",
      "de.huxhorn.sulky.codec.filebuffer.MetaData",
      "de.huxhorn.lilith.conditions.LoggerStartsWithCondition"
    );
  }
}
