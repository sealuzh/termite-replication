/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:19:16 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSListLogicalAtoms_ESTest extends JSListLogicalAtoms_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSListLogicalAtoms jSListLogicalAtoms1 = jSListLogicalAtoms0.applySubstitutionListLogicalAtoms(jSSubstitution0);
      assertNotSame(jSListLogicalAtoms1, jSListLogicalAtoms0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      JSListLogicalAtoms jSListLogicalAtoms1 = jSListLogicalAtoms0.Cdr();
      assertNotSame(jSListLogicalAtoms1, jSListLogicalAtoms0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      String string0 = jSListLogicalAtoms0.Label();
      assertEquals("", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      JSListLogicalAtoms jSListLogicalAtoms1 = jSListLogicalAtoms0.standarizerListLogicalAtoms();
      assertNotSame(jSListLogicalAtoms1, jSListLogicalAtoms0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nX^zv");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      String string0 = jSListLogicalAtoms0.Name();
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      jSListLogicalAtoms0.addElements(jSListLogicalAtoms0);
      assertTrue(jSListLogicalAtoms0.isEmpty());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      jSListLogicalAtoms0.setName("k4g");
      assertTrue(jSListLogicalAtoms0.isEmpty());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nil");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      assertTrue(jSListLogicalAtoms0.isEmpty());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      JSTerm jSTerm0 = new JSTerm();
      jSListLogicalAtoms0.addElement(jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSListLogicalAtoms0.applySubstitutionListLogicalAtoms(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      JSTerm jSTerm0 = new JSTerm();
      jSListLogicalAtoms0.addElement(jSTerm0);
      // Undeclared exception!
      try { 
        jSListLogicalAtoms0.standarizerListLogicalAtoms();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?`Q+THE");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSListLogicalAtoms jSListLogicalAtoms1 = jSListLogicalAtoms0.applySubstitutionListLogicalAtoms(jSSubstitution0);
      assertTrue(jSListLogicalAtoms1.isEmpty());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?`Q+THE");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      JSListLogicalAtoms jSListLogicalAtoms1 = jSListLogicalAtoms0.Cdr();
      assertEquals("[]", jSListLogicalAtoms1.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?tp ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      // Undeclared exception!
      jSListLogicalAtoms0.addElements(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?`Q+THE");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      jSListLogicalAtoms0.print();
      assertFalse(jSListLogicalAtoms0.isEmpty());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?`Q+THE");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      JSListLogicalAtoms jSListLogicalAtoms1 = jSListLogicalAtoms0.standarizerListLogicalAtoms();
      assertEquals("[[?%%%0]]", jSListLogicalAtoms1.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      StringReader stringReader0 = new StringReader("3lA38%\"c+udw@Y");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSListLogicalAtoms0.addElement(jSTerm0);
      jSListLogicalAtoms0.print();
      assertFalse(jSListLogicalAtoms0.isEmpty());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      jSListLogicalAtoms0.addElement((Object) null);
      jSListLogicalAtoms0.print();
      assertFalse(jSListLogicalAtoms0.isEmpty());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("()UQ0ZFI@Xwj");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
      assertEquals(10, jSListLogicalAtoms0.capacity());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("* 3@UWm&/bm,n");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      jSListLogicalAtoms0.addElement((Object) null);
      jSListLogicalAtoms0.addElement(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSListLogicalAtoms0.Cdr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSPredicateForm
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(:ybW2");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(:$dbOnjs)2");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(:FIQsn^W2");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(58);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("((OQs)&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("((OQs)D&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(41);
      JSListLogicalAtoms jSListLogicalAtoms0 = null;
      try {
        jSListLogicalAtoms0 = new JSListLogicalAtoms(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }
}
