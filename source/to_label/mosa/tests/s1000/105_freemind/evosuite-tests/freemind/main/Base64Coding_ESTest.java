/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:12:55 GMT 2018
 */

package freemind.main;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.Base64Coding;
import freemind.main.FreeMind;
import freemind.main.FreeMindMain;
import freemind.main.Resources;
import freemind.modes.filemode.FileMode;
import java.util.Properties;
import org.apache.batik.ext.awt.image.IdentityTransfer;
import org.apache.xml.serializer.ToHTMLStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Coding_ESTest extends Base64Coding_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = Base64Coding.decode64("L9ZP0hNpsg;v*");
      assertNull(byteArray0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = Base64Coding.decode64("'[.PC");
      assertNull(byteArray0);
      
      byte[] byteArray1 = Base64Coding.decode64("");
      byte[] byteArray2 = IdentityTransfer.lutData;
      String string0 = Base64Coding.encode64(byteArray2);
      assertEquals("AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXm5+jp6uvs7e7v8PHy8/T19vf4+fr7/P3+/w==", string0);
      
      String string1 = Base64Coding.encode64(byteArray1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Base64Coding.decode64("");
      byte[] byteArray0 = Base64Coding.decode64("Base64Coding");
      assertArrayEquals(new byte[] {(byte)5, (byte) (-85), (byte)30, (byte) (-21), (byte) (-128), (byte) (-88), (byte)118, (byte)41, (byte) (-32)}, byteArray0);
      assertNotNull(byteArray0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = "9";
      Base64Coding.decode64("9");
      Base64Coding base64Coding0 = new Base64Coding();
      ToHTMLStream toHTMLStream0 = new ToHTMLStream();
      // Undeclared exception!
      try { 
        toHTMLStream0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.serializer.SerializerBase", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      Base64Coding.encode64(byteArray0);
      byte[] byteArray1 = Base64Coding.decode64("Rg==");
      Base64Coding.encode64(byteArray1);
      Base64Coding.encode64(byteArray1);
      Base64Coding.decode64(")oy");
      Base64Coding.decode64("Rg==");
      Base64Coding.decode64("Rg==");
      // Undeclared exception!
      try { 
        Base64Coding.encode64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.main.Base64Coding", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)124;
      Base64Coding.encode64(byteArray0);
      Base64Coding base64Coding0 = new Base64Coding();
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)124;
      byteArray1[1] = (byte) (-97);
      byteArray1[2] = (byte)124;
      byteArray1[3] = (byte)124;
      byteArray1[4] = (byte)124;
      byteArray1[5] = (byte)124;
      byteArray1[6] = (byte)124;
      byteArray1[7] = (byte)124;
      Base64Coding.encode64(byteArray1);
      Base64Coding.decode64("fA==");
      Base64Coding.encode64(byteArray0);
      Base64Coding.decode64("mB/;.n");
      Base64Coding.decode64("fA==");
      Base64Coding.encode64(byteArray1);
      Base64Coding.decode64("fJ98fHx8fHw=");
      // Undeclared exception!
      try { 
        Base64Coding.decode64((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.main.Base64Coding", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.792375274099119
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte)50;
      Base64Coding.encode64(byteArray0);
      String string0 = ")*v^\"P%.q>C9k?8";
      Base64Coding.decode64(")*v^\"P%.q>C9k?8");
      Base64Coding base64Coding0 = new Base64Coding();
      FileMode fileMode0 = new FileMode();
      fileMode0.getController();
      Base64Coding.encode64(byteArray0);
      Base64Coding.decode64(")*v^\"P%.q>C9k?8");
      Base64Coding.decode64("+");
      // Undeclared exception!
      try { 
        Base64Coding.encode64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.main.Base64Coding", e);
      }
  }
}
