/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:28:32 GMT 2018
 */

package net.sourceforge.squirrel_sql.fw.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.applet.Applet;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import java.awt.TextField;
import java.awt.Window;
import java.awt.event.ContainerListener;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.Icon;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JRootPane;
import javax.swing.TransferHandler;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultCaret;
import net.sourceforge.squirrel_sql.fw.gui.GUIUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.fest.swing.applet.AppletViewer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GUIUtils_ESTest extends GUIUtils_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      JButton jButton0 = new JButton((String) null);
      JButton jButton1 = new JButton((String) null);
      JButton[] jButtonArray0 = new JButton[2];
      jButtonArray0[0] = jButton1;
      jButtonArray0[1] = jButton0;
      GUIUtils.setJButtonSizesTheSame(jButtonArray0);
      JInternalFrame jInternalFrame1 = new JInternalFrame((String) null, false, true, true);
      ActionMap actionMap0 = new ActionMap();
      actionMap0.getParent();
      jInternalFrame1.setActionMap(actionMap0);
      GUIUtils.isToolWindow(jInternalFrame1);
      // Undeclared exception!
      try { 
        GUIUtils.centerWithinScreen((Window) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null Window passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GUIUtils.getWrappedLine("", 0);
      GUIUtils.getWrappedLine("", (-1));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      GUIUtils.getMainFrame();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", false, true);
      Icon icon0 = jInternalFrame0.getFrameIcon();
      JButton jButton0 = new JButton("null\n", icon0);
      JButton[] jButtonArray0 = new JButton[6];
      jButtonArray0[0] = jButton0;
      JInternalFrame jInternalFrame1 = new JInternalFrame("\".", true, false, false, false);
      GUIUtils.moveToFront(jInternalFrame1);
      // Undeclared exception!
      try { 
        GUIUtils.setJButtonSizesTheSame(jButtonArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      GUIUtils.moveToFront(jInternalFrame0);
      // Undeclared exception!
      try { 
        GUIUtils.processOnSwingEventThread((Runnable) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Runnable == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GUIUtils gUIUtils0 = new GUIUtils();
      assertNotNull(gUIUtils0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        GUIUtils.makeToolWindow((JInternalFrame) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null JInternalFrame passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDialog jDialog0 = null;
      // Undeclared exception!
      try { 
        GUIUtils.enableCloseByEscape((JDialog) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertNotNull(jInternalFrame0);
      
      // Undeclared exception!
      try { 
        GUIUtils.isWithinParent(jInternalFrame0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = GUIUtils.getWrappedLine("", 0);
      assertEquals("", string0);
      assertNotNull(string0);
      
      JInternalFrame jInternalFrame0 = new JInternalFrame("");
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertNotNull(jInternalFrame0);
      
      GUIUtils.makeToolWindow(jInternalFrame0, false);
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      
      JFrame jFrame0 = GUIUtils.getMainFrame();
      assertNull(jFrame0);
      
      DefaultTableCellRenderer defaultTableCellRenderer0 = new DefaultTableCellRenderer();
      assertFalse(defaultTableCellRenderer0.getIgnoreRepaint());
      assertTrue(defaultTableCellRenderer0.getFocusTraversalKeysEnabled());
      assertFalse(defaultTableCellRenderer0.isFocusTraversalPolicySet());
      assertFalse(defaultTableCellRenderer0.isFocusCycleRoot());
      assertFalse(defaultTableCellRenderer0.isFocusTraversalPolicyProvider());
      assertNotNull(defaultTableCellRenderer0);
      
      // Undeclared exception!
      try { 
        GUIUtils.getScreenLocationFor(jInternalFrame0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = GUIUtils.getWrappedLine("", 1818);
      assertEquals("", string0);
      assertNotNull(string0);
      
      Thread thread0 = MockThread.currentThread();
      assertFalse(thread0.isDaemon());
      assertFalse(thread0.isInterrupted());
      assertNotNull(thread0);
      
      GUIUtils.processOnSwingEventThread((Runnable) thread0);
      assertFalse(thread0.isDaemon());
      assertFalse(thread0.isInterrupted());
      
      boolean boolean0 = false;
      JInternalFrame jInternalFrame0 = new JInternalFrame("", false, true, false, false);
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertNotNull(jInternalFrame0);
      
      GUIUtils.makeToolWindow(jInternalFrame0, true);
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      
      try { 
        JOptionPane.getRootFrame();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JFrame jFrame0 = GUIUtils.getMainFrame();
      assertNull(jFrame0);
      
      // Undeclared exception!
      try { 
        GUIUtils.centerWithinParent((Window) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null Window passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = GUIUtils.getWrappedLine("", 0);
      assertEquals("", string0);
      assertNotNull(string0);
      
      JInternalFrame jInternalFrame0 = new JInternalFrame("");
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertNotNull(jInternalFrame0);
      
      JInternalFrame jInternalFrame1 = new JInternalFrame("F[_^", false);
      assertFalse(jInternalFrame1.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame1.isFocusTraversalPolicySet());
      assertTrue(jInternalFrame1.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame1.getIgnoreRepaint());
      assertNotNull(jInternalFrame1);
      assertFalse(jInternalFrame1.equals((Object)jInternalFrame0));
      
      GUIUtils.centerWithinDesktop(jInternalFrame1);
      assertNotSame(jInternalFrame1, jInternalFrame0);
      assertFalse(jInternalFrame1.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame1.isFocusTraversalPolicySet());
      assertTrue(jInternalFrame1.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame1.getIgnoreRepaint());
      assertFalse(jInternalFrame1.equals((Object)jInternalFrame0));
      
      GUIUtils.setMainFrame((JFrame) null);
      GUIUtils.setMainFrame((JFrame) null);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        GUIUtils.isToolWindow((JInternalFrame) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null JInternalFrame passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertNotNull(jInternalFrame0);
      
      // Undeclared exception!
      try { 
        GUIUtils.getOwningFrame(jInternalFrame0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null Component passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JFrame jFrame0 = GUIUtils.getMainFrame();
      assertNull(jFrame0);
      
      // Undeclared exception!
      try { 
        GUIUtils.getOwningFrame((Component) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null Component passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      assertNotNull(containerListener1);
      
      String string0 = GUIUtils.getWrappedLine("eDBX,b~[}D0?&>", 5);
      assertEquals("eDBX,\n\nb~[}D0?&>\n", string0);
      assertNotNull(string0);
      
      JInternalFrame jInternalFrame0 = new JInternalFrame("D\"");
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertNotNull(jInternalFrame0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = GUIUtils.getWrappedLine("hEgn\"&x\"CJC#f!", 10);
      assertEquals("hEgn\"&x\"CJC#f!\n", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      String string0 = "eDBX,b~[}D0?&>";
      // Undeclared exception!
      try { 
        GUIUtils.setJButtonSizesTheSame((JButton[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null JButton[] passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JFrame jFrame0 = GUIUtils.getMainFrame();
      assertNull(jFrame0);
      
      String string0 = GUIUtils.getWrappedLine("null Window passed", (-38420141));
      assertEquals("null Window passed\n", string0);
      assertNotNull(string0);
      
      DefaultCaret defaultCaret0 = new DefaultCaret();
      assertEquals(0.0, defaultCaret0.getCenterY(), 0.01);
      assertTrue(defaultCaret0.isEmpty());
      assertEquals(0.0, defaultCaret0.getWidth(), 0.01);
      assertEquals(0.0, defaultCaret0.getMinX(), 0.01);
      assertEquals(0.0, defaultCaret0.getHeight(), 0.01);
      assertEquals(0.0, defaultCaret0.getMaxY(), 0.01);
      assertEquals(0.0, defaultCaret0.getMaxX(), 0.01);
      assertEquals(0.0, defaultCaret0.getX(), 0.01);
      assertEquals(0.0, defaultCaret0.getMinY(), 0.01);
      assertEquals(0.0, defaultCaret0.getY(), 0.01);
      assertEquals(0.0, defaultCaret0.getCenterX(), 0.01);
      assertNotNull(defaultCaret0);
      assertEquals(0, defaultCaret0.height);
      assertEquals(0, defaultCaret0.x);
      assertEquals(0, defaultCaret0.width);
      assertEquals(0, defaultCaret0.y);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        GUIUtils.centerWithinDesktop((JInternalFrame) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null JInternalFrame passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        GUIUtils.isWithinParent((Component) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null Component passed
         //
         verifyException("net.sourceforge.squirrel_sql.fw.gui.GUIUtils", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.2337916587064593
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JFrame jFrame0 = GUIUtils.getMainFrame();
      assertNull(jFrame0);
      
      String string0 = GUIUtils.getWrappedLine("8uNjEXe5)4DWb%?wwez\n", 10);
      assertEquals("8uNjEXe5)4DWb%?wwez\n", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GUIUtils.moveToFront((JInternalFrame) null);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      assertFalse(jInternalFrame0.isFocusTraversalPolicyProvider());
      assertFalse(jInternalFrame0.getIgnoreRepaint());
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
      assertTrue(jInternalFrame0.getFocusTraversalKeysEnabled());
      assertNotNull(jInternalFrame0);
      
      JMenu jMenu0 = new JMenu("org.jfree.data.UnknownKeyException", true);
      assertFalse(jMenu0.getIgnoreRepaint());
      assertFalse(jMenu0.isFocusCycleRoot());
      assertFalse(jMenu0.isFocusTraversalPolicyProvider());
      assertFalse(jMenu0.isFocusTraversalPolicySet());
      assertTrue(jMenu0.getFocusTraversalKeysEnabled());
      assertNotNull(jMenu0);
      
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      assertFalse(jMenu0.getIgnoreRepaint());
      assertFalse(jMenu0.isFocusCycleRoot());
      assertFalse(jMenu0.isFocusTraversalPolicyProvider());
      assertFalse(jMenu0.isFocusTraversalPolicySet());
      assertTrue(jMenu0.getFocusTraversalKeysEnabled());
      assertFalse(jPopupMenu0.getIgnoreRepaint());
      assertFalse(jPopupMenu0.getFocusTraversalKeysEnabled());
      assertFalse(jPopupMenu0.isFocusCycleRoot());
      assertFalse(jPopupMenu0.isFocusTraversalPolicySet());
      assertFalse(jPopupMenu0.isFocusTraversalPolicyProvider());
      assertNotNull(jPopupMenu0);
      
      JMenuItem jMenuItem0 = jPopupMenu0.add("org.jfree.data.UnknownKeyException");
      assertFalse(jMenu0.getIgnoreRepaint());
      assertFalse(jMenu0.isFocusCycleRoot());
      assertFalse(jMenu0.isFocusTraversalPolicyProvider());
      assertFalse(jMenu0.isFocusTraversalPolicySet());
      assertTrue(jMenu0.getFocusTraversalKeysEnabled());
      assertFalse(jPopupMenu0.getIgnoreRepaint());
      assertFalse(jPopupMenu0.getFocusTraversalKeysEnabled());
      assertFalse(jPopupMenu0.isFocusCycleRoot());
      assertFalse(jPopupMenu0.isFocusTraversalPolicySet());
      assertFalse(jPopupMenu0.isFocusTraversalPolicyProvider());
      assertTrue(jMenuItem0.getFocusTraversalKeysEnabled());
      assertFalse(jMenuItem0.isFocusCycleRoot());
      assertFalse(jMenuItem0.isFocusTraversalPolicyProvider());
      assertFalse(jMenuItem0.getIgnoreRepaint());
      assertFalse(jMenuItem0.isFocusTraversalPolicySet());
      assertNotNull(jMenuItem0);
      
      boolean boolean0 = GUIUtils.isWithinParent(jMenuItem0);
      assertTrue(boolean0);
      assertFalse(jMenu0.getIgnoreRepaint());
      assertFalse(jMenu0.isFocusCycleRoot());
      assertFalse(jMenu0.isFocusTraversalPolicyProvider());
      assertFalse(jMenu0.isFocusTraversalPolicySet());
      assertTrue(jMenu0.getFocusTraversalKeysEnabled());
      assertFalse(jPopupMenu0.getIgnoreRepaint());
      assertFalse(jPopupMenu0.getFocusTraversalKeysEnabled());
      assertFalse(jPopupMenu0.isFocusCycleRoot());
      assertFalse(jPopupMenu0.isFocusTraversalPolicySet());
      assertFalse(jPopupMenu0.isFocusTraversalPolicyProvider());
      assertTrue(jMenuItem0.getFocusTraversalKeysEnabled());
      assertFalse(jMenuItem0.isFocusCycleRoot());
      assertFalse(jMenuItem0.isFocusTraversalPolicyProvider());
      assertFalse(jMenuItem0.getIgnoreRepaint());
      assertFalse(jMenuItem0.isFocusTraversalPolicySet());
  }
}
