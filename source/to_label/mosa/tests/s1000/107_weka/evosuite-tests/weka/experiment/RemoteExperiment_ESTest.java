/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:01:50 GMT 2018
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.DefaultListModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.experiment.Experiment;
import weka.experiment.RemoteExperiment;
import weka.experiment.RemoteExperimentListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemoteExperiment_ESTest extends RemoteExperiment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.getBaseExperiment();
      try { 
        remoteExperiment0.initialize();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No hosts specified!
         //
         verifyException("weka.experiment.RemoteExperiment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      String string0 = remoteExperiment0.getRevision();
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertEquals("", remoteExperiment0.getNotes());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertEquals("8034", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Experiment experiment0 = new Experiment();
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.postProcess();
      remoteExperiment0.setPropertyArray(experiment0);
      remoteExperiment0.setBaseExperiment(experiment0);
      assertEquals(1, experiment0.getRunLower());
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertFalse(experiment0.getUsePropertyIterator());
      assertEquals("", experiment0.getNotes());
      assertEquals("", remoteExperiment0.getNotes());
      assertEquals(10, experiment0.getRunUpper());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.getRemoteHosts();
      assertFalse(remoteExperiment0.getUsePropertyIterator());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertEquals("", remoteExperiment0.getNotes());
      assertEquals(10, remoteExperiment0.getRunUpper());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.waitingExperiment(0);
      assertEquals("", remoteExperiment0.getNotes());
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultListModel<Object> defaultListModel0 = new DefaultListModel<Object>();
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.setRemoteHosts(defaultListModel0);
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
      assertEquals("", remoteExperiment0.getNotes());
      assertEquals(10, remoteExperiment0.getRunUpper());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.advanceCounters();
      assertFalse(remoteExperiment0.getUsePropertyIterator());
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertEquals("", remoteExperiment0.getNotes());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertTrue(remoteExperiment0.getSplitByDataSet());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.nextIteration();
      assertEquals("", remoteExperiment0.getNotes());
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = null;
      try {
        remoteExperiment0 = new RemoteExperiment((Experiment) null);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Base experiment is null!
         //
         verifyException("weka.experiment.RemoteExperiment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".H& $.OQfm");
      remoteExperiment0.toString();
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertTrue(remoteExperiment0.getSplitByDataSet());
      assertEquals(1, remoteExperiment0.getRunLower());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      RemoteExperimentListener remoteExperimentListener0 = mock(RemoteExperimentListener.class, new ViolatedAssumptionAnswer());
      remoteExperiment0.addRemoteExperimentListener(remoteExperimentListener0);
      remoteExperiment0.availableHost((-6));
      assertEquals(1, remoteExperiment0.getRunLower());
      assertEquals(10, remoteExperiment0.getRunUpper());
      assertFalse(remoteExperiment0.getUsePropertyIterator());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8389889331546985
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.initialize();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.runExperiment();
      assertEquals(1, remoteExperiment0.getCurrentRunNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8446135835842394
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.setSplitByDataSet(false);
      remoteExperiment0.initialize();
      remoteExperiment0.runExperiment();
      remoteExperiment0.availableHost((-536));
      assertEquals(1, remoteExperiment0.getCurrentRunNumber());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8975933802145004
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.setSplitByDataSet(false);
      remoteExperiment0.initialize();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      remoteExperiment0.runExperiment();
      remoteExperiment0.initialize();
      remoteExperiment0.initialize();
      remoteExperiment0.runExperiment();
      assertEquals(1, remoteExperiment0.getCurrentRunNumber());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.791341642175174
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.initialize();
      remoteExperiment0.abortExperiment();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.runExperiment();
      assertEquals(1, remoteExperiment0.getCurrentRunNumber());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6414594027752862
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.initialize();
      remoteExperiment0.runExperiment();
      remoteExperiment0.abortExperiment();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.availableHost(0);
      assertEquals(1, remoteExperiment0.getCurrentRunNumber());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.602652585860843
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.setSplitByDataSet(false);
      remoteExperiment0.initialize();
      remoteExperiment0.incrementFinished();
      RemoteExperiment remoteExperiment1 = new RemoteExperiment();
      remoteExperiment1.m_Notes = "~S<";
      remoteExperiment1.m_ClassFirst = true;
      remoteExperiment1.m_DatasetNumber = 3798;
      remoteExperiment1.runExperiment();
      remoteExperiment1.addRemoteHost("~S<");
      remoteExperiment1.runExperiment();
      remoteExperiment0.setSplitByDataSet(false);
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.availableHost((-35));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      remoteExperiment1.abortExperiment();
      remoteExperiment1.initialize();
      remoteExperiment0.availableHost(0);
      remoteExperiment0.initialize();
      String[] stringArray0 = new String[4];
      stringArray0[2] = ".exp";
      remoteExperiment0.availableHost(0);
      remoteExperiment0.initialize();
      assertTrue(remoteExperiment0.hasMoreIterations());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9485892471687714
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      remoteExperiment0.addRemoteHost(".exp");
      remoteExperiment0.initialize();
      remoteExperiment0.setSplitByDataSet(false);
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.incrementFinished();
      remoteExperiment0.runExperiment();
      RemoteExperiment.main((String[]) null);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0407272942644323
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RemoteExperiment remoteExperiment0 = new RemoteExperiment();
      boolean boolean0 = remoteExperiment0.m_splitByDataSet;
      remoteExperiment0.addRemoteHost("^^))6,==<B'a%[");
      remoteExperiment0.initialize();
      remoteExperiment0.runExperiment();
      remoteExperiment0.incrementFailed(0);
      remoteExperiment0.incrementFailed(0);
      remoteExperiment0.incrementFailed(0);
      remoteExperiment0.availableHost(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ".exp";
      stringArray0[1] = ".exp";
      stringArray0[3] = "^^))6,==<B'a%[";
      stringArray0[5] = ".exp";
      RemoteExperiment.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }
}
