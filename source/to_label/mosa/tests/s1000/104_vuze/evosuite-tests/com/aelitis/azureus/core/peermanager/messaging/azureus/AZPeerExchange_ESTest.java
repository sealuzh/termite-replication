/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:15:26 GMT 2018
 */

package com.aelitis.azureus.core.peermanager.messaging.azureus;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aelitis.azureus.core.peermanager.messaging.azureus.AZPeerExchange;
import com.aelitis.azureus.core.peermanager.peerdb.PeerItem;
import com.aelitis.azureus.core.util.AEThreadMonitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gudy.azureus2.core3.util.AEDiagnostics;
import org.gudy.azureus2.core3.util.Constants;
import org.gudy.azureus2.core3.util.DirectByteBuffer;
import org.gudy.azureus2.core3.util.DirectByteBufferPool;
import org.gudy.azureus2.core3.util.StringInterner;
import org.gudy.azureus2.core3.util.SystemProperties;
import org.gudy.azureus2.core3.util.SystemTime;
import org.gudy.azureus2.platform.PlatformManagerFactory;
import org.gudy.azureus2.platform.win32.PlatformManagerImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AZPeerExchange_ESTest extends AZPeerExchange_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, (PeerItem[]) null, (PeerItem[]) null, (byte)118);
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)118, (byte)118);
      try { 
        aZPeerExchange0.deserialize(directByteBuffer0, (byte)9);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // [AZ_PEER_EXCHANGE] payload stream b-decode error: BDecoder: unknown command '0, remainder = \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
         //
         verifyException("com.aelitis.azureus.core.peermanager.messaging.MessagingUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      PeerItem[] peerItemArray0 = new PeerItem[0];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, peerItemArray0, peerItemArray0, (byte)1);
      aZPeerExchange0.getData();
      assertEquals((byte)1, aZPeerExchange0.getVersion());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, (PeerItem[]) null, (PeerItem[]) null, (byte)5);
      AEThreadMonitor.initialise();
      aZPeerExchange0.getData();
      aZPeerExchange0.destroy();
      int int0 = aZPeerExchange0.getType();
      assertEquals(0, int0);
      assertEquals((byte)5, aZPeerExchange0.getVersion());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PeerItem[] peerItemArray0 = new PeerItem[0];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, peerItemArray0, peerItemArray0, (byte)80);
      aZPeerExchange0.getDescription();
      aZPeerExchange0.getData();
      Random.setNextRandom((byte)80);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, (PeerItem[]) null, (PeerItem[]) null, (byte)107);
      aZPeerExchange0.getDescription();
      SystemProperties.getUserPath();
      String string0 = aZPeerExchange0.getDescription();
      assertEquals("AZ_PEER_EXCHANGE for infohash  with 0 added and 0 dropped peers", string0);
      assertNotNull(string0);
      assertEquals((byte)107, aZPeerExchange0.getVersion());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, (PeerItem[]) null, (PeerItem[]) null, (byte)15);
      SystemTime.useRawProvider();
      int int0 = aZPeerExchange0.getMaxAllowedPeersPerVolley(false, false);
      assertEquals((byte)15, aZPeerExchange0.getVersion());
      assertEquals(50, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, (PeerItem[]) null, (PeerItem[]) null, (byte)79);
      String string0 = aZPeerExchange0.getFeatureID();
      assertEquals("AZ1", string0);
      
      aZPeerExchange0.getData();
      assertEquals((byte)79, aZPeerExchange0.getVersion());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte)94;
      PeerItem[] peerItemArray0 = new PeerItem[7];
      peerItemArray0[1] = peerItemArray0[0];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, peerItemArray0, peerItemArray0, (byte)86);
      aZPeerExchange0.getAddedPeers();
      assertEquals((byte)86, aZPeerExchange0.getVersion());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte) (-55);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)85;
      PeerItem[] peerItemArray0 = new PeerItem[1];
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, (PeerItem[]) null, (PeerItem[]) null, (byte) (-85));
      aZPeerExchange0.destroy();
      aZPeerExchange0.getFeatureSubID();
      aZPeerExchange0.getInfoHash();
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte) (-85), 25);
      AEDiagnostics.flushPendingLogs();
      directByteBuffer0.position((byte) (-85));
      directByteBuffer0.clear((byte) (-85));
      try { 
        aZPeerExchange0.deserialize(directByteBuffer0, (byte) (-48));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // [AZ_PEER_EXCHANGE] payload stream b-decode error: BDecoder: unknown command '0, remainder = \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
         //
         verifyException("com.aelitis.azureus.core.peermanager.messaging.MessagingUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange((byte[]) null, (PeerItem[]) null, (PeerItem[]) null, (byte)74);
      aZPeerExchange0.getData();
      aZPeerExchange0.getData();
      assertEquals((byte)74, aZPeerExchange0.getVersion());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9002560512685369
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PeerItem[] peerItemArray0 = new PeerItem[1];
      PeerItem peerItem0 = mock(PeerItem.class, new ViolatedAssumptionAnswer());
      doReturn(null, null).when(peerItem0).getHandshakeType();
      doReturn((Object) byteArray0, (Object) null).when(peerItem0).getSerialization();
      doReturn(0, 0).when(peerItem0).getUDPPort();
      peerItemArray0[0] = peerItem0;
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, peerItemArray0, peerItemArray0, (byte)76);
      DirectByteBuffer[] directByteBufferArray0 = aZPeerExchange0.getData();
      assertEquals(1, directByteBufferArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange((byte[]) null, (PeerItem[]) null, (PeerItem[]) null, (byte)85);
      aZPeerExchange0.getData();
      DirectByteBuffer directByteBuffer0 = DirectByteBufferPool.getBuffer((byte)85, 2700);
      try { 
        aZPeerExchange0.deserialize(directByteBuffer0, (byte)21);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // [AZ_PEER_EXCHANGE] payload stream b-decode error: BDecoder: unknown command '0, remainder = \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
         //
         verifyException("com.aelitis.azureus.core.peermanager.messaging.MessagingUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      PeerItem[] peerItemArray0 = new PeerItem[9];
      PeerItem peerItem0 = mock(PeerItem.class, new ViolatedAssumptionAnswer());
      doReturn((byte)0, (byte) (-81), (byte) (-81), (byte) (-81), (byte) (-81)).when(peerItem0).getHandshakeType();
      doReturn((Object) byteArray0, (Object) byteArray0, (Object) byteArray0, (Object) byteArray0, (Object) byteArray0).when(peerItem0).getSerialization();
      doReturn((int)(byte)0, (int)(byte)0, (int)(byte)0, (int)(byte)0, (int)(byte)0).when(peerItem0).getUDPPort();
      peerItemArray0[0] = peerItem0;
      peerItemArray0[1] = peerItem0;
      peerItemArray0[2] = peerItem0;
      peerItemArray0[3] = peerItem0;
      peerItemArray0[4] = peerItem0;
      peerItemArray0[5] = peerItem0;
      peerItemArray0[6] = peerItem0;
      peerItemArray0[7] = peerItem0;
      peerItemArray0[8] = peerItem0;
      AZPeerExchange aZPeerExchange0 = new AZPeerExchange(byteArray0, peerItemArray0, peerItemArray0, (byte) (-81));
      aZPeerExchange0.getData();
      assertEquals((byte) (-81), aZPeerExchange0.getVersion());
  }
}
