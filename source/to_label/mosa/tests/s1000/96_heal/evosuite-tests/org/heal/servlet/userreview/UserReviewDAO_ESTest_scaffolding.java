/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Aug 07 13:47:31 GMT 2018
 */

package org.heal.servlet.userreview;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class UserReviewDAO_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.heal.servlet.userreview.UserReviewDAO"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/96_heal"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UserReviewDAO_ESTest_scaffolding.class.getClassLoader() ,
      "com.microsoft.jdbc.base.BaseCallableStatement",
      "com.ora.jsp.sql.UnsupportedTypeException",
      "com.microsoft.jdbc.sqlserver.tds.TDSRequest",
      "com.ora.jsp.sql.NoSuchColumnException",
      "com.ora.jsp.sql.UnsupportedConversionException",
      "com.microsoft.jdbc.sqlserver.SQLServerImplConnection",
      "com.microsoft.jdbc.base.BaseDriverPropertyInfos",
      "com.microsoft.jdbc.base.BaseConnection",
      "org.heal.servlet.userreview.UserReviewDAO",
      "com.microsoft.jdbc.sqlserver.SQLServerConnection",
      "com.microsoft.jdbc.base.BasePreparedStatement",
      "com.microsoft.jdbc.sqlserver.tds.TDSDTCRequest",
      "com.microsoft.jdbc.base.BaseImplConnection",
      "com.microsoft.jdbc.base.BaseStatement",
      "com.microsoft.jdbc.sqlserver.SQLServerEscapeTranslator",
      "com.microsoft.jdbc.base.BaseConnectionProperties",
      "com.microsoft.jdbc.base.BaseEscapeTranslator",
      "org.heal.util.FileLocator",
      "com.microsoft.jdbc.sqlserver.SQLServerImplDatabaseMetaData",
      "com.microsoft.jdbc.extensions.ExtEmbeddedConnection",
      "org.heal.servlet.userreview.UserReviewBean",
      "com.microsoft.jdbc.base.BaseImplDatabaseMetaData",
      "com.microsoft.jdbc.base.BaseExceptions"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UserReviewDAO_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.heal.servlet.userreview.UserReviewDAO",
      "org.heal.util.FileLocator",
      "org.heal.servlet.userreview.UserReviewBean",
      "com.ora.jsp.sql.DataSourceWrapper",
      "com.ora.jsp.sql.ConnectionPool",
      "com.microsoft.jdbcx.base.BaseDataSource",
      "com.microsoft.jdbcx.base.BaseXADataSource",
      "com.microsoft.jdbc.base.BaseConnection",
      "com.microsoft.jdbc.sqlserver.SQLServerConnection",
      "com.microsoft.jdbcx.sqlserver.SQLServerDataSource",
      "com.microsoft.jdbc.base.BaseExceptions",
      "com.microsoft.jdbc.base.BaseClassUtility",
      "com.microsoft.jdbcx.base.BaseClassUtilityX",
      "com.microsoft.util.UtilLocalMessages",
      "com.microsoft.jdbc.base.BaseLocalMessages",
      "com.microsoft.jdbc.base.BaseMessages",
      "com.microsoft.jdbc.sqlserver.SQLServerLocalMessages",
      "com.microsoft.jdbc.base.BaseConnectionProperties",
      "com.microsoft.jdbc.base.BaseDriverPropertyInfos",
      "com.microsoft.jdbc.base.BaseEscapeTranslator",
      "com.microsoft.jdbc.sqlserver.SQLServerEscapeTranslator",
      "com.microsoft.jdbc.vprt.SSLexTable",
      "com.microsoft.jdbc.base.BaseEscapeParsingLexTable",
      "com.microsoft.jdbc.vprt.SSLexSubtable",
      "com.microsoft.jdbc.vprt.SSLexTableRow",
      "com.microsoft.jdbc.vprt.SSLexTableRowEntry",
      "com.microsoft.jdbc.vprt.SSLexFinalState",
      "com.microsoft.jdbc.vprt.SSYaccTable",
      "com.microsoft.jdbc.base.BaseEscapeParsingYaccTable_RowData1",
      "com.microsoft.jdbc.base.BaseEscapeParsingYaccTable_RowData2",
      "com.microsoft.jdbc.base.BaseEscapeParsingYaccTable",
      "com.microsoft.jdbc.vprt.SSYaccTableProd",
      "com.microsoft.jdbc.vprt.SSYaccTableRow",
      "com.microsoft.jdbc.vprt.SSYaccTableRowEntry",
      "org.hsqldb.Servlet",
      "org.hsqldb.Database",
      "org.hsqldb.Access",
      "org.hsqldb.User",
      "org.hsqldb.Library",
      "org.hsqldb.DatabaseInformation",
      "org.hsqldb.Channel",
      "org.hsqldb.Log",
      "org.hsqldb.Trace",
      "org.hsqldb.Cache",
      "org.hsqldb.Tokenizer",
      "org.hsqldb.Parser",
      "org.hsqldb.Result",
      "org.hsqldb.StringConverter",
      "org.heal.module.user.UserBean",
      "org.hsqldb.Record",
      "com.microsoft.jdbc.base.BaseURLParser",
      "com.microsoft.jdbc.base.BaseWarnings",
      "com.microsoft.jdbc.base.BaseConnectionPool",
      "com.microsoft.jdbc.base.BaseImplConnection",
      "com.microsoft.jdbc.sqlserver.SQLServerImplConnection",
      "com.microsoft.jdbc.sqlserver.tds.TDSConnection",
      "com.microsoft.jdbc.base.BaseBlobInputStream",
      "com.microsoft.jdbc.base.BaseEscape",
      "com.microsoft.jdbc.base.BaseJoinEscape",
      "com.microsoft.jdbc.base.BaseBlob",
      "org.heal.module.user.InstructionalLevelBean",
      "hsqlServlet",
      "com.microsoft.jdbc.sqlserver.tds.TDSRequest",
      "com.microsoft.jdbc.sqlserver.tds.TDSDTCRequest",
      "com.ora.jsp.sql.Row",
      "org.heal.module.user.ProfessionalRoleBean",
      "com.microsoft.jdbc.base.BaseImplDatabaseMetaData",
      "com.microsoft.jdbc.sqlserver.SQLServerImplDatabaseMetaData"
    );
  }
}
