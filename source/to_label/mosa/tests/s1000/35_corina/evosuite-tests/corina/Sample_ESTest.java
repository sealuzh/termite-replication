/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:23:10 GMT 2018
 */

package corina;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import corina.Range;
import corina.Sample;
import corina.SampleAdapter;
import corina.Year;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.undo.UndoManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sample_ESTest extends Sample_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.fireSampleRedated();
      int int0 = sample0.computeRadius();
      assertFalse(sample0.isModified());
      assertEquals(0, int0);
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sample sample0 = new Sample();
      UndoManager undoManager0 = new UndoManager();
      sample0.postEdit(undoManager0);
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sample sample0 = new Sample();
      assertFalse(sample0.wasMetadataChanged());
      
      sample0.fireSampleMetadataChanged();
      assertTrue(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sample sample0 = new Sample();
      String string0 = sample0.toString();
      assertFalse(sample0.wasMetadataChanged());
      assertEquals("Untitled (1001 - 1000, n=0)", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sample sample0 = null;
      try {
        sample0 = new Sample("gZA+:fsQ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // File doesn't exist.
         //
         verifyException("corina.io.Files", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sample sample0 = new Sample();
      // Undeclared exception!
      try { 
        sample0.save();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sample sample0 = new Sample();
      SampleAdapter sampleAdapter0 = new SampleAdapter();
      sample0.addSampleListener(sampleAdapter0);
      Sample.copy(sample0, sample0);
      sample0.addSampleListener(sampleAdapter0);
      sample0.getStart();
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.fireSampleElementsChanged();
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sample sample0 = new Sample();
      SampleAdapter sampleAdapter0 = new SampleAdapter();
      sample0.removeSampleListener(sampleAdapter0);
      float float0 = sample0.getScale();
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.clearModified();
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sample sample0 = new Sample();
      SampleAdapter sampleAdapter0 = new SampleAdapter();
      sample0.addSampleListener(sampleAdapter0);
      assertFalse(sample0.wasMetadataChanged());
      
      sample0.fireSampleMetadataChanged();
      assertTrue(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sample sample0 = new Sample();
      Sample.copy(sample0, sample0);
      Vector<Byte> vector0 = new Vector<Byte>();
      int int0 = Sample.MR;
      sample0.count = (List) vector0;
      int int1 = sample0.countRings();
      assertEquals(0, int1);
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sample sample0 = new Sample();
      assertFalse(sample0.isSummed());
      
      Vector<Vector<Integer>> vector0 = new Vector<Vector<Integer>>();
      sample0.count = (List) vector0;
      sample0.getPreview();
      assertTrue(sample0.isSummed());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sample sample0 = new Sample();
      assertFalse(sample0.hasWeiserjahre());
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      sample0.incr = (List) arrayList0;
      int int0 = sample0.countSignificantIntervals();
      assertTrue(sample0.hasWeiserjahre());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.getString("TITLE");
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sample sample0 = new Sample();
      assertFalse(sample0.isSummed());
      
      Vector<Object> vector0 = new Vector<Object>();
      sample0.elements = (List) vector0;
      boolean boolean0 = sample0.isEditable();
      assertTrue(sample0.isSummed());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sample sample0 = new Sample();
      boolean boolean0 = sample0.wasMetadataChanged();
      assertFalse(boolean0);
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3030924037617193
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Sample sample0 = new Sample();
      assertTrue(sample0.isEditable());
      
      ArrayList<Double> arrayList0 = new ArrayList<Double>();
      sample0.elements = (List) arrayList0;
      sample0.getPreview();
      assertTrue(sample0.isSummed());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sample sample0 = new Sample();
      List list0 = sample0.getList("a?-S[");
      assertNull(list0);
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.countRings();
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sample sample0 = new Sample();
      assertFalse(sample0.isModified());
      
      sample0.setModified();
      sample0.toString();
      boolean boolean0 = sample0.isAbsolute();
      assertTrue(sample0.isModified());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Sample sample0 = null;
      try {
        sample0 = new Sample("@corina.dir.data");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // File doesn't exist.
         //
         verifyException("corina.io.Files", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sample sample0 = new Sample();
      List list0 = sample0.getData();
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
      assertNotNull(list0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sample sample0 = new Sample();
      List list0 = sample0.getList("count");
      assertFalse(sample0.isModified());
      assertNull(list0);
      assertFalse(sample0.wasMetadataChanged());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.data = null;
      Sample.copy(sample0, sample0);
      Vector<Byte> vector0 = new Vector<Byte>();
      Byte byte0 = new Byte((byte)0);
      vector0.add(byte0);
      sample0.countSignificantIntervals();
      sample0.count = (List) vector0;
      // Undeclared exception!
      try { 
        sample0.countRings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Byte cannot be cast to java.lang.Integer
         //
         verifyException("corina.Sample", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Sample sample0 = new Sample();
      String string0 = sample0.getString("author");
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
      assertNotNull(string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.getInteger("author");
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Sample sample0 = new Sample();
      List list0 = sample0.getList("incr");
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
      assertNull(list0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Sample sample0 = new Sample();
      Vector<Double> vector0 = new Vector<Double>();
      sample0.incr = (List) vector0;
      Double double0 = new Double(2);
      vector0.add(double0);
      // Undeclared exception!
      try { 
        sample0.countSignificantIntervals();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("corina.Weiserjahre", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Sample sample0 = new Sample();
      List list0 = sample0.getList("data");
      assertFalse(sample0.wasMetadataChanged());
      assertNotNull(list0);
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Sample sample0 = new Sample();
      Vector<Byte> vector0 = new Vector<Byte>();
      List list0 = sample0.getList("decr");
      assertNull(list0);
      assertFalse(sample0.wasMetadataChanged());
      assertFalse(sample0.isModified());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Sample sample0 = new Sample();
      Year year0 = sample0.getStart();
      Range range0 = new Range(year0, year0);
      sample0.range = range0;
      // Undeclared exception!
      try { 
        sample0.verify();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Sample sample0 = new Sample();
      assertEquals(0, sample0.computeRadius());
      
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(2);
      linkedList0.add(double0);
      sample0.data = (List) linkedList0;
      sample0.guessIndexed();
      sample0.getPreview();
      assertEquals(2, sample0.computeRadius());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Sample sample0 = new Sample();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(2);
      sample0.data = (List) linkedList0;
      Double double1 = new Double(1479.0);
      linkedList0.add(double1);
      sample0.guessIndexed();
      sample0.hasWeiserjahre();
      sample0.verify();
      float float0 = sample0.getScale();
      assertEquals(1479, sample0.computeRadius());
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.145841752594754
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Sample sample0 = new Sample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashMap<String, SampleAdapter> hashMap0 = new HashMap<String, SampleAdapter>();
      sample0.meta = (Map) hashMap0;
      SampleAdapter sampleAdapter0 = new SampleAdapter();
      hashMap0.put("!", sampleAdapter0);
      sample0.verify();
      int int0 = sample0.count3SampleIntervals();
      boolean boolean0 = sample0.isEditable();
      assertTrue(boolean0);
      
      sample0.verify();
      sample0.getString("!");
      assertFalse(sample0.hasWeiserjahre());
      
      int int1 = sample0.countSignificantIntervals();
      assertFalse(sample0.isModified());
      assertFalse(sample0.wasMetadataChanged());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Sample sample0 = new Sample();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(2);
      sample0.data = (List) linkedList0;
      Double double1 = new Double(1479.0);
      linkedList0.add(double1);
      sample0.guessIndexed();
      sample0.hasWeiserjahre();
      sample0.isIndexed();
      Integer.getInteger("C", 2);
      sample0.countSignificantIntervals();
      boolean boolean0 = sample0.isEditable();
      assertEquals(1479, sample0.computeRadius());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.37189981105004
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.getPreview();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add((Integer) 2);
      SampleAdapter sampleAdapter0 = new SampleAdapter();
      sample0.removeSampleListener(sampleAdapter0);
      sample0.isSummed();
      assertFalse(sample0.isSummed());
      
      sample0.count = (List) arrayList0;
      sample0.fireSampleDataChanged();
      sample0.countSignificantIntervals();
      sample0.count3SampleIntervals();
      sample0.getInteger((String) null);
      boolean boolean0 = sample0.isOak();
      assertTrue(sample0.isSummed());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Sample sample0 = new Sample();
      sample0.getPreview();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add((Integer) 2);
      SampleAdapter sampleAdapter0 = new SampleAdapter();
      sample0.removeSampleListener(sampleAdapter0);
      Integer integer0 = new Integer(1218);
      arrayList0.add(integer0);
      Integer.getInteger((String) null);
      arrayList0.add((Integer) null);
      sample0.count = (List) arrayList0;
      sample0.fireSampleDataChanged();
      sample0.countSignificantIntervals();
      // Undeclared exception!
      try { 
        sample0.count3SampleIntervals();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("corina.Sample", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Sample sample0 = new Sample();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(2);
      sample0.data = (List) linkedList0;
      Double double1 = new Double(1479.0);
      linkedList0.add(double1);
      sample0.guessIndexed();
      sample0.hasWeiserjahre();
      sample0.verify();
      sample0.isAbsolute();
      Integer.getInteger("C", 2);
      sample0.getPreview();
      boolean boolean0 = sample0.isEditable();
      assertEquals(1479, sample0.computeRadius());
      assertFalse(boolean0);
  }
}
