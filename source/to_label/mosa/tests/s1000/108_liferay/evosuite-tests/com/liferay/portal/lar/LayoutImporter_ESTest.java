/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 07 14:40:49 GMT 2018
 */

package com.liferay.portal.lar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.zip.ZipWriter;
import com.liferay.portal.lar.LayoutCache;
import com.liferay.portal.lar.LayoutImporter;
import com.liferay.portal.lar.PortletDataContextImpl;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.LayoutSet;
import com.liferay.portal.model.LayoutWrapper;
import com.liferay.portal.model.Release;
import com.liferay.portal.model.ReleaseWrapper;
import com.liferay.portal.model.User;
import com.liferay.portal.model.UserGroupRole;
import com.liferay.portal.model.UserGroupRoleWrapper;
import com.liferay.portal.model.UserWrapper;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portal.util.PortalUtil;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portal.xml.QNameImpl;
import com.liferay.portlet.EventRequestImpl;
import com.liferay.portlet.journal.model.JournalArticle;
import com.liferay.portlet.journal.model.JournalArticleWrapper;
import groovy.lang.NonEmptySequence;
import groovy.swing.SwingBuilder;
import java.io.InputStream;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.Set;
import javax.portlet.PortletRequest;
import org.codehaus.groovy.runtime.IteratorClosureAdapter;
import org.dom4j.Element;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.util.UserDataElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LayoutImporter_ESTest extends LayoutImporter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      String string0 = layoutImporter0.importTheme((LayoutSet) null, (InputStream) null);
      assertNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try { 
        layoutImporter0.importLayoutSetPrototype((com.liferay.portal.kernel.lar.PortletDataContext) null, (User) null, "6A~ff", serviceContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.lar.LayoutImporter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "y+]&#>_-{*BAxe";
      String[] stringArray1 = layoutImporter0.appendPortletIds(stringArray0, stringArray0, "y+]&#>_-{*BAxe");
      assertEquals(25, stringArray1.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      MockFile mockFile0 = new MockFile("qCQyL+jw", "qCQyL+jw");
      // Undeclared exception!
      try { 
        layoutImporter0.importLayouts(10L, 10L, false, (Map<String, String[]>) null, mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portal.servlet.filters.cache.CacheUtil
         //
         verifyException("com.liferay.portal.lar.LayoutImporter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      UserDataElement userDataElement0 = new UserDataElement("org.jgroups.demos.ExecutionServiceDemo$SortingTwoByteCallable");
      ElementImpl elementImpl0 = new ElementImpl(userDataElement0);
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence();
      nonEmptySequence0.add((Object) elementImpl0);
      layoutImporter0.validateLayoutPrototypes(2089L, elementImpl0, nonEmptySequence0);
      assertFalse(elementImpl0.isReadOnly());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[1];
      String string0 = "ADD_TO_BOTTOM";
      stringArray1[0] = "ADD_TO_BOTTOM";
      layoutImporter0.appendPortletIds(stringArray1, stringArray0, "ADD_TO_BOTTOM");
      Hashtable<String, String[]> hashtable0 = new Hashtable<String, String[]>();
      ThemeDisplay themeDisplay0 = new ThemeDisplay();
      Layout layout0 = themeDisplay0.getLayout();
      LayoutWrapper layoutWrapper0 = new LayoutWrapper(layout0);
      String string1 = "Document";
      EventRequestImpl eventRequestImpl0 = new EventRequestImpl();
      // Undeclared exception!
      try { 
        PortalUtil.getSelectedUser((PortletRequest) eventRequestImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.util.PortalUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LayoutImporter layoutImporter0 = new LayoutImporter();
      UserDataElement userDataElement0 = new UserDataElement("org.apache.xpath.operations.Variable");
      ElementImpl elementImpl0 = new ElementImpl(userDataElement0);
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence();
      Boolean boolean0 = new Boolean("org.apache.xpath.operations.Variable");
      layoutImporter0.validateLayoutPrototypes(0L, elementImpl0, nonEmptySequence0);
      HashMap<String, String[]> hashMap0 = new HashMap<String, String[]>();
      SwingBuilder swingBuilder0 = new SwingBuilder((boolean) boolean0);
      LayoutImporter layoutImporter1 = new LayoutImporter();
      IteratorClosureAdapter<PortalException> iteratorClosureAdapter0 = new IteratorClosureAdapter<PortalException>(layoutImporter1);
      Set<String> set0 = swingBuilder0.getRegistrationGroups();
      Release release0 = mock(Release.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(release0).getBuildDate();
      ReleaseWrapper releaseWrapper0 = new ReleaseWrapper(release0);
      releaseWrapper0.getBuildDate();
      PortletDataContextImpl portletDataContextImpl0 = new PortletDataContextImpl(0L, 0L, hashMap0, set0, (Date) null, (Date) null, (ZipWriter) null);
      UserGroupRole userGroupRole0 = mock(UserGroupRole.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(userGroupRole0).getUser();
      UserGroupRoleWrapper userGroupRoleWrapper0 = new UserGroupRoleWrapper(userGroupRole0);
      userGroupRoleWrapper0.getUser();
      UserWrapper userWrapper0 = new UserWrapper((User) null);
      LayoutCache layoutCache0 = new LayoutCache();
      Hashtable<Long, Layout> hashtable0 = new Hashtable<Long, Layout>();
      try { 
        layoutImporter0.importLayout(portletDataContextImpl0, userWrapper0, layoutCache0, nonEmptySequence0, nonEmptySequence0, hashtable0, "org.apache.xpath.operations.Variable", "Cannot evaluate expression:", "Cannot evaluate expression:", "Cannot evaluate expression:", (boolean) boolean0, (boolean) boolean0, (boolean) boolean0, (boolean) boolean0, elementImpl0, elementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
