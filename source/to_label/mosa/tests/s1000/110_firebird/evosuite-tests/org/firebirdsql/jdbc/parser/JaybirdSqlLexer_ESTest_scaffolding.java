/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Aug 07 13:48:19 GMT 2018
 */

package org.firebirdsql.jdbc.parser;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class JaybirdSqlLexer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.firebirdsql.jdbc.parser.JaybirdSqlLexer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/evosuite_readability_gen/projects/110_firebird"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JaybirdSqlLexer_ESTest_scaffolding.class.getClassLoader() ,
      "org.antlr.runtime.CommonTokenStream",
      "org.antlr.runtime.ClassicToken",
      "org.antlr.runtime.MismatchedTreeNodeException",
      "org.antlr.runtime.TokenStream",
      "org.antlr.runtime.MissingTokenException",
      "org.antlr.runtime.MismatchedNotSetException",
      "org.antlr.runtime.MismatchedRangeException",
      "org.antlr.runtime.TokenRewriteStream$ReplaceOp",
      "org.antlr.runtime.ANTLRStringStream",
      "org.antlr.runtime.TokenRewriteStream$InsertBeforeOp",
      "org.antlr.runtime.EarlyExitException",
      "org.antlr.runtime.IntStream",
      "org.antlr.runtime.ANTLRReaderStream",
      "org.firebirdsql.jdbc.parser.JaybirdSqlLexer",
      "org.antlr.runtime.TokenRewriteStream$RewriteOperation",
      "org.antlr.runtime.RecognitionException",
      "org.antlr.runtime.BufferedTokenStream",
      "org.antlr.runtime.Token",
      "org.antlr.runtime.LegacyCommonTokenStream",
      "org.antlr.runtime.BitSet",
      "org.antlr.runtime.UnwantedTokenException",
      "org.antlr.runtime.CharStream",
      "org.antlr.runtime.ANTLRInputStream",
      "org.antlr.runtime.MismatchedSetException",
      "org.antlr.runtime.MismatchedTokenException",
      "org.antlr.runtime.TokenSource",
      "org.antlr.runtime.tree.TreeNodeStream",
      "org.antlr.runtime.CharStreamState",
      "org.antlr.runtime.TokenRewriteStream",
      "org.firebirdsql.jdbc.parser.JaybirdSqlLexer$DFA13",
      "org.antlr.runtime.BaseRecognizer",
      "org.antlr.runtime.Lexer",
      "org.antlr.runtime.CommonToken",
      "org.antlr.runtime.NoViableAltException",
      "org.antlr.runtime.RecognizerSharedState",
      "org.antlr.runtime.DFA"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JaybirdSqlLexer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.antlr.runtime.BaseRecognizer",
      "org.antlr.runtime.Lexer",
      "org.antlr.runtime.DFA",
      "org.firebirdsql.jdbc.parser.JaybirdSqlLexer",
      "org.firebirdsql.jdbc.parser.JaybirdSqlLexer$DFA13",
      "org.antlr.runtime.CommonToken",
      "org.antlr.runtime.ClassicToken",
      "org.antlr.runtime.RecognizerSharedState",
      "org.antlr.runtime.ANTLRStringStream",
      "org.antlr.runtime.ANTLRReaderStream",
      "org.antlr.runtime.RecognitionException",
      "org.antlr.runtime.MismatchedTokenException",
      "org.antlr.runtime.ANTLRInputStream",
      "org.antlr.runtime.BufferedTokenStream",
      "org.antlr.runtime.CommonTokenStream",
      "org.antlr.runtime.TokenRewriteStream",
      "org.antlr.runtime.misc.FastQueue",
      "org.antlr.runtime.misc.LookaheadStream",
      "org.antlr.runtime.UnbufferedTokenStream",
      "org.antlr.runtime.BitSet",
      "org.antlr.runtime.ANTLRFileStream",
      "org.antlr.runtime.CharStreamState",
      "org.antlr.runtime.MismatchedSetException",
      "org.antlr.runtime.EarlyExitException",
      "org.antlr.runtime.LegacyCommonTokenStream",
      "org.antlr.runtime.NoViableAltException",
      "org.antlr.runtime.Token",
      "org.antlr.runtime.MismatchedRangeException"
    );
  }
}
